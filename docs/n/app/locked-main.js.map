{"version":3,"file":"locked-main.js","mappings":"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CACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,yC","sources":["webpack://wordle/./web/n/src/np.js","webpack://wordle/./web/n/src/numberplace.js","webpack://wordle/./web/n/src/tinymtjs.js","webpack://wordle/webpack/bootstrap","webpack://wordle/./web/n/src/locked.js"],"sourcesContent":["const TinyMTJS = require('./tinymtjs');\nconst NumberPlace6 = require('./numberplace');\n\nconst LINESIZE = 6;\nconst PUZZLE = {};\nPUZZLE.etitle = \"numpl6\";\nPUZZLE.jtitle = \"ミニナンプレ6\";\nPUZZLE.seed = \"\";\nvar APP = {};\nconst NP6 = new NumberPlace6();\n//var PRARRAY = [\"123\",\"456\"];\n\nfunction formatDate(date) {\n    const y = date.getFullYear();\n    const m = date.getMonth() + 1;\n    const d = date.getDate();\n    const ms = (\"0\" + m).substr(-2);\n    const ds = (\"0\" + d).substr(-2);\n    return y + \"-\" + ms + \"-\" + ds;\n}\n\nfunction formatTime(basesec) {\n    const sec = basesec % 60;\n    const min = (Math.floor(basesec / 60)) % 60;\n    const hour = Math.floor(basesec / 3600);\n    const hs = (\"0\" + hour).substr(-2);\n    const mins = (\"0\" + min).substr(-2);\n    const secs = (\"0\" + sec).substr(-2);\n    return hs + \":\" + mins + \":\" + secs;\n}\n\nfunction nokori(date, option) {\n    const result = {};\n    const dd = new Date(date);\n    //const secs = 0;\n    switch (option) {\n    case \"day\":\n        dd.setHours(23);\n        dd.setMinutes(59);\n        dd.setSeconds(59);\n        result.seconds = Math.ceil((dd.getTime() - date.getTime()) / 1000);\n        break;\n    case \"hour\":\n        dd.setMinutes(59);\n        dd.setSeconds(59);\n        result.seconds = Math.ceil((dd.getTime() - date.getTime()) / 1000);\n        break;\n    default:\n        dd.setMinutes(Math.ceil(date.getMinutes() / 10) * 10);\n        dd.setSeconds(59);\n        result.seconds = Math.ceil((dd.getTime() - date.getTime())/ 1000);\n    }\n    result.text = formatTime(result.seconds);\n    return result;\n}\n\nclass Seed {\n    constructor(date, info, strhash) {\n        this.type = info.type;\n        this.uniq = this.type + info.uniq;\n        switch (this.type) {\n        case \"hour\" :\n            this.subtitle = \"random\";\n            this.seed = [strhash, info.uniq, (date.getTime() & 0xffffffff)];\n            break;\n        case \"min\":\n            this.subtitle = \"random\";\n            this.seed = [strhash, info.uniq, (date.getTime() & 0xffffffff)];\n            break;\n        default:\n            const y = date.getFullYear();\n            const m = date.getMonth() + 1;\n            const d = date.getDate();\n            this.subtitle = formatDate(date);\n            this.seed = [strhash, info.uniq, y, m, d];\n            break;\n        }\n        const noko = nokori(date,this.type);\n        this.nokori = noko.text;\n        this.seconds = noko.seconds;\n        this.time = date.getTime();\n    }\n    finish() {\n        const date = new Date();\n        const diff = Math.ceil((date.getTime() - this.time) / 1000);\n        const timeout = diff >= this.seconds;\n        if (!timeout) {\n            this.seconds = this.seconds - diff;\n        } else {\n            this.seconds = 0;\n        }\n    }\n}\n\nfunction addClass(element, str) {\n    element.classList.add(str);\n}\n\nfunction deleteClass(element, str) {\n    element.classList.remove(str);\n}\n\nfunction clearClass(str) {\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName(\"span\");\n    for (var i = 0; i < sp.length; i++) {\n        deleteClass(sp[i], str);\n    }\n}\n\nfunction empString(str) {\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName(\"span\");\n    for (var i = 0; i < sp.length; i++) {\n        if (sp[i].textContent.includes(str)) {\n            addClass(sp[i], \"e\");\n        }\n    }\n}\n\nfunction setStringAtSelectedEl(str) {\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName(\"span\");\n    for (var i = 0; i < sp.length; i++) {\n        if (sp[i].classList.contains(\"s\")) {\n            sp[i].textContent = str;\n            sp[i].classList.remove('w');\n            sp[i].classList.remove('p');\n            break;\n        }\n    }\n}\n\nfunction getSelectedPos(sp) {\n    for (var i = 0; i < sp.length; i++) {\n        if (sp[i].classList.contains(\"s\")) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nfunction delStringAtSelectedEl(str) {\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName(\"span\");\n    for (var i = 0; i < sp.length; i++) {\n        if (sp[i].classList.contains(\"s\")){\n            if (sp[i].classList.contains(\"p\")) {\n                sp[i].textContent = sp[i].textContent.replace(str, \"\");\n            }\n            break;\n        }\n    }\n}\n\nfunction keypush() {\n    clearClass(\"e\");\n    if (APP.owari) {\n        return;\n    }\n    const str = this.textContent;\n    setStringAtSelectedEl(str);\n    empString(str);\n    clearClass(\"s\");\n}\n\nfunction delkey() {\n    clearClass(\"e\");\n    if (APP.owari) {\n        return;\n    }\n    const str = this.textContent;\n    delStringAtSelectedEl(str);\n    clearClass(\"s\");\n}\n\nfunction select() {\n    if (APP.owari) {\n        return;\n    }\n    clearClass(\"s\");\n    addClass(this, \"s\");\n}\n/*\nfunction makeBoard(prstr, len, width, height, fn) {\n    var result = \"\";\n    var c = 0;\n    for (var i = 0; i < len; i++) {\n        const ba = [];\n        //var rl = \"\";\n        if (i % 2 == 1 && i != len - 1) {\n            ba.push(\"b\");\n        }\n        for (var j = 0; j < len; j++) {\n            const ra = ba.concat([]);\n            var click = \"\";\n            const str = prstr[c++];\n            if (j % 3 == 2 && j != len - 1) {\n                ra.push(\"r\");\n            }\n            if (str != \" \") {\n                ra.push(\"fx\");\n            } else if (fn != ''){\n                click = \"onclick='\" + fn + \"(this)'\";\n            }\n            //\n            var cl = ra.join(\" \");\n            if (cl != \"\") {\n                cl = \"class='\" + cl + \"'\";\n            }\n            result += \"<span \" + cl + \" \" + click + \">\" + str + \"</span>\";\n        }\n    }\n    return result;\n}\n*/\nfunction makeBoard(element, prstr, len, width, height, func) {\n    //console.log(\"prstr:\"+prstr);\n    var c = 0;\n    for (var i = 0; i < len; i++) {\n        //const ba = [];\n        var ba = false;\n        //if ((i % height == height -1) && (i != len - 1)) {\n        if ((i % 2 == 1) && (i != len - 1)) {\n            ba = true;\n        }\n        for (var j = 0; j < len; j++) {\n            var sp = document.createElement('span');\n            if (ba) {\n                sp.classList.add('b');\n            }\n            //const ra = ba.concat([]);\n            //if ((j % width == width - 1) && j != len - 1) {\n            if ((j % 3 == 2) && j != len - 1) {\n                sp.classList.add('r');\n            }\n            const str = prstr[c++];\n            if (str != \" \") {\n                sp.classList.add('fx');\n            } else if (func != null) {\n                sp.onclick = func;\n            }\n            sp.textContent = str;\n            element.appendChild(sp);\n        }\n    }\n    //console.log(element);\n}\n\n/*\nfunction makeKey(str, fn) {\n    var result = \"\";\n    for (var i = 0; i < str.length; i++) {\n        if (fn != '') {\n            result += \"<span onclick='\" + fn + \"(this)'>\" + str[i] + \"</span>\";\n        } else {\n            result += \"<span>\" + str[i] + \"</span>\";\n        }\n    }\n    return result;\n}\n*/\n\nfunction makeKey(element, str, func) {\n    var result = \"\";\n    for (var i = 0; i < str.length; i++) {\n        const sp = document.createElement('span');\n        sp.textContent = str[i];\n        if (func != null) {\n            sp.onclick = func;\n        }\n        element.appendChild(sp);\n    }\n}\n\nfunction getLocationInfo() {\n    const info = {};\n    const searchParams = new URLSearchParams(window.location.search);\n    info.type = searchParams.get('t');\n    if (info.type != 'hour' && info.type != 'min') {\n        info.type = 'day';\n    }\n    if (searchParams.has('str')) {\n        info.str = searchParams.get('str');\n        info.str = (info.str + \"123456789\").substring(0, LINESIZE);\n    } else {\n        info.str = \"123456789\".substring(0, LINESIZE);\n    }\n    if (searchParams.has('uniq')) {\n        info.uniq = searchParams.get('uniq');\n    } else {\n        info.uniq = 1;\n    }\n    return info;\n}\n\nfunction makeClipStr(title, problem, tourl) {\n    const space = \"\\u{2b1c}\";\n\n    var result = title + \"\\n\";\n    for (var i = 0; i < problem.length; i++) {\n        if (problem[i] == ' ') {\n            result += space;\n        } else {\n            result += problem[i];\n        }\n        if (i % LINESIZE == LINESIZE -1) {\n            result += \"\\n\";\n        }\n    }\n    result += \"clear!\\n\";\n    result += tourl + \"\\n\";\n    return result;\n}\n\nfunction copyButton() {\n    var str = makeClipStr(PUZZLE.title, APP.problem, location.href);\n    if (navigator.clipboard) {\n        navigator.clipboard.writeText(str);\n    }\n}\n\nfunction success_end() {\n    const check = document.getElementById('check');\n    check.disabled=true;\n    check.hidden=true;\n    const penb = document.getElementById('pen');\n    penb.hidden=true;\n    const reset = document.getElementById('reset');\n    reset.hidden=true;\n    const key2 = document.getElementById('key2');\n    key2.hidden=true;\n    const kekka = document.getElementById('result');\n    const button = document.getElementById('copy');\n    const next = document.getElementById('nextgame');\n    APP.owari = true;\n    kekka.hidden = false;\n    button.hidden = false;\n    next.hidden = false;\n    button.disabled = false;\n    var kaisu = \"\";\n    if (APP.checkCnt == 1) {\n        kaisu = \"一発クリア、\";\n    } else {\n        kaisu += APP.checkCnt + \"回試行でのクリア、\";\n    }\n    kekka.textContent = kaisu + 'おめでとうございます';\n    PUZZLE.seed.finish();\n    setCookie(PUZZLE.etitle+PUZZLE.seed.uniq, APP, PUZZLE.seed.seconds);\n}\n\nfunction checkButton() {\n    if (APP.owari) {\n        return;\n    }\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName(\"span\");\n\n    var str = \"\";\n    for (var i = 0; i < sp.length; i++) {\n        str += sp[i].textContent;\n    }\n    APP.checkCnt++;\n    if (NP6.check(sp)) { // check and warninig set\n        APP.answer = str;\n        success_end();\n    } else {\n        console.log('check NG');\n    }\n}\n\nfunction makeDict(str) {\n    var result = str.split('');\n    const res = [];\n    for (var i = 0; i < result.length; i++) {\n        res[(i+1).toString()] = result[i];\n    }\n    res['0'] = '0';\n    res[' '] = ' ';\n    return res;\n}\n\nfunction replace(org, str) {\n    const dict = makeDict(str);\n    const result = org.split('').map(x => dict[x]).join('');\n    return result;\n}\n\nfunction setCookie(title, app, seconds) {\n    const fixstr = \"; SameSite=Lax;\";\n    var data = encodeURIComponent(JSON.stringify(app));\n    document.cookie = title + \"=\" + data + fixstr + \" max-age=\" + seconds;\n}\n\nfunction getCookie(title) {\n    const cookieArray = new Array();\n    if(document.cookie){\n        const tmp = document.cookie.split('; ');\n        for(let i=0;i<tmp.length;i++){\n            const data = tmp[i].split('=');\n            cookieArray[data[0]] = decodeURIComponent(data[1]);\n        }\n    }\n    const cookie = cookieArray[title];\n    if (!cookie) {\n        return \"\";\n    } else {\n        return cookie;\n    }\n}\nfunction pen() {\n    const key2 = document.getElementById('key2');\n    key2.hidden=false;\n    const penb = document.getElementById('pen');\n    penb.disabled=true;\n}\n\nfunction pencilMark() {\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName('span');\n    const p = getSelectedPos(sp);\n    if (p >= 0) {\n        NP6.pencilMarkPos(sp, p, APP.keystr);\n    }\n    clearClass(\"s\");\n    clearClass(\"e\");\n}\n\nfunction reset() {\n    if (APP.owari) {\n        return;\n    }\n    const board = document.getElementById('board');\n    const sp = board.getElementsByTagName('span');\n    for (var i = 0; i < sp.length; i++) {\n        if (!sp[i].classList.contains('fx')) {\n            sp[i].classList.remove('w');\n            sp[i].classList.remove('p');\n            sp[i].classList.remove('s');\n            sp[i].textContent = ' ';\n        }\n    }\n    APP.checkCnt++;\n}\n\n/*\nfunction nofunc() {\n}\n*/\nfunction setBoard(board, answer) {\n    const sp = board.getElementsByTagName(\"span\");\n    for (var i = 0; i < sp.length; i++) {\n        if (sp[i].textContent == ' ') {\n            sp[i].textContent = answer[i];\n        }\n    }\n}\n\nfunction restoreBoard(app) {\n    //const bd = makeBoard(app.problem, 6, 3, 2, '');\n    const board = document.getElementById('board');\n    //board.innerHTML = bd;\n    makeBoard(board, app.problem, 6, 3, 2, null);\n    setBoard(board, app.answer);\n    const keystr = APP.keystr + \" \";\n    //const ky = makeKey(keystr, '');\n    const key = document.getElementById('key');\n    //key.innerHTML = ky;\n    makeKey(key, keystr, null);\n    /*\n    const key2 = document.getElementById('key2');\n    if (key2) {\n        const pre = \"<span>&#x1f4dd;</span>\";\n        const ky2 = pre + makeKey(APP.keystr, '');\n        key2.innerHTML = ky2;\n    }\n    */\n}\n\nfunction processCookie(cookie) {\n    APP = JSON.parse(cookie);\n    restoreBoard(APP);\n    if (APP.owari) {\n        const check = document.getElementById('check');\n        check.disabled=true;\n        check.hidden=true;\n        const penb = document.getElementById('pen');\n        penb.hidden=true;\n        const reset = document.getElementById('reset');\n        reset.hidden=true;\n        const key2 = document.getElementById('key2');\n        key2.hidden=true;\n        const button = document.getElementById('copy');\n        button.disabled = false;\n        button.hidden = false;\n        const kekka = document.getElementById('result');\n        kekka.textContent = \"次のゲームまであと \" + PUZZLE.seed.nokori;\n        const nextgame = document.getElementById('nextgame');\n        nextgame.hidden = false;\n    }\n}\n\nfunction processDark() {\n    const userMod = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const sMode = window.sessionStorage.getItem('user');\n    const el = document.documentElement;\n\n    if(sMode) {\n        el.setAttribute('theme', sMode);\n    } else {\n        if(userMod == true) {\n            el.setAttribute('theme', 'dark');\n        } else {\n            el.setAttribute('theme', 'light');\n        }\n    }\n\n    document.getElementById(\"changeMode\").onclick = function() {\n        const nowMode = el.getAttribute('theme');\n        if(nowMode == 'dark') {\n            el.setAttribute('theme', 'light');\n            window.sessionStorage.setItem('user', 'light');\n        } else {\n            el.setAttribute('theme', 'dark');\n            window.sessionStorage.setItem('user', 'dark');\n        }\n    };\n}\n\nfunction setOnClick() {\n    const check = document.getElementById('check');\n    const button = document.getElementById('copy');\n    const penb = document.getElementById('pen');\n    const resetb = document.getElementById('reset');\n    check.onclick = checkButton;\n    button.onclick = copyButton;\n    penb.onclick = pen;\n    resetb.onclick = reset;\n}\n\n/*\nfunction dirty() {\n    const saved = window.sessionStorage.getItem('saved');\n    if(saved) {\n        PRARRAY = saved;\n    }\n}\n*/\nfunction init(prarray, prtype) {\n    //dirty();\n    processDark();\n    setOnClick();\n    const info = getLocationInfo();\n    const date = new Date();\n    const rand = new TinyMTJS(info.str);\n    PUZZLE.seed = new Seed(date, info, rand.getInt31());\n    rand.setSeed(PUZZLE.seed.seed);\n    const jtitle = PUZZLE.jtitle + prtype + \"(\" + info.str + \")\";\n    const pagetitle = document.getElementById('title');\n    pagetitle.textContent = jtitle;\n    PUZZLE.title = jtitle + PUZZLE.seed.subtitle;\n    var cookie = getCookie(PUZZLE.etitle+PUZZLE.seed.uniq);\n    if (cookie) {\n        processCookie(cookie);\n        if (APP.owari) {\n            return;\n        }\n    }\n    const kekka = document.getElementById('result');\n    //var check = document.getElementById('check');\n    const button = document.getElementById('copy');\n    const next = document.getElementById('nextgame');\n    kekka.hidden = true;\n    button.hidden = true;\n    next.hidden = true;\n    kekka.textContent = '';\n\n    var prstr = prarray[rand.getInt(prarray.length)];\n    prstr = NP6.convert(prstr.split(''), rand).join('');\n    prstr = replace(prstr, info.str);\n    APP.problem = prstr;\n    APP.keystr = info.str;\n    APP.checkCnt = 0;\n    const keystr = info.str + \" \";\n    //const bd = makeBoard(prstr, 6, 3, 2, 'select');\n    const board = document.getElementById('board');\n    //board.innerHTML = bd;\n    makeBoard(board, prstr, 6, 3, 2, select);\n    //const ky = makeKey(keystr, 'keypush');\n    const key = document.getElementById('key');\n    //key.innerHTML = ky;\n    makeKey(key, keystr, keypush);\n    const key2 = document.getElementById('key2');\n    if (key2) {\n        //const pre = \"<span onclick='pencilMark()'>&#x1f4dd;</span>\";\n        //const ky2 = pre + makeKey(APP.keystr, 'delkey');\n        //key2.innerHTML = ky2;\n        //makeKey(key2, \"\\u{1f4dd}\"+ APP.keystr, delkey);\n        const sp = document.createElement('span');\n        sp.textContent = \"\\u{1f4dd}\";\n        sp.onclick = pencilMark;\n        key2.appendChild(sp);\n        makeKey(key2, APP.keystr, delkey);\n        //const sps = key2.getElementsByTagName('span');\n    }\n}\n\n//window.onload = init;\nmodule.exports = init;\n","const lineSize = 6;\nconst blockRows = 2;\nconst blockCols = 3;\nconst allSymbols = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"];\nconst rows = [\n    [0, 1, 2, 3, 4, 5],\n    [6, 7, 8, 9, 10, 11],\n    [12, 13, 14, 15, 16, 17],\n    [18, 19, 20, 21, 22, 23],\n    [24, 25, 26, 27, 28, 29],\n    [30, 31, 32, 33, 34, 35]\n];\n\nconst cols = [\n    [0, 6, 12, 18, 24, 30],\n    [1, 7, 13, 19, 25, 31],\n    [2, 8, 14, 20, 26, 32],\n    [3, 9, 15, 21, 27, 33],\n    [4, 10, 16, 22, 28, 34],\n    [5, 11, 17, 23, 29, 35]\n];\n\nconst blocks = [\n    [0, 1, 2, 6, 7, 8],\n    [3, 4, 5, 9, 10, 11],\n    [12, 13, 14, 18, 19, 20],\n    [15, 16, 17, 21, 22, 23],\n    [24, 25, 26, 30, 31, 32],\n    [27, 28, 29, 33, 34, 35]\n];\n\nfunction tocol(pos) {\n    return pos % lineSize;\n}\nfunction torow(pos) {\n    return Math.floor(pos / lineSize);\n}\nfunction toblk(index) {\n    return Math.floor(torow(index) / blockRows) * blockRows +\n        Math.floor(tocol(index) / blockCols);\n}\n\nfunction getCounterPos(pos, mode) {\n    var x = tocol(pos);\n    var y = torow(pos);\n    const half = Math.floor(lineSize / 2);\n    if (x >= half) {\n        x = x - half + 1;\n    } else {\n        x = x - half;\n    }\n    if (y >= half) {\n        y = y - half + 1;\n    } else {\n        y = y - half;\n    }\n    switch (mode) {\n    case 0:\n        x = -x;\n        break;\n    case 1:\n        y = -y;\n        break;\n    case 2:\n        x = -x;\n        y = -y;\n    }\n    if (x >= 0) {\n        x = x + half - 1;\n    } else {\n        x = x + half;\n    }\n    if (y >= 0) {\n        y = y + half - 1;\n    } else {\n        y = y + half;\n    }\n    return rows[y][x];\n}\n\nfunction vl_change(array, vl1, vl2) {\n    for (var i = 0; i < lineSize; i++) {\n        const idx1 = vl1[i];\n        const idx2 = vl2[i];\n        const tmp = array[idx1];\n        array[idx1] = array[idx2];\n        array[idx2] = tmp;\n    }\n}\n\nclass NumberPlace6 {\n    convert(array, tiny) {\n        var result = this.randomizeElement(array, tiny);\n        //console.log(\"array:\");\n        //console.log(result);\n        var mode = tiny.getInt(4);\n        //console.log(\"mode:\"+mode);\n        if (mode != 3) {\n            result = this.reverseChange(result, mode);\n        }\n        //console.log(\"1result:\");\n        //console.log(result);\n        mode = tiny.getInt(2);\n        if (mode != 1) {\n            result = this.blockReverse(result);\n        }\n        //console.log(\"2result:\");\n        //console.log(result);\n        var marr = [];\n        for (var i = 0; i < 3; i++) {\n            marr.push(tiny.getInt(7));\n        }\n        result = this.lineChange(result, marr);\n        //console.log(\"3result:\");\n        //console.log(result);\n        return result;\n    }\n\n    getRandomSymbolArray(tiny) {\n        var result = allSymbols.slice();\n        //console.log(\"result:\"+result);\n        for (var i = 0; i < result.length; i++) {\n            const tmp = result[i];\n            const pos = tiny.getInt(result.length);\n            result[i] = result[pos];\n            result[pos] = tmp;\n        }\n        var res = [];\n        for (var i = 0; i < result.length; i++) {\n            res[(i+1).toString()] = result[i];\n        }\n        res['0'] = '0';\n        res[' '] = ' ';\n        return res;\n    }\n\n    randomizeElement(array, tiny) {\n        const rsa = this.getRandomSymbolArray(tiny);\n        return array.map(el => rsa[el]);\n    }\n\n    reverseChange(array, mode) {\n        //console.log(\"mode:\"+mode);\n        var work = [];\n        for (var i = 0; i < array.length; i++) {\n            work[i] = array[getCounterPos(i, mode)];\n        }\n        return work;\n    }\n\n    blockReverse(ar) {\n        var array = ar.slice();\n        var blo = [[0, 4], [1, 5]];\n        for (var i = 0; i < 2; i++) {\n            vl_change(array, blocks[blo[i][0]], blocks[blo[i][1]]);\n        }\n        return array;\n    }\n\n    lineChange(ar, marr) {\n        var array = ar.slice();\n        const change_line = [[cols[0], cols[1]],\n                             [cols[1], cols[2]], [cols[3], cols[4]],\n                             [cols[4], cols[5]], [rows[0], rows[1]],\n                             [rows[2], rows[3]], [rows[4], rows[5]]];\n        for (var i = 0; i < marr.length; i++) {\n            var x = marr[i];\n            vl_change(array, change_line[i][0], change_line[i][1]);\n        }\n        return array;\n    }\n    setWarn(element) {\n        if (!element.classList.contains('fx')) {\n            element.classList.add('w');\n        }\n    }\n    setPencil(element) {\n        if (!element.classList.contains('fx')) {\n            element.classList.add('p');\n        }\n    }\n    vlCheck(elements, vline) {\n        var error = false;\n        for (var i = 0; i < vline.length; i++) {\n            const p = vline[i];\n            for (var j = 0; j < vline.length; j++) {\n                const q = vline[j];\n                if (i == j) {\n                    continue;\n                }\n                if (elements[p].textContent == elements[q].textContent) {\n                    error = true;\n                    //console.log('check ng 2 p='+p+' q='+q);\n                    this.setWarn(elements[p]);\n                    this.setWarn(elements[q]);\n                }\n            }\n        }\n        return !error;\n    }\n    check(elements) {\n        var error = false;\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].textContent == ' ') {\n                error = true;\n                this.setWarn(elements[i]);\n                //console.log('check ng 1 i='+i);\n            }\n        }\n        if (error) {\n            return false;\n        }\n        const vls = [rows, cols, blocks];\n        for (var k = 0; k < vls.length; k++) {\n            var vl = vls[k];\n            for (var i = 0; i < vl.length; i++) {\n                const line = vl[i];\n                var ok = this.vlCheck(elements, line);\n                //console.log('ok='+ok);\n                if (!ok) {\n                    error = true;\n                }\n            }\n        }\n        //console.log('error='+error+' !error='+!error);\n        return !error;\n    }\n\n    vl_delete(elements, vl, pos, str) {\n        result = str;\n        for (var i = 0; i < lineSize; i++) {\n            if (vl[i] == pos) {\n                continue;\n            }\n            //console.log(\"vl[i]=\"+vl[i]);\n            //console.log(elements[vl[i]]);\n            const con = elements[vl[i]].textContent;\n            //console.log(con);\n            if (con != ' ' && con.length == 1) {\n                result = result.replace(con, '');\n            }\n        }\n        return result;\n    }\n\n    delSymbol(elements, pos, keystr) {\n        var result  = keystr;\n        result = this.vl_delete(elements, rows[torow(pos)], pos, result);\n        result = this.vl_delete(elements, cols[tocol(pos)], pos, result);\n        result = this.vl_delete(elements, blocks[toblk(pos)], pos, result);\n        //result = result.split('').join(' ');\n        return result;\n    }\n    pencilMarkPos(elements, pos, keystr) {\n        this.setPencil(elements[pos]);\n        elements[pos].textContent = this.delSymbol(elements, pos, keystr);\n    }\n    pencilMark(elements, keystr) {\n        for (var i = 0; i < elements.length; i++) {\n            if (elements[i].textContent == ' ') {\n                this.setPencil(elements[i]);\n                elements[i].textContent = this.delSymbol(elements, i, keystr);\n            }\n        }\n    }\n}\n\nmodule.exports = NumberPlace6;\n","/**\n * @file tinymtjs.js\n *\n * @brief Tiny Mersenne Twister for Java Script.\n * Intitialization functions are modified to fit Javascript numbers.\n *\n * Originai authors:\n * @author Mutsuo Saito (Hiroshima University)\n * @author Makoto Matsumoto (The University of Tokyo)\n *\n * Copyright (C) 2011 Mutsuo Saito, Makoto Matsumoto,\n * Hiroshima University and The University of Tokyo.\n * All rights reserved.\n *\n * modified by\n * @author Taro Suginami\n * Copyright (C) 2022 Taro Suginami.\n * All rights reserved.\n *\n * original program is TinyMT32.java\n * http://www.math.sci.hiroshima-u.ac.jp/m-mat/MT/TINYMT/JAVA/index.html\n *\n * parameters, (mat1, mat2, tmat) are taken from\n * http://www.math.sci.hiroshima-u.ac.jp/m-mat/MT/TINYMT/DATA/index.html\n * tinymt32dc.0-4.65536.tar.gz\n * tinymt32dc.0.65536.txt\n * last line\n * ab5a14fcfae73ebad2addf92bef887b1,32,0,e99e1d33,42f090bd,ac3ff3ff,77,0\n *\n */\n/*\nCopyright (c) 2011, 2013 Mutsuo Saito, Makoto Matsumoto,\nHiroshima University and The University of Tokyo.\nAll rights reserved.\nCopyright (C) 2022 Taro Suginami.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of the Hiroshima University nor the names of\n      its contributors may be used to endorse or promote products\n      derived from this software without specific prior written\n      permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nconst MMMM    = 0xffffffff;\nconst UNSMASK = 0x7fffffff;\nconst MIN_LOOP = 8;\nconst MASK = 0x7fffffff;\nconst MAT1 = 0xe99e1d33;\nconst MAT2 = 0x42f090bd;\nconst TMAT = 0xac3ff3ff;\nconst SH0 = 1;\nconst SH1 = 10;\nconst SH8 = 8;\n\nfunction ini_func1JS(x) {\n    x = (x ^ (x >>> 27) ^ (x << 19)) & UNSMASK;\n    return (x * 26125) & MMMM;\n}\nfunction ini_func2JS(x) {\n    x = (x ^ (x >>> 27) ^ (x << 19)) & UNSMASK;\n    return (x * 559973) & MMMM;\n}\n\nclass TinyMTJS {\n    constructor(seed) {\n        this.st0 = 0;\n        this.st1 = 0;\n        this.st2 = 0;\n        this.st3 = 0;\n        this.setSeed(seed);\n    }\n    setSeed(seed) {\n        if (typeof seed === 'string' || seed instanceof String) {\n            var aseed = seed.split('').map((v) => v.charCodeAt());\n            this.setSeedArray(aseed);\n        } else if (Array.isArray(seed)) {\n            this.setSeedArray(seed);\n        } else {\n            this.setSeedNumber(seed);\n        }\n    }\n    // Seeding for Java Script, modified by Taro Suginami\n    // private\n    setSeedNumber(seed) {\n        var status = Array(4);\n        status[0] = seed & MMMM;\n        status[1] = MAT1;\n        status[2] = MAT2;\n        status[3] = TMAT;\n        for (var i = 1; i < MIN_LOOP; i++) {\n            var x = status[(i - 1) & 3];\n            x = x ^ (x >>> 30) ^ (x << 17);\n            status[i & 3] ^= i + 30157 * (x & UNSMASK);\n        }\n        this.st0 = status[0];\n        this.st1 = status[1];\n        this.st2 = status[2];\n        this.st3 = status[3];\n        if (((this.st0 & MASK) == 0) &&\n            (this.st1 == 0) &&\n            (this.st2 == 0) &&\n            (this.st3 == 0)) {\n            this.st0 = 'T'.charCodeAt(0);\n            this.st1 = 'I'.charCodeAt(0);\n            this.st2 = 'N'.charCodeAt(0);\n            this.st3 = 'Y'.charCodeAt(0);\n        }\n        for (var i = 0; i < MIN_LOOP; i++) {\n            this.next();\n        }\n    }\n    // Seeding for Java Script, modified by Taro Suginami\n    // private\n    setSeedArray(init_key) {\n        if (!Array.isArray(init_key)) {\n            throw new Error('TinyMTJS.setSeedArray: Seed type mismatch.');\n        }\n        const lag = 1;\n        const mid = 1;\n        const size = 4;\n        var i;\n        var j;\n        var count;\n        var r;\n        var status = Array(4);\n        var key_length;\n\n        key_length = init_key.length;\n        status[0] = 0;\n        status[1] = MAT1;\n        status[2] = MAT2;\n        status[3] = TMAT;\n        if (key_length + 1 > MIN_LOOP) {\n            count = key_length + 1;\n        } else {\n            count = MIN_LOOP;\n        }\n        r = ini_func1JS(status[0] ^ status[mid % size] ^\n                        status[(size - 1) % size]);\n        status[mid % size] = (status[mid % size] + r) & MMMM;\n        r = (r + key_length);// & UNSMASK;\n        status[(mid + lag) % size] = (status[(mid + lag) % size] + r) & MMMM;\n        status[0] = r;\n        count--;\n        for (i = 1, j = 0; (j < count) && (key_length > 0); j++) {\n            r = ini_func1JS(status[i % size] ^\n                            status[(i + mid) % size] ^\n                            status[(i + size - 1) % size]);\n            status[(i + mid) % size] = (status[(i + mid) % size] + r) & MMMM;\n            r = (r + init_key[j % key_length] + i) & MMMM;\n            status[(i + mid + lag) % size] =\n                (status[(i + mid + lag) % size] + r) & MMMM;\n            status[i % size] = r;\n            i = (i + 1) % size;\n        }\n        for (j = 0; j < size; j++) {\n            r = ini_func2JS(status[i % size] +\n                            status[(i + mid) % size] +\n                            status[(i + size - 1) % size]);\n            status[(i + mid) % size] ^= r;\n            r -= i;\n            status[(i + mid + lag) % size] ^= r;\n            status[i % size] = r;\n            i = (i + 1) % size;\n        }\n        this.st0 = status[0];\n        this.st1 = status[1];\n        this.st2 = status[2];\n        this.st3 = status[3];\n        if (((this.st0 & MASK) == 0) &&\n            (this.st1 == 0) &&\n            (this.st2 == 0) &&\n            (this.st3 == 0)) {\n            this.st0 = 'T'.charCodeAt(0);\n            this.st1 = 'I'.charCodeAt(0);\n            this.st2 = 'N'.charCodeAt(0);\n            this.st3 = 'Y'.charCodeAt(0);\n        }\n        for (var i = 0; i < MIN_LOOP; i++) {\n            this.next();\n        }\n    }\n\n    getInt31() {\n        var v = this.next();\n        return v >>> 1;\n    }\n\n    getDouble31() {\n        return (this.getInt31() * 1.0) / 0x80000000;// 31bit int to double\n    }\n\n    getInt(max) {\n        return Math.floor(this.getDouble31() * max);\n    }\n\n    next() {\n        var y = this.st3;\n        var x = (this.st0 & MASK) ^ this.st1 ^ this.st2;\n        x ^= (x << SH0) & MMMM;\n        y ^= (y >>> SH0) ^ x;\n        this.st0 = this.st1;\n        this.st1 = this.st2;\n        this.st2 = x ^ ((y << SH1) & MMMM);\n        this.st3 = y;\n        if ((y & 1) == 1) {\n            this.st1 ^= MAT1;\n            this.st2 ^= MAT2;\n        }\n        var t0 = this.st3;\n        var t1 = (this.st0 + (this.st2 >>> SH8)) & MMMM;\n        t0 ^= t1;\n        if ((t1 & 1) == 1) {\n            t0 ^= TMAT;\n        }\n        return t0;\n    }\n}\n\nmodule.exports = TinyMTJS;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const init = require('./np');\nwindow.onload = function() {init(PRARRAY, 'L');};\nconst PRARRAY = [\n\"   435         16  3    5    2 42   \",\n\"   365         14  6    5    2 32   \",\n\"251         63       5    4  1   24 \",\n\" 1 4      156 2        3      345   \",\n\"   14 4 1  2 36      5  215         \",\n\" 2 16     5       1 6    3    6 53  \",\n\"  6   1 2 5    1 2      3  6 1    3 \",\n\"   543       3        264      5 1  \",\n\"   4    3  1     26  5        412   \",\n\"         53 4 23    542       1 3 45\",\n\"3   1   6      6  5    1 42   1     \",\n\"  3   4 25   2         36   2  4  6 \",\n\"     526 1   4  5   13       61     \",\n\"   2   4   54    6  2     3    5    \",\n\"   1 4       1 4 36     1   5  2    \",\n\"6   1      4 6  5   4     21  1     \",\n\"     4   25   6 4  4  6143      2   \",\n\"3 4    1     3 2 5  5  46   4     3 \",\n\"   2      45 2 6 33    2 12   4     \",\n\" 21   5  1    3 5     34 1    6    5\",\n\"   52  2   6     33 42  16      2   \",\n\"   1   1  52   3 6 6   14 1    5    \",\n\" 1    4 5 1  62     1 2    1 3    4 \",\n\"    5    34    4    1  6  5 6  4    \",\n\"        3 54 2    6   4       3 4 6 \",\n\"      6  31  5      4   1 64       1\",\n\"1 3    4     52 4     3 2   1    4  \",\n\" 13      1     3 6  5   4   3   1 2 \",\n\"    6   341    2  1     514     2   \",\n\"3     4 5 2      4  6       6    451\",\n\"   2   4     6    2  4 3 2  5 1   4 \",\n\"6        16    5 3  3    5  24 4    \",\n\"4 1 2   2  3    6   53   2         1\",\n\" 1  2      51  26 62       5   3  1 \",\n\"  4   32    6 5        3   4   6   2\",\n\"  6    3   254        5    324      \",\n\"5  3      6    1 4  4   135         \",\n\"    1 5  2    1    5 6  1 3   2 5   \",\n\"     446  3  36         2   6  5  1 \",\n\"  1  63  2      2 51   4 4        5 \",\n\"   352        4    3 4 5 6   32   1 \",\n\"  31 2     5  5 2 4      4  53   4  \",\n\" 5    2 65  3 2          2   6 4 3 2\",\n\" 56 2  3       5    4       4  4 165\",\n\" 261          14 3 34  66      1   2\",\n\"       56 1    2 4  4  631     4    \",\n\"1 2     61            63   4  4   32\",\n\"3    5  1   4 2       3  6   3   62 \",\n\"  6 3      56  41  4    3 1    2    \",\n\"   461        1 2 6      65   3    5\",\n\"1    3  4      2 62       5 3  1  4 \",\n\"2 61            43  3  21       52  \",\n\" 3 42     6 5      4   3 2  3   1   \",\n\"15      2    4      3  5    6   532 \",\n\"    52   1   2 6       34     6 12  \",\n\"  531  3        6 62       5    3 4 \",\n\"3   4   13            125 41    25  \",\n\"  1  5 6    4     1   3   2 6    5 2\",\n\" 2   3   52 6     4    1  3    4  5 \",\n\"25 6          35 2     4      541   \",\n\"      536   1  3 2  2     3 6    5  \",\n\"3   4   2       1  14  6   432      \",\n\"   3 2    6 61     5  3   654 5     \",\n\"4      32     45 33    4      1   26\",\n\"51   3 4      3  1   6  23   5    2 \",\n\"4      3 4 6 5        25  3 6   13  \",\n\"6    2 2  4      4 5     41 2 2    1\",\n\"      1        6   6 42   2 4   5  3\",\n\"   5      61   2 6 3    5 4    1   4\",\n\" 25   1    54        6 3   2      31\",\n\"   6   4  1  5      243       416   \",\n\"  2  4 6         314 5           642\",\n\"  3    1   46 42      5          341\",\n\"341          6    5  2 6  41      3 \",\n\"  61      2  5    3  5 4      261   \",\n\"      132    5    4  65      1 2  3 \",\n\" 1 6  2      45  3    5          162\",\n\" 4  3 2         1  165           243\",\n\"   1 41      6        65  2     532 \",\n\"   54 5      321      3 2 6    4   6\",\n\" 52         5  4   4 3  6   4  3  16\",\n\" 5  6    2  4 13        342         \",\n\"        45 36   2   1            451\",\n\"  3   12    6 4 5   2      6 4     3\",\n\"  5  1   5 42   4 4   1      3 6    \",\n\"      132      4 5 54   6   3      1\",\n\"         6345   1   3  2  64 3      \",\n\"31 4      3   1  4  6  1 2       5  \",\n\"45  1      4  65    51   2        3 \",\n\"2 3  1  1 6  15             25     6\",\n\"       42  63  1 5 5   4      426   \",\n\"   142        4 23 26 5         12 4\",\n\"  2   31 5  46   1               643\",\n\"  1      3   2   5 4   26 2     426 \",\n\"      4 6  5 1 6 43    2642         \",\n\"  2 5 1  4           3  2 4  66 1  4\",\n\"      6  32 1  4      5 3 6    5   6\",\n\"  42   2  6  1   2   4        3 5   \",\n\"   6  5 6   4      1   3  13      4 \",\n\"   2 6 1  3 3          2 3  5   4   \",\n\"     5 6  1 6  1    5    34       3 \",\n\"    6  3 1      544     3    1  6   \",\n\"3 51             2 1 6    2   1  4  \",\n\"       651  3    1    4   4   1  2  \",\n\"12     5 1   4      35      5 4  3  \",\n\"  31    5    6  2 3    6    4 1  3  \",\n\"      51 3   46       1       2  13 \",\n\" 3    65         4  43 21  5      4 \",\n\"   2 1    5   25      1 34    5   3 \",\n\"  26      3 1      6 5      5   532 \",\n\"3      2     5  4   4  6   6   4  32\",\n\" 4   5    6    5    4 2     5  5 3 1\",\n\"   3  43  2      5 2      16  2   3 \",\n\"4 5  6         32   4   5 3 41      \",\n\"3 1  2     1  61     64 1 2    5    \",\n\"45     16    4   6  53     2 5    4 \",\n\"2    3   4  16     2  1    54   4  2\",\n\"   2      4563 4   4   3  5 1   4   \",\n\" 15   2     52   1   2  3 4 2      4\",\n\"       1 5 4 3  5 1   32       5 14 \",\n\" 4  2    5     3  6    43 1     5   \",\n\"     3 5   24      2 5    2    1  6 \",\n\"4 1  3       5 2       1  3 1     6 \",\n\" 1  362          1  24     5 2    1 \",\n\"26   4       2      615    6      23\",\n\"23         4  6      4 6 1   3 4  5 \",\n\"   3  6   45    5  2    5    42 1   \",\n\" 23  64        5   3      2  3    15\",\n\"         465  4 1 5     2    3  16  \",\n\"   461        2 1 3  5  4       6  2\",\n\" 4  3 5  6    62      1       215   \",\n\"614          4   23  5     6    2  1\",\n\" 6  1 5      1   34  2           536\",\n\"     1 2  4 4     53 4      5   1 3 \",\n\" 6   4 1    6  3    3 5    4  2    6\",\n\" 5   21       5   2   43  46      2 \",\n\"     4 4 5 25   6 2     4  3    6   \",\n\" 1  53 2      16  2      4 1      2 \",\n\"5  6    6          13 4  41  2   4  \",\n\"3  45      35  6     51 1 2     5   \",\n\"  4   3 5   4  6   3 4 12   6      3\",\n\"  3   1    625  3  3       2 3   1 4\",\n\"3 6    4      42   52  4   6 3    4 \",\n\"   1 5    3  3 2  42   33      15   \",\n\"1    4  2     6 5  5  61    45   2  \",\n\"2 6    45      65  5 4    2  6    3 \",\n\"   6 1   3  5  4    6 5 1 3    65   \",\n\"41  6        6 3  5    1    5  5 2 6\",\n\"2    343   2  54   4        5  6   4\",\n\" 64    1         3 2  1   6  2  24 6\",\n\"  34  2 43    1    5  4     5    23 \",\n\" 16  44      4   353       4      61\",\n\"   45     23 253   4 5   36   2     \",\n\"3 4  5      1 63  4   1      3 3 24 \",\n\"42      5   3   6  6  4    4 5 5  36\",\n\"1       64  4   626 2      5    5 14\",\n\"    64   3   1  5  6   16 3    516  \",\n\" 2  4 3   2  52  1  12  2  3   6    \",\n\" 63  2      3   15        2  1 152 3\",\n\"53      1     45      3  6  2      1\",\n\"  6   2  3 1        3 5 4    2 6    \",\n\"     2    13 2   53      4 5    3  4\",\n\"2   6  1  4    2 4     346      5   \",\n\"2  1  6 1     5  4    1     2  4 3  \",\n\"3  1  6 1    2   5   2  2  3      4 \",\n\"    21  1 6 2  5   4    53      2   \",\n\"3 4    1     2  3 6       5  2   1 5\",\n\"  1  35    1 4    21       5      42\",\n\"    16  15  4        24  5    3    1\",\n\"  5   324        42  3     152      \",\n\"  4  31       23     52  3 1       6\",\n\"  2    1  3 6   1 1    2   1   4   5\",\n\"  4 1      62  3  4  1    1   6   5 \",\n\"   2   3   6  15    5 1  1   24     \",\n\"  5  6 2       3    2  4 1  4 4   1 \",\n\"6       3  2 1 4  4  1    6  1    5 \",\n\"  62  3      6   1 1  6   54      2 \",\n\" 3 2      5   4 1   1  4 1 5  6     \",\n\"  2  3 1      3   6       53 2   5 4\",\n\"          124  3    6 5   2 656     \",\n\"        6 521   6  3    5 2 1      5\",\n\" 53  2  1    4  2 1  4      5    6  \",\n\"  61   5 2  2         4  4  23 3    \",\n\"     4 4 25 2   63 6     2 5        \",\n\"5            1  23  3  1 4 5    2 1 \",\n\"  4 6 5      1         3 4  3 3  21 \",\n\"   4  4   56    6 5  2  6 1   2 5   \",\n\"  32  4       46   5  1  3  4     26\",\n\"  62  4 5     13   4  6  5  2      6\",\n\" 1  5      65  64     3 1 2     65  \",\n\"6 5   4    1  13   4 2  1   4  5    \",\n\"  61  2   3   4  65         6    451\",\n\"2     41  5    63  5 1        5   13\",\n\" 5 3 2     4  1   5   3 61    3  5  \",\n\"   5 65   4  13       6  4    2 6  4\",\n\" 4 1  2   4   2       53  462 6     \",\n\"  5  22  5  34        1 1 6 2    1  \",\n\"  3 6    5   6    1   4   1 5  5  32\",\n\"  42   1    3    44  3 5   5 2  5 1 \",\n\" 64   1    4 5 3   435      1   6  5\",\n\" 2   4  1   2   6 6   52    45 5 1  \",\n\"   2 3    1   63 5  56  5     1 3  2\",\n\"   34   4 1513    5    145  6       \",\n\"  2    5 2 31    5 4   1 3 5    6 3 \",\n\"41  23 3  1   2   3   5  2  4      5\",\n\"  4      3  5   6 1      2  4    5 2\",\n\" 5   3  4         2 1    6   2   64 \",\n\"    1  5       3    24    1  664    \",\n\"  3      5 24    1   6        621   \",\n\"        231       4   62  1    4 5  \",\n\"  3    2 6  1   4  5   6   2 1    3 \",\n\"    1  3 2    3 2      465     2 6  \",\n\"1   3 3 6     4      54    2   2   6\",\n\"  64  2 4       3 1  2      5  5   1\",\n\" 1   6   2 12   5   5    34      3  \",\n\"   46   6 5  2   11       42  3     \",\n\"5      2   4  1 6  3       14   2 5 \",\n\"     5  4 1  6   2   3    3 2 1 6   \",\n\"   6      31  6   2  5    3 4 64    \",\n\"43      1     2  1   2 5 1  4 6     \",\n\"    2    6 11   3   6    2      54 2\",\n\"3  2       5  6 2     4 21      51  \",\n\"    4  41   3    1 2  5          532\",\n\" 52        31  2    6 4          612\",\n\"  2   6  1  4    1   5 4  6    3  2 \",\n\"  2 3   54  16         6   2   5   4\",\n\"    1  5 6  42    5   4         1 53\",\n\"    54 5  23      43      6    1   5\",\n\"    1   3  4   6       33 5  24 2   \",\n\"   2    5  3   41 4      6    1 3  2\",\n\"     1 2 54 4 6       6  1 3  2     \",\n\" 1 2  3 21    4       43      5    6\",\n\"43   5    3 2       1  3 54  1      \",\n\"    4    1  6       5  234 5   6  3 \",\n\" 5   3   6  3 41      3  6  2 1     \",\n\"        1 43   6 5  5  1  43   5    \",\n\"  43    3  42    1    5  6  1    5  \",\n\"2  1  5 1 4  4   6  2       3    5  \",\n\"     6 5 3    12     61  6   24 2   \",\n\"     2 3  5   56  6  5  3 4    1  4 \",\n\" 2 6    6  14   1   3     1 2     65\",\n\" 53   1    5 1 4     65 2   1      6\",\n\" 4  1     526       45   23 4    2  \",\n\"35      1  3  46     2   3  161     \",\n\" 21    6       53  35 6          321\",\n\"  1  53     16  4 4   6   3  4   2  \",\n\" 62     5  125  1            3 1 4 2\",\n\"  5 2 4 2      65       3 6  5  1  3\",\n\"  1   4  5   6    5       53 22  4 5\",\n\"1 6 4    5  6   2  3       1 44 1   \",\n\" 3 25 2   3   1 4  5 1       4  6   \",\n\"  6      4   5   16  5  2   3 13   2\",\n\"    3 5  6  36 2        625 1 1     \",\n\"3  5       66 51        2     531  2\",\n\"6   3 1          2  4    5  262  54 \",\n\"1 5 2 3    1         2 34 6   2   6 \",\n\"5 2   1        3 66 3  5 2 6 1    2 \",\n\"6  23           4 3 41  4    221   3\",\n\"    3 3 2  6  36      2 1 4  22 6  4\",\n\"  452     6  2 1 616 2  54      6   \",\n\" 2   4   2 3  5 6       6 1    3    \",\n\"4 6    3          1  4   5  3     25\",\n\"  1   62    3   6         4  5   1 4\",\n\"      132      1   5  6     3 4  2  \",\n\"3   2    4       1 6 5  1 2  4      \",\n\" 3    5 1     3 6            4 4 3 2\",\n\"     2  4 1   5  6 1           3 54 \",\n\" 15  3       4  5    3  2  6       1\",\n\" 2   3   1       6  4    3      1 52\",\n\"  2  53       1    4 6        1  34 \",\n\"4  23        4      31   6   52     \",\n\"35            45 1  5  4 2  6    1  \",\n\"  6  3 5     1  6   31  2 4      2  \",\n\"3 4    1      56       4   12  2  6 \",\n\"4    33 2     4 5  6         2   16 \",\n\" 4   35  1  3      5   2     4   36 \",\n\"     65  2     13   3 2 64      1   \",\n\"     4  3 1 6 5      6 2      154   \",\n\"  3  1    6  25      42 516         \",\n\"         1531      5  3 36   4  4   \",\n\"245         4       15    241      3\",\n\"    52   4  4   6   31        561   \",\n\"      423    1   35  4      62   1  \",\n\"  1  43       5 1   6 2          641\",\n\"216           46  3    1   3      52\",\n\"   4   1  3  23    5  2 1    6    1 \",\n\"5   23  1            5 66     1 23  \",\n\"     2  231  6    1   4   1    3   5\",\n\"  63 4  3  6   4  2   1 35          \",\n\"43   6          3 1   4  2 51  1    \",\n\"    6 5 6  2     4 356        2 1   \",\n\"      4 3  25 23     5       5 1  6 \",\n\"  3 12      2    51 5   4  2      6 \",\n\"2    1    6    6   635         45 3 \",\n\"       1  43    5 5 2 6 3    54     \",\n\"63   4      1  52 2         6  2  3 \",\n\"3  4  6 4  3   1   5      13      2 \",\n\"    1  2   52 4     15     1 3    56\",\n\" 64   15       3 24    1       4 13 \",\n\"     62 53   2 1  4    36      32   \",\n\"   543       6   1   2 415     43   \",\n\" 6 4    5 613    2   5  521         \",\n\"4      65     134 6          3   415\",\n\"     5   31    6 16    2 1    256   \",\n\"1      2  3 4 5  6  2  5        145 \",\n\"      3 6  15   6   25    3 2  4  3 \",\n\" 56  4    6 3 5      4       1 6  42\",\n\"  3 2    3   4       5 462    13   6\",\n\"    42 2  616  4        3 4    1  3 \",\n\"    3 63      42  2         41 1  25\",\n\"26    35   2   5      3  1   3    45\",\n\" 1 64    21   6   4      43    6  5 \",\n\"      4 13   6   1  4  5    2 2 31  \",\n\" 2  56      6  3  1    5  4    6  42\",\n\"1 6 5      6   34   35    46   2    \",\n\"    4   3  1   5 6      2 5  33 6 5 \",\n\"  36 2 2 3 1  1   5       6  3 4    \",\n\"6   4      1 532        5   2 34   5\",\n\"   516        4 5    3   251  6 1   \",\n\"  526 6         12 5    5    4  31  \",\n\" 4 21   1 4 5    3       2  3 6 3   \",\n\" 5   44  6 3  543        6   12     \",\n\"  36   6 1  54              2  5246 \",\n\"13     64     31    14 3   2 4    5 \",\n\"     1    23  43  6 3 5  412  2     \",\n\"25      3    6  4 42  6     21   6 4\",\n\"5      61   2  63  3  5   4 1    4 5\",\n\"16      5   64   22    4    4  1  36\",\n\"4 1  3  3 4 2    1  52   5       6 5\",\n\"     313  2  2 6    123 2       4 5 \",\n\"2     5342   4    15   34    5   1  \",\n\" 3  4  16   6      4       23 32 46 \",\n\"    6   32     4  1   5  24   6     \",\n\"     65    3  2  4   1        246   \",\n\"     6   53   42        62   1 1    \",\n\"  2 31     5      3  2   13   4 6   \",\n\"  4  1  6 3     1 2  3      45 5    \",\n\"3 6  5  4    5  3          6 3    12\",\n\"6  24    5          4  642    1 3   \",\n\"   1    2  3   54 4     36      5  6\",\n\"     1   53   2    4 2 6 1      5 4 \",\n\"   342        6      12  34   5 2   \",\n\"   463         52  65   3      4   1\",\n\"    16   54     2  34         416   \",\n\" 13   62        14 5             126\",\n\"  6 2      415       53       324   \",\n\"         514        4 5131 6    2   \",\n\"         1262       6  5 41   3  4  \",\n\"    32  36     1   5   4142         \",\n\"   542       4      5  6 3 2  1 2   \",\n\"     5 5  23     1  34    6    35   \",\n\"   3 5        6   4   12 4      24 6\",\n\"34      6         2   5   2  1 5 2 6\",\n\"1 63         4 6      2 2 51       5\",\n\"   2   3 5    3  16       4     1 45\",\n\"   4  6          3  5  213 2    2 1 \",\n\"4  15   64       5   2  6 4   2 5   \",\n\"1   5 6 4          16  5   26    53 \",\n\"   6      25 6  3  314   5  63      \",\n\"  13      14 3   66        25 5 2   \",\n\" 63   24       45  1  6          126\",\n\"      132          13 2 3   4 5  6 3\",\n\"  6   415   6  2   5  4   4 13      \",\n\"      4 5  265 4     5 6 4 3    1   \",\n\" 2   5    41     3   4  34 5  65    \",\n\"2 61  3 1      6       2    65  4  1\",\n\"   5 3  3 2      2   4  3 1   6 2 1 \",\n\" 26   15   2   4 5 3       123      \",\n\"  31 2  5   5   433       64      2 \",\n\"    3 35   2  41   6 2  61   5      \",\n\" 6      21 65    22   1   4      43 \",\n\"  2  1 1  5232           65  3    1 \",\n\" 5  364   5    51       61     4  6 \",\n\"1 4 2   2  3    6   53        42   1\",\n\"  3 2 6      5   24    5 6  54    1 \",\n\" 1  3  3 6           4 5 41  225    \",\n\"       5 314  1     52 1        4 35\",\n\" 2  6 46 2     15 1 5        3    4 \",\n\"5       3 51   3 6        1  22 6 4 \",\n\"   25      61    43     2  6   16 2 \",\n\"   365         4 6  25  1 3    56  3\",\n\"  46 3 6    23  5 4    2        32 1\",\n\" 1   4   6    3  5     2241         \",\n\"    1     65 213   4    4 2    5    \",\n\"   56    3  2 4  3   4  51    6     \",\n\" 3    26      3 4  1       12    56 \",\n\"     6 3  2  4  1  15            432\",\n\" 6 5 3    4 5    1   2        123   \",\n\"   235        3 1 1      2 4    5  6\",\n\"      423   5    3 3 4    12      1 \",\n\" 1 3 5       6    3   42         536\",\n\"5     432    5 6       2      1   43\",\n\"5   21       4 3      6 126   4     \",\n\" 2 4  4   5   3    6   1        263 \",\n\"1 6 4 4      5 6      5    4      32\",\n\" 5 3 2     5       24      5  31   4\",\n\" 6     1  531     6  41    5   2    \",\n\"     15     4  61 3      4     3  42\",\n\" 3 214        3   1    6  25   4    \",\n\"       4 2566  3 4      5   1  2    \",\n\"      4352         12  56    4   3  \",\n\"   3    4  56   1      23152        \",\n\"  5   1 6    1 6 36  1     42 4     \",\n\" 1   334            65  26   4   26 \",\n\"   42   2  1   53 3       5  616    \",\n\"  3 6  6   3     12 1   5 4      54 \",\n\"    5  65 2       4 2    135      31\",\n\"     6   314  5 4  4   216      3   \",\n\"    5  5   21   3   261 6    3  4   \",\n\"43      6 4 6      2       16   145 \",\n\"   41    3    6  3   2  2 1  45 4   \",\n\" 3 6  6 5   41        1   243      2\",\n\"63    5 4  31        25          416\",\n\"5       345  3 1    2        62 6  4\",\n\"   2  35  1  45          2  4  6 12 \",\n\"51            1  3    6 36   5 4 2 6\",\n\"2    4 4        53  3   6  1   516  \",\n\"   3      42 56      5    2 3 13 2  \",\n\" 4 3 1  15        6 5         1536  \",\n\"3   6   5          4 2 1  2314    2 \",\n\"31 6  26   3   4       6 2  5 1     \",\n\"  1 6 65      5 34  3    1   6   21 \",\n\"  4 25  2 64 1  5   6    2  3 3     \",\n\" 6 2  2    3 5  1          456      \",\n\"  416      5      3 62  421         \",\n\"524         6      3  5   134      1\",\n\"         523    1  2   46      546  \",\n\"      361           4 1 5    2 2 56 \",\n\"  514      5 4 6  3           621   \",\n\"465         2  6       4    31  15  \",\n\" 1  4    2 1  5 3    6  436         \",\n\"         5425    6 2    4  3   13   \",\n\"      316   4  6       3    52 2 1  \",\n\"   145       4   65  4   23   1   2 \",\n\"5  3      15  6  2 2 4        234   \",\n\"5 2   1      6   4   5       6   21 \",\n\"    5  3   62  1       3  6   4 2   \",\n\"    1 21     5 4   3 6       5  6   \",\n\"  4 1     6   24  6       5   3    5\",\n\"     5    6  1 2  6  4    3  24     \",\n\"  4  1    6 2  3      2  1      5  4\",\n\"  6   24        5 51 2    2  3    6 \",\n\" 1  3   3  6 3    5   1  4       4 2\",\n\"  4 1    45 6       1  3 2 1    3   \",\n\"         3 52   3  5  6 5  1  3 4   \",\n\"    2  1         6  32  1 5     254 \",\n\"5 3     1 34   1  4          2  6 1 \",\n\"1    6 3     4      645      3   62 \",\n\" 5       6  6   5 2   3   45      41\",\n\"   5    2  3   6  46  2 1       52  \",\n\"6    4    3      1 3  4 4 12    2   \",\n\"  4 25    4  6 1   2      2  31     \",\n\"  4 6 61  5 15         1   2      3 \",\n\" 3      2  5    4 5       14    4 16\",\n\"  15 2 5    3         2  4   3 2   6\",\n\"4  51  5         3  2  46   4  3    \",\n\"    1 1 3  4 5     4 6  4    2    5 \",\n\"4   2 2 6  4 5 3          1  2    5 \",\n\"  3   4 5   3 62  1   3     1    5 3\",\n\"1 3   5 6        6  52      3 3  1 5\",\n\"   5 1    2  2  1  143    1    65   \",\n\"3  1    1  5   5   62     5 1 2    4\",\n\"   4  1       4  1  5  3 6    4 2   \",\n\"15      2   3    4     6 65      5  \",\n\"   6  2      6  2  4  3    25      1\",\n\" 5       52      16     5    32 4   \",\n\"  5      6  2   5 6   3     41 4    \",\n\"     2 3   5    2 2 6     1  6 4    \",\n\" 5  1  4  6 3        5    6  2    3 \",\n\" 2 1    3       65      4  2    2 3 \",\n\" 1      32       34       5 4  4  6 \",\n\"    2   4  6 2 3    6 1 6 2   5     \",\n\"    36    4  4    53 1  21      4   \",\n\" 2        324   2 3  5       6 31   \",\n\" 4       3 45    16    2   25   2   \",\n\"   52     6 32       3    1  54 5   \",\n\" 4   6   3 45     6    2   1   61   \",\n\"    14 1 3  2 3       3  5   2  6   \",\n\"3   12      51    2         53 5 6  \",\n\"  2  45      5      6  2   24   3 1 \",\n\"    25 62   1  4    3       12 1    \",\n\"   6   13   2    5    4    5 3 35   \",\n\"  2  1    3 4  6     1 36      21   \",\n\"3   6    1   1   26  4    5 1   6   \",\n\"     2 4   5  6 5 3  4   5  1   4   \",\n\" 5 2    6   3  5    4  3 2  5     1 \",\n\" 1 4  4    26    4  1      2  5   6 \",\n\"  5 3  6 5       1    6 4  6   2  5 \",\n\"  6  1    5  6    25 3  4       2  4\",\n\"    4 3    5 64     26  4    3 1    \",\n\"1   6  6      41    3  5 3  2      4\",\n\"    3   1  26  5   5  2 4       2  1\",\n\"  6  25          331 6       6  24  \",\n\" 3    5    4   4 6   3    12  3    5\",\n\"  51    2   2    4 1  3       6 12  \",\n\"  4 25       6 5  1   4   5  3     4\",\n\"        162  3   65   1    1    64  \",\n\" 2    35   25      1 6   6  4     5 \",\n\"    6   4  3      26 5  1     4 2  1\",\n\"    6  1  535          1 4  2 2 5   \",\n\"     6  4 133         4  52    3   5\",\n\"    51 2  3   3      5   6    35  4 \",\n\"     6  4 134        3    5  2  3  4\",\n\"5     43   2 5 3      6     1  2   5\",\n\" 6    24 1       4  1  3    5  1 4  \",\n\"43   51        4    52     56      4\",\n\"  4 61    2 3  4 6       5      6 4 \",\n\"2 1    5           36 2  2 4 3     5\",\n\" 6  3    6 15        3    2   34   5\",\n\" 6 5 4 5      3       6  2  3 1    6\",\n\"  1  2  54 1     33 6      5   1    \",\n\"4 1  3  3  23         1   5 3      6\",\n\" 1  5   3   4    3     5 5 62   6   \",\n\"  5 2  3    6    3     2 4      214 \",\n\" 2  1 4       6  1      2   5  1 32 \",\n\"    23   5         3   61 53    4 5 \",\n\"   12  2  45        6 3    5  54    \",\n\" 3 61      3  5  14  3      2  1    \",\n\" 4 1 3    4   5   2   3 43   6      \",\n\"2 53   3      3 6  2   14        2  \",\n\" 4 6  2          5 6   4  14  3   1 \",\n\"5  6    2  4 5     1  2 3   5    2  \",\n\"6 152     6   3     2 4 2        1  \",\n\"31  6      1   6 2  2    5  4  6    \",\n\"    6     532 4  5  34   5    4 1   \",\n\"    6    4 2 2 5 1  1  62 6   3     \",\n\"53     6   3   41 4  5  3    5    2 \",\n\" 4      6  26 1       1    1 33 5  6\",\n\"12       21      5 35   5  4   4 3  \",\n\"   5   3  2  2  5  46       41  42  \",\n\" 62 5       6 5     3 4    524    6 \",\n\"  1 5 6      1 23  32     5 2      6\",\n\"   6  1       654  45 1     2  2 1  \",\n\"2 31         4   3 31 4      2  64  \",\n\" 5    61  5   6      1  42   6    24\",\n\"2 53    3        5 6   14 65      6 \",\n\" 36    2   5   2 32         4  1  32\",\n\"    5    1 45    2  43   6    35  4 \",\n\" 5      43 5 3    1      2 5 3   2 6\",\n\"    54 5  232     1  4    4    2   6\",\n\"1 45  52       1 2      2   6 3   1 \",\n\"2 61  1 3 2        3   4    3   52  \",\n\"1 5  2    1  2 4 6 6       2  6    3\",\n\"   4      25 2     5   36 15  5   6 \",\n\"  6 2  5 46 3      2   55      42   \",\n\"3   2 21   5  5  3   4  5   31      \",\n\"4     36   1 1       3  2    51  23 \",\n\"     15  3    2       526  4   452  \",\n\" 3 146    3   1    5   3       43 6 \",\n\"  5  6 1  3   3      46 5   2  3   5\",\n\"  4  3 1     3 1  2       3 65 5  3 \",\n\"     15   6 6  4   1      3  22 6 3 \",\n\"  56 3 3   52   4        4      31 4\",\n\"5  6  6 1 4  4   3 5        2    5 4\",\n\"  1   6 3       1 4   6      2 6 5  \",\n\"  4   1 2    5  4    2       1   65 \",\n\" 23   4      6 2    1       5     14\",\n\" 5   3    413         1  2     1   6\",\n\"3 6          2  3      5 1   6   4 3\",\n\"2   6      4  52     3   3   2 1    \",\n\"2    1   3  5       3 2  6   5  4   \",\n\"    4      6 4      21    1  23   5 \",\n\"    4      1  4    6 3  2   5  3   6\",\n\"    4    32  52  1 1    4  6    1   \",\n\"  2   45    61   5 2        6    32 \",\n\"   53  5  6 5  1   2      4    6   2\",\n\" 2      6 1 5    1  1    3  6    53 \",\n\"   6 3    2        6 1 54 2     5  2\",\n\"4 2     5  2       6 3 5     61   5 \",\n\"46     2 3       1 5   62        62 \",\n\"    36    5 3 52         3  2 54    \",\n\"     61  25  2 4       1  6    32   \",\n\"4     6 5          2 45     45   21 \",\n\"3  5   45     4       43   1  6    2\",\n\"  1   4   3 3   2  1        63 2 5  \",\n\" 3     4 6    1        4    25 241  \",\n\"3    2   6    2  5 4 1   6    2 1   \",\n\"    3  4  5 5  6  1 6        4  3 6 \",\n\"   4   1   35      3  56   3  2   4 \",\n\"     2  4 5  1 3   3  1     2 5    4\",\n\" 3   1    5     1 4 12  5       2  6\",\n\"  6 1 2     4  3   3 4  1    6  2   \",\n\"   2    1  46   5 5    6     2 4 1  \",\n\"1 52    2   3   1    35        1  4 \",\n\" 3    42   3  62 1      5   3    6  \",\n\"  5 4  3    5     6    4    2   215 \",\n\"    4    5 6       5 3 43     1 4 3 \",\n\"   2      45 2   4  6   5 4 1   1   \",\n\" 2 15     4   5      3  5 6    3  6 \",\n\"4     1 3 6   5      1       32 1 5 \",\n\"  1   3 6  51  3      2       4 5  1\",\n\" 4    16        5 3    4  526     4 \",\n\"  2 5  5 4     1 6        5   3 6 2 \",\n\" 5 3 6    4 2          31 4    3 1  \",\n\" 5  26 4      5      5 4 3 6      1 \",\n\"     25  3       3 1  2  2 46 4     \",\n\"    4 4 35       5 1    5  1  6  2  \",\n\" 1 5 2  2  1      3   6   4    2   6\",\n\" 6         14  2  2      2  15  1 3 \",\n\" 35  2  4    6       5     15   1  6\",\n\" 26  1 3      352          4   1   3\",\n\"   5   1  346          32 5    3  2 \",\n\"  1    2    64 2     6  2   3  3   5\",\n\"    4 4 51      3  53   2  6    6   \",\n\"3  5            1   6  54 13    5  4\",\n\"35 1   4  5  6      1        5    46\",\n\"2        3   4  3     5 53 61  6    \",\n\"  41   6       6  2    5 4  3   5 6 \",\n\"  13   3  2      24    62   5  4    \",\n\"4  6    2 4 2    3 5      6 1    5  \",\n\"     63 6 5  5         1  1 4   2  5\",\n\" 46  3           51   3  6      52 6\",\n\"   1   31 4  5     2 6  3         32\",\n\"    1  12  5  3 6   4    3       3 2\",\n\"3 6    4 3  1   6   24       5   6 4\",\n\"   41  4  2 2    5    6   2   51 6  \",\n\"  2  44 5    5  1  6 2       3   56 \",\n\" 4   22 3     2  15 14     6       4\",\n\"6    44 1      6 2 2      54 1    5 \",\n\"4  2  2 6      1   12       1   54 6\",\n\" 2  4    32   52   1   32  6    3   \",\n\"1 3      1 3 4   2  2  6    4  64   \",\n\"1      36   41  2    14 3  2       6\",\n\"       6 1 3     2  15 6 1    256   \",\n\" 1    625   1  2 6     5       6 1 3\",\n\"       3 24   1  46    2 5  1   45  \",\n\" 1 4 3      1 6 4 5    1 4 2     1  \",\n\"  3 46    3 1        6  36  15 5    \",\n\"4   2      6 6 2  1  3    1   2 5 1 \",\n\"35   1 1    1  2    3 6     3 4    2\",\n\" 4    25   45       41   3 45     6 \",\n\"   3 1  3 4  4 12       5 1  2  2   \",\n\"     3 52     1 6 6  3    34 2     6\",\n\"5 2   3 4  2 2 6     3  2    3    1 \",\n\"1    6 26       4   26   3 52      3\",\n\" 5  2   1     5   6  1      14 4 35 \",\n\"     45   6  2   3 3 2    6   35  4 \",\n\"    14 4 3 21         2  12  5  6   \",\n\" 51 3   2   1          3  346   4 1 \",\n\"  2 5     2361            1  55 4  6\",\n\"  5  14       4    2 5  6   3  5  46\",\n\"      5 2 4  2  5  5 1       33 6 2 \",\n\"43   6   4    2  3    5  1 3 22     \",\n\"  421  1  4 5  1       3 3      16  \",\n\"   3 5    4   26    3  2 4     26 3 \",\n\" 2 5 1    2   3 6 1  4  61         6\",\n\"  2   3  1    63   4  2 2    3 3   5\",\n\"5  31  3     6   2 1  4 1 2      2  \",\n\"     5 3     5 4    45 664 3 1      \",\n\"5 312   15    4 3     5       63    \",\n\"  1   2  5   3  41     56  4    5 6 \",\n\"4  5 2 5      2  3  6 4  2 1       6\",\n\"     4  2 6      23  4  51  4  4   5\",\n\" 3265     2 5          6 5 1   6  4 \",\n\" 2    36  12   3    1 5       61   4\",\n\"  51  4 153      1 4      6 4 2     \",\n\" 4  3 63       1 21  6  3   6    3 5\",\n\"  12      14 15  2 2  6    6   3  2 \",\n\"    1 2   5   41   61  41  2   32   \",\n\"2 1  3  3    2       2 14 6 1     46\",\n\" 2    53   6  54 3 435      24      \",\n\"2 61   1      3  6  2 13      6   42\",\n\"2 54   14       53  3  25 2  4      \",\n\"1 6 4 4 5  1   25       5 4 3    4  \",\n\"4   25  2 46 15           3 525     \",\n\"5  4    3    64        6     51  3  \",\n\"1 3      1       2 6 5    2    4 6  \",\n\"2    31 3    5       4    2 5     6 \",\n\"      623      1  4    2    6   1  3\",\n\"  56   4      2  43        352      \",\n\"6  2      3  4 6      2   21    5   \",\n\"1    5   2   2  6 4        4   3  2 \",\n\"1   3  4  1   6     3  5 3       2  \",\n\"  3       5 24       4  6   2   1  6\",\n\"  1 62    5  6 1        25    4     \",\n\"  421  2        45        13    5   \",\n\"  6  445   22        5   3         1\",\n\"   34      2 6 5    1 6   5   3 4   \",\n\"3  6 1     5 6 4    1   6     1 2   \",\n\" 4    2 3      1   514  6    1    3 \",\n\"  3   4 53       5 2        26   4 3\",\n\"  52  2       43   6  5  1        41\",\n\"     54   1  6    5  4  2 3     5  2\",\n\"2  1  6 1    4  1      5   2      43\",\n\"         5 2  4  3 5  6 2  3  4 3   \",\n\"  2 6   6  3    155        64  4    \",\n\"4  3  3 2        5 5  2    15      4\",\n\"  1  6   41  2     6  3 5        6 5\",\n\"45      2     5 4 1      1   6   21 \",\n\" 6  5   31    1   6    2   54  1    \",\n\"4   3  6    1 62      1  4       32 \",\n\"        463  5   6   5 126    3     \",\n\" 5 3       63 4 1     3 62      1   \",\n\" 1  6        5 1     5 45 1   36    \",\n\"13   66             21     6 1    24\",\n\"    24  4   2   1 1 5   3  2     6  \",\n\"    5  65     614  1 6  2        3  \",\n\" 5    1 2   2  3   6   1  4 2      5\",\n\" 6   31       6    42 1    4 2    3 \",\n\"     2  3 6 6  1   5   4 2    4 6   \",\n\"2  51       4        4 3 26   1   2 \",\n\"2   4 3  6     5 2       12   5   1 \",\n\"   6  4    526   1     2514         \",\n\" 6  2   4    1  5  5 4           162\",\n\"  3  4 2     5  6   41           321\",\n\"3  5   4     6  1 5    2         243\",\n\"5  3   6     1   23   4          456\",\n\"   162    5   26   5      5 4   1   \",\n\"465   2      34  1         3     46 \",\n\"    1   36  3   4 1    6 2 3    5   \",\n\" 2   4   2    6 5   3   1   6  6 5  \",\n\"      2 43       5 25   3   6 1   2 \",\n\"3 4  5        3    6 1    6 2 5   3 \",\n\"     1 1  52   3  2     15  6   3   \",\n\"  3   4 63      2 21       46      5\",\n\" 1         2 4  3   62  4 5 1   1   \",\n\"  421     5    1  2     5 1 3   6   \",\n\"1 5  24       62             5 2  16\",\n\" 31     6       5 1    3  52 1     4\",\n\"3 51    6      5   1   6    3    2 1\",\n\"56   4 1            41 5   4 3    5 \",\n\"  36 2     1    3 5  1  26      5   \",\n\" 6    4 1 6   24   5  3    1 5      \",\n\" 6 5 4    3 4         51 4    3  2  \",\n\"     3 46   4      1  2    1   5  32\",\n\"  256   5 4      56      13      3  \",\n\" 6    1 2   4    1        5 6   145 \",\n\"     5    6   24   6    32  1   4  2\",\n\"   2    2 313          6  6 5   46  \",\n\"      2 6   3   1  5 6   4  23   4  \",\n\"     1  6  4   5   4     35  22 4   \",\n\"  5  41         3  32          1 542\",\n\"  2  11   3  5       4   3  6 5    3\",\n\"   5  3   4  4  5   2     5 1   14  \",\n\"   21     3   5    3      26  6 1  3\",\n\"  42  5 2 1    45  5      6        3\",\n\" 2   4  45  6   43 4         2  1   \",\n\"1 5  2  21  2   1  4  3          4  \",\n\" 4 21   2 5    1  5     4   3   6   \",\n\"   3  13      5 1     4  6    2  16 \",\n\"2 1     4      34  3  1      55  12 \",\n\"1 46      1      1   3 26 1   3 5   \",\n\"45    21      126     4      4   31 \",\n\" 15  6 6  1  4    2         21    64\",\n\" 53     4        6 4 3 1   6 2  6 4 \",\n\"  5 61    5 1  2       65 1   32    \",\n\"65     42       1 5  2   6  51     6\",\n\" 3       1 34       24 6 4  6 5    1\",\n\"   214    5   45 2      53    24    \",\n\"231     4    1   24         46   1 3\",\n\"3  1   4      6  2 24  64    1    3 \",\n\"2    6  61   2  6  6  4   3  25     \",\n\"        2 35  5 4 1 4    2  5 5  6  \",\n\"3 1  5       3 1 6  6  3 45       5 \",\n\"    6   5  4  41   6   34 3  22     \",\n\"    6 5    14  2    61  14   3 3    \",\n\" 4 5     3 4  5  6 6    65 1  3     \",\n\" 1    46  3   65    3 4     6  3   2\",\n\" 1    4 5 1  56        52   54   3  \",\n\"1 5  2 2      45  6  4        5  1 4\",\n\" 6    4 5  22  3    6 4    12      6\",\n\"2 1    4    3   5   5 3    4   1  25\",\n\" 1 52  5   6  4       5 3      253  \",\n\"3       2 6   12       6  4 2 2 6  4\",\n\"     65  3    1    5  4 6    21 25  \",\n\"    31   4  4 2   3     1 6 2  4   6\",\n\"2 6 3            3 4 2   2 51   1 2 \",\n\"     23   5      5  26  14   3 3  4 \",\n\"  3261     3 3    2  3    1  56     \",\n\"3    4 5  6   23    35       51   3 \",\n\" 3   2  23 4 54 2        2   61     \",\n\"5      4  6   2      23 1  3 5  5  6\",\n\" 6    3 4       2  4 35       2 364 \",\n\"  423  2  1      46  3         3 54 \",\n\"6  23   3 6        62  42      45   \",\n\"  3   16  235  1   2   4  2       1 \",\n\"    25   61  125    61   45   2     \",\n\"6    1  13   3     56 4   5  2   53 \",\n\"    31   2 5  25 41      16  22     \",\n\"        234   4  36   14  51   3  5 \",\n\"    1 5 12 6 6   1   3    4   2 6  4\",\n\" 6 13 1      3    4   53 2 51     2 \",\n\"  6   4 5 1  52 6  6 5   4   2   4  \",\n\"    6  6 2 5   1 4  4   14   225    \",\n\"   2 5 2 1 63    11   5   5    1   4\",\n\" 1 6  6 51    13 6  3  1     4 4    \",\n\"  5 26     3  2 1  6    25  6 4  2  \",\n\" 3 5 2  5  11   3      6  26   1   3\",\n\"  364 4   5     35  5   3 2   1  3  \",\n\" 43  121     623     6       2   13 \",\n\"5       6 5  3  46 6  3  2   4  4  3\",\n\"3   5 6  4   6         3  1 6 2 631 \",\n\" 4 126  2 4   62       4 5    2 4 3 \",\n\"5 4          3     1 2 5     2    64\",\n\"   26    5  4       6  42     13    \",\n\"     3  3 4      65  1  21     4    \",\n\"23     4      64       5   1  5    3\",\n\"   3 5     21   6  5     4      3  6\",\n\"  5  46        6    4  3     213    \",\n\"     3   5 21      2 4   4    3   6 \",\n\"42      6        2   3 4        2 65\",\n\" 1  2 6         4  35    2  3    1  \",\n\" 6      54         1  53   2    3  6\",\n\"  52      3     51 1     2      36  \",\n\"  4 25       2 6    1   1  3      4 \",\n\"1 6 4 5      4 6             1    32\",\n\" 2   4          1    56 4 12    3   \",\n\" 4 1 56       5 1      2 2        3 \",\n\"    4  6  3       4 2     352  5    \",\n\"    3 6 3  2         1 61   4 2     \",\n\"1         4   6  5 5    3  2   1   3\",\n\" 3 1 2  1     5  4     342          \",\n\" 3  12  1     5  4     342          \",\n\"    25        614  1    4   3 5    4\",\n\"5 2   1     36   4   5      5    4 1\",\n\"   2 5  2 3  5 1       66     2 4   \",\n\"   1 6     5 3    41  2  5    2 3   \",\n\"   2 4    1   5  6   3  4 6   3 2   \",\n\" 1    6       6 45 4  6      6   21 \",\n\"  6    2 3 13    5 4        2    1 4\",\n\"   41     52 2 1        4     1 6 4 \",\n\"6    44    5 3        13   24   2   \",\n\"   41  4  5  3 1    2 6       1 5   \",\n\"    1     256      1 2  5 4   2    4\",\n\" 41   3      5      65   1  6     41\",\n\"   3    2 5  2 4       61 5     4 1 \",\n\" 2   4   2 3  4 5 6      3 1  5     \",\n\"  34  4 5        1   5 3 1  3   6   \",\n\"   15    2   12  6      3 4   1  4  \",\n\"1 2     62       6 1      5 1 4   3 \",\n\"  6 2    16 1  3   5      4    2   5\",\n\"5 2   4    1 6   2   4          3 46\",\n\"    4  41    2   61     5 3      35 \",\n\"    41   5  5  6 2 2   5 1      5   \",\n\"      25   1 14 6  6       2      16\",\n\" 6 1   1 5       323      4       41\",\n\" 5   2 12      5    3  62    5    4 \",\n\" 4 6  3   5   6  21      1        45\",\n\"31      5      3 6  31     25  2    \",\n\"  63  4    2     6 5   41 2    4    \",\n\"42      1       5   3 1  5 6  1   2 \",\n\"6  4    5     2  31 6        2   51 \",\n\"        532 3   4 6  5  1      43   \",\n\"     4   32  5   6  3  2 21 5       \",\n\"   13      6  65 4 5     1  6 6     \",\n\"  6       163  5 2     31      23   \",\n\"     63 6     2    14 2    4 2    3 \",\n\"     1   35  3 6   2    4 3    1   4\",\n\"  62    1 462    5      615         \",\n\"     6 4 51 1 6 3       431         \",\n\"   461    2   4  26       1   3   5 \",\n\"  1 6  2  3 46             621    4 \",\n\"    2 3  5  1    6 4 3    3  5  6   \",\n\" 6   5   4    4 1  3   4  2 4    3  \",\n\"  6   2  4  1    5   1   2  4  3  2 \",\n\" 2   6 4   53    1   4    1  4   5  \",\n\" 3  4      6      4   23 2  5   51  \",\n\"     5  4 3  3 2   4 3    1   6   1 \",\n\" 3 5       2    133 1     5    2 6  \",\n\"  1  2 6  1   54      3   21  4     \",\n\"  4  5    4   3    2 3 1      5 6  3\",\n\" 4  5    3    254 1            1  25\",\n\" 1 5 2     1      5   3  54    2 6  \",\n\"3  6  5 6          4   1  243     2 \",\n\"64 1   5      16      3    21      4\",\n\" 3 25     1         4 23 2  4 5     \",\n\" 3     4 5  5  31            3 1 4 2\",\n\"3      5  6    5     24 14   3 6    \",\n\"1 2  5            3 51       1 6  42\",\n\"     5 5 31  63 5       1    4 3    \",\n\"52    4 32  6      5 1      45      \",\n\" 4    6      3 1  1    5  34 2    5 \",\n\"    2    3   3   1  4     1 6 6 2 1 \",\n\"  3 1 2               56 4 5   1  64\",\n\"  2       3  5   64     3    21 5  3\",\n\"2 3           26   4  5      16 13  \",\n\"  6    5  4  2       6    13 55    1\",\n\"        1 52   4   1    2 3 1   5  3\",\n\" 4 1 5  5  62   4         3    6   4\",\n\"  1 5   36     1  5   2 12   4      \",\n\" 3  52   1  6    1  3 6 4       5   \",\n\" 13  62      2 4    4 6     3    5  \",\n\"       4 5 32   6  1        5   51 4\",\n\"1    42        31   3      5  5 1 6 \",\n\"2 564     5      6  4   1     4   3 \",\n\"  3  2 6 4     1  2       5  1 1   5\",\n\"5  4  3   2    1 44 1  5 2          \",\n\"1  2    6 1  2   4 5       3  5   2 \",\n\"  14  4 6  3       3  2    53      1\",\n\"  1 6  4          5  2 3 3 4 2  2   \",\n\" 2         43  4  2   5 16   2    6 \",\n\"  51    36  1  24   4 1 56          \",\n\"   4   4  51 6   2  25  15    6     \",\n\"    2    4 5 4   2 6   32  3   3  5 \",\n\" 35  4 4      3   2   5     45   26 \",\n\"   42   4 1 4    532    1  35       \",\n\" 321  1     3       5  6 4   2   4 3\",\n\" 2    5    6  15 2 5     4  3     24\",\n\" 4    6  1  5 36     5 32 6        2\",\n\"      6  2 5 6   3   6 11 2   5  1  \",\n\"35      1  5 4 1       32 6  1    3 \",\n\"4 2     15     2    3  1  534      5\",\n\"32  4       65     4   6  2 6    53 \",\n\"6 5   43       3       1  6 1 1   56\",\n\"    41   5 625  6    1   6    1 3   \",\n\"4    2 25     364 6        21      3\",\n\"6 4    3 4   6      5 23    61   3  \",\n\" 6  4 4 2   1  6   5 4     15      6\",\n\"  4 3    4 536 2      5   3   15    \",\n\"      432   35    6    3   2 6    54\",\n\"4     216    2 1   4   6   4      52\",\n\"   1   12  4 4  6 5          6   541\",\n\"5     432    4   3   2       5  546 \",\n\"531   2           4 5 1 1  4 6   5  \",\n\"2   1   5 4       45 3  514     2   \",\n\"    6    135  1   5  3   23  66     \",\n\" 564           5  3  16   3   561   \",\n\"     5   46   4  2  51  142    5    \",\n\"       3 24  2     64  1   462    1 \",\n\"   532     113  2  2     6      5  6\",\n\"2     43   2  54   4 6      1 5    4\",\n\" 6    15   2   3     5 63   1    2 3\",\n\"  4 61    241 6          2    4 1 3 \",\n\"   6   3  51   5 2      12    56  2 \",\n\"  2   14  2  652      4     5    3 4\",\n\"34   1  2   63     1 6 3    2      6\",\n\"14    2 61    2  4          6 6  52 \",\n\"2     56 3     1       2 1  5  5 61 \",\n\" 4 3 5  32 4       5     364       3\",\n\"2 6 5 4 5  2 4 3  5  2       4      \",\n\" 3   646  3   1 4    1     3      15\",\n\"16   54   1    5 6  62   2       1  \",\n\" 43  1 1    2  3    46       3   52 \",\n\"     3 3 4       26 25  5     4 3  6\",\n\"1      34  1    65  3      4   4  32\",\n\"4      524    5 3   6  5 1       5 1\",\n\"    15 1 3 2   5 43     13      6   \",\n\"        2  6  52     53 52  1 1 6   \",\n\" 1  46  6 2 25   1      4      2  5 \",\n\"  3 6  2  3 1 6          4 6    1 54\",\n\" 1  25  26  16        6  3      4  3\",\n\"  12 6    1    54  2     1  233     \",\n\"2  43      26      4   54      23  4\",\n\"    63 6 2       65  1  1      24  1\",\n\" 32   6      5  2     53 2 1 5    4 \",\n\"  4  15      4 2     6 4      321  6\",\n\"2 6 5 5         4      5  3 6  5 32 \",\n\"     55 2    4       46   6 1 4 13  \",\n\"36   2      4 5          4 2 62  3 4\",\n\"    3 2  6       4  1    56 1 1  45 \",\n\"      31 64  5  6  4   1   51      4\",\n\"  3 5 5  6             23 2 1 1 53  \",\n\"3   5 54   3  6    5 2      1 6    5\",\n\"     416 2     4    5    2   64  3 2\",\n\" 6 2  4 2 1          4 35      4 6 5\",\n\"5 6 4  24 5 6 2             21    65\",\n\"     2   451  32 62  5   21   4     \",\n\"   64      23 45    1  4612   4     \",\n\"5     4 32    5  1  15 3   1 2    4 \",\n\" 265  5 1 2 6             465    24 \",\n\"  2 56  5 1    6       5 31   5 6  3\",\n\"53    6 43      1   6  34  16    4  \",\n\" 4  2 1    4   4   64    5  6 3   45\",\n\"4 1 3   2  12  5   3    6 3 2      6\",\n\"12     341      3        5 31   345 \",\n\" 53 2   4        1 3 2      5  25 13\",\n\"      1 6    5 1       3    2  436  \",\n\"4  5   3     6  432               61\",\n\"         1 3  2 6  41 5       2 3   \",\n\"    3    54   6 23  1         42    \",\n\"3 4     1    5 2       52   3      6\",\n\"  3    4   2    1 6 5        5   14 \",\n\"  4   51     6       3 2    1 6  5  \",\n\" 3      4  62  4          5 1     65\",\n\" 3      6  5      4 5      2 4 2   1\",\n\"    2 5          4  6  51 3     23  \",\n\"    24      6      2 31   1    4 5  \",\n\"      14    25 1       6   5    3  2\",\n\"5  3   3      2  5 4        6     12\",\n\"35      4        5   3 1  6   1   4 \",\n\"     4 1   562     3 2  5         3 \",\n\"  42    1    4         36   4  5  6 \",\n\" 4 5      4   6  3     12      3  1 \",\n\"      16 2    3    1 4          5 62\",\n\"3 4  2            2 14       3 5  6 \",\n\"  32 4           3 4  6     1   5  2\",\n\"        543 53   6           1  2 4 \",\n\"1   3  4  6            53 21    1   \",\n\"     52      1 24         3   6 2 1 \",\n\"    2  4    6   5    1  3 2  6     2\",\n\"  4 1      526             5  1 3  2\",\n\"    6 3 51        12         3  42  \",\n\"       62   4  6       15 12      3 \",\n\"  4 6      352 1              13   2\",\n\"      63   2  4   3   1   52      6 \",\n\"  5 41  1   2      6  5    3   1    \",\n\"  15    5 6       41     3   1     2\",\n\"  5 4   41  56          2    5     3\",\n\"  31    6  2      4   5    6   2   4\",\n\"    14        162 6 23        2 4   \"\n];\n"],"names":["TinyMTJS","require","NumberPlace6","PUZZLE","APP","NP6","Seed","date","info","strhash","this","type","uniq","subtitle","seed","getTime","y","getFullYear","m","getMonth","d","getDate","substr","formatDate","noko","option","basesec","sec","min","result","dd","Date","setHours","setMinutes","setSeconds","seconds","Math","ceil","getMinutes","text","floor","nokori","time","diff","timeout","addClass","element","str","classList","add","deleteClass","remove","clearClass","sp","document","getElementById","getElementsByTagName","i","length","keypush","owari","textContent","contains","setStringAtSelectedEl","includes","empString","delkey","replace","delStringAtSelectedEl","select","makeBoard","prstr","len","width","height","func","c","ba","j","createElement","onclick","appendChild","makeKey","copyButton","title","problem","tourl","LINESIZE","makeClipStr","location","href","navigator","clipboard","writeText","checkButton","checkCnt","check","answer","disabled","hidden","kekka","button","next","app","data","kaisu","finish","etitle","encodeURIComponent","JSON","stringify","cookie","success_end","console","log","pen","pencilMark","p","getSelectedPos","pencilMarkPos","keystr","reset","module","exports","prarray","prtype","userMod","sMode","el","window","matchMedia","matches","sessionStorage","getItem","documentElement","setAttribute","getAttribute","setItem","penb","resetb","setOnClick","searchParams","URLSearchParams","search","get","has","substring","getLocationInfo","rand","getInt31","setSeed","jtitle","cookieArray","Array","tmp","split","decodeURIComponent","getCookie","board","setBoard","restoreBoard","parse","processCookie","org","dict","getInt","convert","join","res","toString","makeDict","map","x","key2","allSymbols","rows","cols","blocks","tocol","pos","torow","getCounterPos","mode","half","lineSize","vl_change","array","vl1","vl2","idx1","idx2","tiny","randomizeElement","reverseChange","blockReverse","marr","push","lineChange","slice","rsa","getRandomSymbolArray","work","ar","blo","change_line","elements","vline","error","q","setWarn","vls","k","vl","line","vlCheck","con","index","vl_delete","setPencil","delSymbol","MMMM","UNSMASK","MASK","MAT1","MAT2","TMAT","ini_func1JS","st0","st1","st2","st3","String","aseed","v","charCodeAt","setSeedArray","isArray","setSeedNumber","status","init_key","Error","count","r","key_length","mid","max","getDouble31","t0","t1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","init","onload","PRARRAY"],"sourceRoot":""}