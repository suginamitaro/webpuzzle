{"version":3,"file":"fz-main.js","mappings":"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","sources":["webpack://wordle/./web/factor/src/euclid.js","webpack://wordle/./web/factor/src/kz.js","webpack://wordle/./web/factor/src/polynomial.js","webpack://wordle/./web/factor/src/sosu.js","webpack://wordle/webpack/bootstrap","webpack://wordle/./web/factor/src/fz.js"],"sourcesContent":["/*\n * GCD 整数の最小公倍数\n */\nfunction gcdInt(x, y) {\n    if (x < 0 && y < 0) {\n        return -gcdInt2(Math.abs(x), Math.abs(y));\n    } else {\n        return gcdInt2(Math.abs(x), Math.abs(y));\n    }\n}\n\nfunction gcdInt2(x, y) {\n    if (y > x) {\n        return gcdInt(y, x);\n    }\n    var a = x;\n    var b = y;\n    while (b != 0) {\n        var t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}\n\nfunction lcmInt(x, y) {\n    return x * y / gcdInt(x, y);\n}\n\nfunction exgcd(x, y) {\n    if (x <= 0 || y <= 0) {\n        throw new Error('out of range');\n    }\n    var r0 = x;\n    var r1 = y;\n    var a0 = 1;\n    var a1 = 0;\n    var b0 = 0;\n    var b1 = 1;\n    while (r1 > 0) {\n        var q1 = Math.trunc(r0 / r1);\n        var r2 = r0 % r1;\n        var a2 = a0 - q1*a1\n        var b2 = b0 - q1*b1\n        r0 = r1;\n        r1 = r2;\n        a0 = a1;\n        a1 = a2;\n        b0 = b1;\n        b1 = b2;\n    }\n    return [a0, b0, r0];\n}\n\nfunction inverse(x, mod) {\n    x = (x % mod + mod) % mod;\n    const r = exgcd(x, mod);\n    if (r[2] == 1) {\n        return (r[0] + mod) % mod;\n    } else {\n        // console.log('r[2] = ' + r[2]);\n        // console.log('x = ' + x);\n        // console.log('mod = ' + mod);\n        throw new Error('gcd is not 1');\n    }\n}\n\nexports.gcdInt = gcdInt;\nexports.exgcd = exgcd;\nexports.lcmInt = lcmInt;\nexports.inverse = inverse;\n","const polymodule = require('./polynomial');\nconst eucmodule = require('./euclid');\nconst sosumd = require('./sosu');\nconst Polynomial = polymodule.Polynomial;\nconst PolynomialMP = polymodule.PolynomialMP;\nconst inverse = eucmodule.inverse;\nconst Sosu = sosumd.Sosu;\nconst MulCMB = sosumd.MulCMB;\n\n// const PRIMES = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,\n//                 53,59,61,67,71,73,79,83,89,97];\n\n\n/*\n * ないときだけpush\n * arは破壊される\n */\nfunction uniqPush(ar, el) {\n    for (var i = 0; i < ar.length; i++) {\n        if (ar[i].equal(el)) {\n            return ar;\n        }\n    }\n    ar.push(el);\n    return ar;\n}\n\n/*\n * el をmonic に変換\n * ないときだけpush\n * arは破壊される\n */\nfunction uniqPushMonic(ar, el) {\n    if (el.canBeMonic()) {\n        el = el.toMonic();\n    }\n    return uniqPush(ar, el);\n}\n\n// /*\n//  * el の係数を係数のgcdで割る\n//  * ないときだけpush\n//  * arは破壊される\n//  */\n// function uniqPushGcd(ar, el) {\n//     el = el.gcdDiv();\n//     for (var i = 0; i < ar.length; i++) {\n//         if (ar[i].equal(el)) {\n//             return ar;\n//         }\n//     }\n//     ar.push(el);\n//     return ar;\n// }\n\nfunction uniqJoinMonic(ar1, ar2) {\n    var result = ar1.concat();\n    for (var i = 0; i < ar2.length; i++) {\n        result = uniqPushMonic(result, ar2[i]);\n    }\n    return result;\n}\n\n// function uniqJoin(ar1, ar2) {\n//     var result = ar1.concat();\n//     for (var i = 0; i < ar2.length; i++) {\n//         result = uniqPush(result, ar2[i]);\n//     }\n//     return result;\n// }\n\nfunction randomPMP(indet, deg, mod) {\n    var ar = new Array(deg + 1);\n    for (var i = 0; i <= deg; i++) {\n        var r = Math.trunc(Math.random() * mod);\n        ar[i] = r;\n    }\n    while(ar[deg] == 0) {\n        ar[deg] = Math.trunc(Math.random() * mod);\n    }\n    return new PolynomialMP(indet, ar, mod);\n}\n\nfunction randomPM(num) {\n    var r = Math.random() * (num * 2 + 1);\n    return Math.trunc(r - num / 2);\n}\n\nfunction arModToInt(array, mod, mul) {\n    var ar = array.concat();\n    var half = mod / 2;\n    for (var i = 0; i < ar.length; i++) {\n        ar[i] = (ar[i] * mul) % mod;\n        if (ar[i] > half) {\n            ar[i] = ar[i] - mod;\n        }\n    }\n    return ar;\n}\n\n// function sumDeg(ar) {\n//     var sum = 0;\n//     for (var i = 0; i < ar.length; i++) {\n//         const el = ar[i];\n//         sum = sum + el.deg();\n//     }\n//     return sum * ar.length;\n// }\n\nfunction isFactorsMatch(fcs) {\n    const len = fcs.length;\n    for (var i = 1; i < len; i++) {\n        if (fcs[0].length != fcs[i].length) {\n            return false;\n        }\n        for (var k = 0; k < fcs[i].length; k++) {\n            var el0 = fcs[0][k];\n            var el = fcs[i][k];\n            if (el0[0].equal(el[0]) && el0[1] == el[1]) {\n                continue;\n            } else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction matchedFactors(fcs) {\n    // console.log('in matchedFactors');\n    var result = [];\n    const len = fcs.length;\n    // 1次式を全部push\n    for (var i = 0; i < fcs.length; i++) {\n        for (var j = 0; j < fcs[i].length; j++) {\n            if (fcs[i][j][0].deg() <= 1) {\n                result = uniqPush(result, fcs[i][j][0]);\n            }\n        }\n    }\n    // console.log('deg 1 all:');\n    // for (var i = 0; i < result.length; i++) {\n    //     console.log(result[i].toString());\n    // }\n    // 全部にある因子をpush\n    for (var i = 0; i < fcs[0].length; i++) {\n        var el = fcs[0][i][0];\n        if (el.deg() <= 1) {\n            continue;\n        }\n        var found = true;\n        for (var j = 1; j < fcs.length; j++) {\n            var fel = fcs[j].find(x => el.equal(x[0]));\n            if (!fel) {\n                found = false;\n                break;\n            }\n        }\n        if (found) {\n            result = uniqPush(result, el);\n        }\n    }\n    return result;\n}\n\nfunction getLeastDeg(fcs) {\n    var mindeg = 100000;\n    var minel = 1;\n    for (var i = 0; i < fcs.length; i++) {\n        for (var j = 0; j < fcs[i].length; j++) {\n            var el = fcs[i][j][0];\n            if (el.deg() < mindeg) {\n                mindeg = el.deg();\n                minel = el;\n            }\n        }\n    }\n    return [minel];\n}\n\nfunction check2(el, poly) {\n    var n = 0;\n    var res = poly.divrem(el);\n    while (res[1].isZero()) {\n        poly = res[0];\n        n++;\n        res = poly.divrem(el);\n    }\n    return [[el, n], poly];\n}\n\nfunction checkList2(factors, poly) {\n    var result = [];\n    for (var i = 0; i < factors.length; i++) {\n        var r = check2(factors[i], poly);\n        result.push(r[0]);\n        poly = r[1];\n    }\n    return [result, poly];\n}\n\nfunction get1degs(poly) {\n    poly = poly.gcdKPX()[1];\n    // console.log('poly = ' + poly);\n    const lkFactors = Sosu.integerFactorize(Math.abs(poly.leadingK()));\n    const tkFactors = Sosu.integerFactorize(Math.abs(poly.tailingK()));\n    // console.log(lkFactors);\n    // console.log(tkFactors);\n    const leadmcmb = new MulCMB(lkFactors);\n    const tailmcmb = new MulCMB(tkFactors);\n    const indet = poly.indet;\n    var result = [];\n    while (!leadmcmb.done()) {\n        const lk = leadmcmb.next();\n        tailmcmb.reset();\n        while (!tailmcmb.done()) {\n            var tk = tailmcmb.next()\n            var el = new Polynomial(indet, [tk, lk]);\n            // console.log('el = ' + el);\n            var r = poly.divrem(el);\n            if (r[1].isZero()) {\n                result = uniqPush(result, el);\n            }\n            el = new Polynomial(indet, [-tk, lk]);\n            // console.log('el = ' + el);\n            r = poly.divrem(el);\n            if (r[1].isZero()) {\n                result = uniqPush(result, el);\n            }\n        }\n    }\n    return result;\n}\n\nfunction get1degsmul(poly) {\n    const lst = get1degs(poly);\n//    console.log('get1degsmul lst = ' + lst);\n    return checkList2(lst, poly);\n}\n\nclass KZ {\n    constructor(pol) {\n        this.original = pol;\n        // this.lscount = 0;\n        // this.pccount = 0;\n        var w = pol.gcdKPX();\n        //this.gcdK = new Polynomial(pol.indet, [w[0]]);\n        this.gcdK = w[0];\n        this.gcdP = w[1];\n        this.free = this.gcdP.squareFree();\n        this.resultFactors = [];\n        // this.liftFail = false;\n        // this.primeChange = true;\n        // console.log('this.gcdK = ' + this.gcdK);\n        // console.log('this.gcdP = ' + this.gcdP.toString());\n        // console.log('this.free = ' + this.free.toString());\n    }\n    selectPrime(lk, least = 3, max = 1000) {\n        const primes = Sosu.getPrimes();\n        var result = 1;\n        for (var i = 1; i < primes.length; i++) {\n            if (primes[i] >= max) {\n                break;\n            }\n            if (lk % primes[i] != 0 && primes[i] >= least) {\n                result = primes[i];\n                break;\n            }\n        }\n        return result; // error\n    }\n    kz(freeMP, prime) {\n        const one = new PolynomialMP(freeMP.indet, [1], prime);\n        var result = [freeMP];\n        result = uniqJoinMonic(result, this.kz1(freeMP, prime, one));\n        result = result.sort((a, b) => a.gt(b));\n        return result;\n    }\n    kz1(work, prime, one) {\n        // console.log('in kz1 prime = ' + prime + ' work = ' + work.toString());\n        const deg = work.deg();\n        if (deg <= 1) {\n            return [work];\n        }\n        var factors = [];\n        var m = Math.trunc((prime ** deg - 1) / 2);\n        var maxm = 2*m;\n        var zero = true;\n        var count = 0;\n        const maxloop = 200;\n        for (var i = 0; i < maxloop || zero; i++) {\n            //console.log('count = ' + count + ' zero = ' + zero);\n            if (count >= 2) {\n                break;\n            }\n            var bx = randomPMP(work.indet, deg-1, prime);\n            var a = work.gcd(bx);\n            if (a.deg() > 0) {\n                count++;\n                // console.log('push 1 '+ a.toString());\n                factors = uniqPushMonic(factors, a);\n                if (a.deg() > 1 && a.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n                }\n                var qu = work.divRem(a)[0];\n                // console.log('push 2 ' + qu.toString());\n                factors = uniqPushMonic(factors, qu);\n                if (qu.deg() > 1 && qu.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n                }\n            }\n            const m2 = m + randomPM(3);\n            // var bxm = bx.powerMod(m, work);\n            var bxm = bx.powerMod(m2, work);\n            if (bxm.deg() < 1) {\n                // m = m + 1;\n                // if (m > maxm) {\n                //     m = 2;\n                // }\n                continue;\n            }\n            zero = false;\n            var a = work.gcd(bxm);\n            if (a.deg() > 0) {\n                // console.log('push 3 ' + a.toString());\n                count++;\n                factors = uniqPushMonic(factors, a);\n                if (a.deg() > 1 && a.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n                }\n                var qu = work.divRem(a)[0];\n                // console.log('push 4 ' + qu.toString());\n                factors = uniqPushMonic(factors, qu);\n                if (qu.deg() > 1 && qu.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n                }\n            }\n            var bxm1 = bxm.add(one);\n            a = work.gcd(bxm1);\n            if (a.deg() > 0) {\n                count++;\n                // console.log('push 5 ' + a.toString());\n                factors = uniqPushMonic(factors, a);\n                if (a.deg() > 1 && a.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n                }\n                var qu = work.divRem(a)[0];\n                // console.log('push 6 ' + qu.toString());\n                factors = uniqPushMonic(factors, qu);\n                if (qu.deg() > 1 && qu.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n                }\n            }\n            bxm1 = bxm.sub(one);\n            a = work.gcd(bxm1);\n            if (a.deg() > 0) {\n                count++;\n                // console.log('push 7 ' + a.toString());\n                // console.log('bx ' + bx.toString());\n                // console.log('bxm1 ' + bxm1.toString());\n                factors = uniqPushMonic(factors, a);\n                if (a.deg() > 1 && a.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n                }\n                var qu = work.divRem(a)[0];\n                // console.log('push 8 ' + qu.toString());\n                factors = uniqPushMonic(factors, qu);\n                if (qu.deg() > 1 && qu.deg() < deg) {\n                    factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n                }\n            }\n        }\n        return factors;\n    }\n//        factors = prelift(factors, freeMP);\n    preLift(factors, freeMP) {\n        var result = [];\n        for (var i = 0; i < factors.length; i++) {\n            var el = factors[i];\n            var q = freeMP.divRem(el)[0];\n            var g = q.gcd(el);\n            if (g.deg() < 1) {\n                result = uniqPushMonic(result, el);\n            } else if (el.deg() > g.deg()) {\n                el = el.divRem(g)[0];\n                result = uniqPushMonic(result, el);\n            }\n        }\n        return result;\n    }\n    /*\n     * 書き直し版 lift\n     * 参考：https://mathlog.info/articles/3326\n     */\n    lift(gb, hb, fb, f, prime, max) {\n        // console.log('in lift');\n        // console.log('gb = ' + gb.toString());\n        // console.log('hb = ' + hb.toString());\n        var p = prime;\n        var n = 1;\n        var tmp = gb.mul(hb);\n        if (!tmp.equal(fb)) {\n            throw new Error('gb * hb != fb');\n        }\n        tmp = gb.exGcd(hb);\n        var a = tmp[0];\n        var b = tmp[1];\n        // console.log('a = ' + a.toString());\n        // console.log('b = ' + b.toString());\n        // console.log('r = ' + tmp[2].toString());\n        if (tmp[2].deg() != 0) {\n            // ゆるい条件を満たさない\n            // p を変えてやりなおしだ\n            // console.log('gcd(gb, hb) != 1');\n            // console.log('gcd(gb, hb) = ' + tmp[2].toString());\n            return false;\n        }\n        var gn = gb;\n        var hn = hb;\n        var g0 = gn;\n        var h0 = hn;\n        while (p**n < max) {\n            var nextMod = p**(n+1);\n            var fn = PolynomialMP.fromPolynomial(f, nextMod, p);\n            gn = gn.toNewMod(nextMod);\n            hn = hn.toNewMod(nextMod);\n            fn = fn.toNewMod(nextMod);\n            // console.log('fn = ' + fn.toString());\n            fn = fn.sub(gn.mul(hn));\n            // console.log('nextMod = ' + nextMod);\n            // console.log('f = ' + f.toString());\n            // console.log('gn = ' + gn.toString());\n            // console.log('hn = ' + hn.toString());\n            // console.log('fn = ' + fn.toString());\n            a = a.toNewMod(nextMod);\n            b = b.toNewMod(nextMod);\n            g0 = g0.toNewMod(nextMod);\n            // console.log('bfn = ' + fn.mul(b).toString());\n            // console.log('g0 = ' + g0.toString());\n            tmp = fn.mul(b).divRem(g0);\n            var q = tmp[0];\n            var pn = tmp[1];\n            // console.log('q = ' + q.toString());\n            // console.log('pn = ' + pn.toString());\n            h0 = h0.toNewMod(nextMod);\n            tmp = h0.mul(q);\n            // console.log('tmp = ' + tmp.toString());\n            // console.log('h0 = ' + h0.toString());\n            var qn = fn.mul(a).add(h0.mul(q)); // qn.deg <= d - m\n            // console.log('qn = ' + qn.toString());\n            // console.log('hn = ' + hn.toString());\n            gn = gn.add(pn);\n            hn = hn.add(qn);\n            n = n + 1;\n            //hn1 = hn2;\n            // console.log('gn = ' + gn.toString());\n            // console.log('hn = ' + hn.toString());\n            // console.log('p**n = ' + (p**n));\n            // console.log('n = ' + n);\n        }\n        //return [gn, hn];\n        return gn;\n    }\n\n    liftFactors(factors, freeMP, free, prime, max) {\n        // console.log('in lift factors');\n        var result = [];\n        for (var i = 0; i < factors.length; i++) {\n            var fn = factors[i];\n            var gn = freeMP.divRem(fn)[0];\n            // console.log('fn = ' + fn);\n            // console.log('gn = ' + gn);\n            if (fn.deg() == 0 || gn.deg() == 0) {\n                continue;\n            }\n            var res = this.lift(fn, gn, freeMP, free, prime, max);\n            if (!res) {\n                // this.liftFail = true;\n                continue;\n            }\n            // uniqPushGcd(result, res[0]);\n            // uniqPushGcd(result, res[1]);\n            // this.lscount++;\n            uniqPushMonic(result, res);\n            //uniqPushMonic(result, res[1]);\n        }\n        return result;\n    }\n    /*\n     * check and get multiplicity\n     */\n    checkAndm(pol, orig, lkFactors) {\n        // console.log('in checkAndm');\n        // console.log('pol = ' + pol.toString());\n        // console.log('orig = ' + orig.toString());\n        if (pol.deg() > orig.deg()) {\n            return false;\n        }\n        var prime = pol.mod;\n        // console.log('in checkAndm');\n        // console.log('pol = ' + pol.toString());\n        // console.log('orig = ' + orig.toString());\n        // console.log('prime = ' + prime);\n        // console.log('lk = ' + orig.leadingK());\n        // mod を捨てる\n        // console.log('in checkAndm pol = ' + pol.toString());\n        var poly = false;\n        var half = pol.mod / 2;\n        var n = 1;\n        var p2 = false;\n        // orig.leadingK を素因数分解する\n        //var leadingIntFactors = integerFactorize(orig.leadingK);\n        //console.log(lkFactors);\n        var mcmb = new MulCMB(lkFactors);\n        var mcmlist = mcmb.getList();\n        for (var i = 0; i < mcmlist.length; i++) {\n            var array = arModToInt(pol.ar, pol.mod, mcmlist[i]);\n            p2 = new Polynomial(pol.indet, array);\n            // console.log('p2 = ' + p2.toString());\n            var r = orig.divrem(p2);\n            if (r[1].isZero()) {\n                poly = r[0];\n                break;\n            }\n        }\n        if (!poly) {\n            // console.log('out checkAndm false');\n            return false;\n        }\n        for(;;) {\n            var r = poly.divrem(p2);\n            if (r[1].isZero()) {\n                // console.log('mul poly = ' + poly);\n                // console.log('p2 = ' + p2);\n                // console.log('r[0] = ' + r[0])\n                // console.log('r[1] = ' + r[1])\n                poly = r[0];\n                n++;\n            } else {\n                break;\n            }\n        }\n        // console.log('out checkAndm');\n        // console.log('p2 = ' + p2.toString() + ' n = ' + n);\n        // console.log('poly = ' + poly.toString());\n        return [p2, n, poly];\n    }\n    /*\n     * check and get multiplicity for lifted factors.\n     */\n    checkFactors(lifted, orig) {\n        // console.log('in checkFactors');\n        // for (var i = 0; i < lifted.length; i++) {\n        //     console.log(lifted[i].toString());\n        // }\n        var result = [];\n        var lkFactors = Sosu.integerFactorize(orig.leadingK());\n        for (var i = 0; i < lifted.length; i++) {\n            var r = this.checkAndm(lifted[i], orig, lkFactors);\n            // console.log('orig = ' + orig.toString());\n            // console.log('lifted[i] = ' + lifted[i]);\n            if (r) {\n                // console.log('r[0] = ' + r[0].toString());\n                // console.log('r[1] = ' + r[1]);\n                result.push(r);\n                //orig = orig.divrem(r[0])[0];\n                orig = r[2];\n            }\n            if (orig.deg() == 0) {\n                break;\n            }\n        }\n        if (orig.deg() > 0) {\n            result.push([orig, 1]);\n        }\n        //console.log('check Factors result = ' + result);\n        return result;\n    }\n    factorize() {\n        var w = this.original.gcdKPX();\n        this.gcdK = w[0];\n        this.gcdP = w[1];\n        const firstFactor = [[this.gcdK, 1]];\n        const res = get1degsmul(this.gcdP);\n        // console.log('prelist = ' + prelist);\n        var prelist = res[0];\n        prelist = prelist.sort((a, b) => a[0].gt(b[0]));\n        // console.log('res[0] = ' + res[0]);\n        const gcdPol = res[1];\n        // this.free = this.gcdP.squareFree();\n        this.free = gcdPol.squareFree();\n\n        if (this.free.deg() == 0) {\n            this.resultFactors = firstFactor.concat(prelist);\n            this.success = true;\n            return true;\n        }\n        // if (this.gcdP.deg() == 1) {\n        //     this.resultFactors = prelist.concat([this.gcdP, 1]];\n        //     this.success = true;\n        //     return true;\n        // }\n        var factors = this.fz1(this.free, gcdPol);\n        // var intGcd = [[this.gcdK, 1]];\n        // console.log('in factorize');\n        // console.log('prelist = ' + prelist);\n        // console.log('factors = ' + factors);\n        factors = factors.concat(prelist);\n        factors = factors.sort((a, b) => a[0].gt(b[0]));\n        this.resultFactors = firstFactor.concat(factors);\n        this.success = true;\n        return true;\n    }\n\n    fz1(free, gcd) {\n        // console.log('in fz1 free = ' + free);\n        // console.log('gcd = ' + gcd);\n        if (gcd.deg() <= 1) {\n            return [[gcd, 1]];\n        }\n        if (free.deg() <= 1) {\n            const r = checkList2([free], gcd);\n            return r[0];\n        }\n        const trycount = 3;\n        // const trycount = 2;\n        var tryfactors = new Array(trycount);\n        const lk = this.free.leadingK();\n        // var maxprime = Math.max(this.free.maxK() * 2, 100);\n        // var leastPrime = 3;\n        var leastPrime = 5;\n        for (var i = 0; i < trycount; i++) {\n            // leastPrime = this.selectPrime(lk, leastPrime, maxprime);\n            leastPrime = this.selectPrime(lk, leastPrime);\n            tryfactors[i] = this.fz2(free, gcd, leastPrime);\n            leastPrime++;\n        }\n        // for (var i = 0; i < tryfactors.length; i++) {\n        //     console.log('tryfactors i = ' + i);\n        //     for (var j = 0; j < tryfactors[i].length; j++) {\n        //         console.log(tryfactors[i][j][0].toString() + ',' +\n        //                     tryfactors[i][j][1]);\n        //     }\n        // }\n        if (isFactorsMatch(tryfactors)) {\n            // console.log('Factors Match');\n            return tryfactors[0];\n        }\n        // console.log('not matched');\n        var matchedF = matchedFactors(tryfactors);\n        // if (matchedF.length == 0) {\n        //     matchedF = getLeastDeg(tryfactors);\n        // }\n        // console.log('matchedF:')\n        // for (var i = 0; i < matchedF.length; i++) {\n        //     console.log(matchedF[i].toString());\n        // }\n        if (matchedF.length > 0) {\n            // console.log('Factors Partial Match');\n            var checked = checkList2(matchedF, gcd);\n            var prelist = checked[0];\n            gcd = checked[1];\n            // console.log('gcd = ' + gcd);\n            if (gcd.deg() == 0) {\n                return prelist;\n            }\n            // console.log('gcd = ' + gcd.toString());\n            free = gcd.squareFree(); // 無駄\n            return prelist.concat(this.fz1(free, gcd));\n        } else {\n            const pregcd = getLeastDeg(tryfactors)[0];\n            // console.log('get LeastDeg');\n            // console.log('pregcd = ' + pregcd);\n            // console.log('gcd = ' + gcd);\n            const r = gcd.divrem(pregcd);\n            if (!r[1].isZero()) {\n                throw new Error('logical error');\n            }\n            const postgcd = r[0];\n            const prefree = pregcd.squareFree();\n            const postfree = postgcd.squareFree();\n            const prefactor = this.fz1(prefree, pregcd);\n            const postfactor = this.fz1(postfree, postgcd);\n            return prefactor.concat(postfactor);\n        }\n    }\n\n    fz2(free, gcdPol, prime) {\n        // console.log('in fz2 free = ' + free);\n        // console.log('gcdPol = ' + gcdPol);\n        // console.log('prime = ' + prime);\n        var freedeg = free.deg();\n        const max = free.maxK() * 2;\n        const lk = free.leadingK();\n        // this.lscount = 0;\n        var freeMP = PolynomialMP.fromPolynomial(free, prime);\n        var factors = this.kz(freeMP, prime);\n        factors = this.preLift(factors, freeMP);\n        factors = factors.sort((a, b) => a.gt(b));\n        var lifted = this.liftFactors(factors, freeMP, free, prime, max);\n        // if (this.lscount > 0) {\n        if (lifted && lifted.length > 0) {\n            lifted = lifted.sort((a, b) => a.gt(b));\n            var intFactors = this.checkFactors(lifted, gcdPol);\n            intFactors = intFactors.sort((a, b) => a[0].gt(b[0]));\n            return intFactors;\n        } else {\n            return [[gcdPol, 1]]\n        }\n    }\n    getFactors() {\n        // /* istanbul ignore next */\n        // if (!this.success) {\n        //     return [];\n        // }\n        return this.resultFactors;\n    }\n    getStringFactors(desc = true) {\n        // /* istanbul ignore next */\n        // if (!this.success) {\n        //     return '';\n        // }\n        // console.log('in getStringFactors');\n        // console.log(this.resultFactors);\n        var s = '';\n        var kxn = this.resultFactors[0][0];\n        // var k = this.resultFactors[0][0].leadingK();\n        // var deg = this.resultFactors[0][0].deg();\n        var k = kxn.leadingK();\n        var deg = kxn.deg();\n        if (k != 1 || deg > 0) {\n            s = s + kxn.toString();\n        } else if (this.resultFactors.length == 2 &&\n                   this.resultFactors[1][1] == 1) {\n            if (desc) {\n                return this.resultFactors[1][0].toDescString();\n            } else {\n                return this.resultFactors[1][0].toString();\n            }\n        }\n        for (var i = 1; i < this.resultFactors.length; i++) {\n            var el = this.resultFactors[i];\n            // if (el[0].toString().length == 1) {\n            //     s = s + el[0].toString();\n            // } else\n            if (desc) {\n                s = s + '(' + el[0].toDescString() + ')';\n            } else {\n                s = s + '(' + el[0].toString() + ')';\n            }\n            if (el[1] != 1) {\n                s = s + '^' + el[1];\n            }\n        }\n        return s;\n    }\n}\n\nexports.KZ = KZ;\n","//require('./euclid');\nconst euclid = require('./euclid');\nconst gcdInt = euclid.gcdInt;\nconst lcmInt = euclid.lcmInt;\nconst exgcd = euclid.exgcd;\nconst inverse = euclid.inverse;\n\nfunction arDeg(ar) {\n    for (var i = ar.length -1; i >= 0; i--) {\n        if (ar[i] != 0) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nfunction arEqual(ar1, ar2) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    if (deg1 != deg2) {\n        return false;\n    }\n    if (deg1 == -1) {\n        return true;\n    }\n    for (var i = 0; i <= deg1; i++) {\n        if (ar1[i] != ar2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction arToString(indet, ar) {\n    const deg = arDeg(ar);\n    if (deg == -1) {\n        return '0';\n    }\n    var s = '';\n    var sep = '';\n    for (var i = 0; i <= deg; i++) {\n        if (ar[i] != 0) {\n            if (i != 0 && ar[i] == 1) {\n                s = s + sep;\n            } else if (i != 0 && ar[i] == -1) {\n                s = s + '-';\n            } else if (ar[i] < 0) {\n                s = s + ar[i];\n            } else {\n                s = s + sep + ar[i];\n            }\n            sep = '+';\n            if (i == 0) {\n                continue;\n            }\n            s = s + indet;\n            if (i == 1) {\n                continue;\n            }\n            s = s + '^' + i.toString();\n        }\n    }\n    return s;\n}\n\nfunction arToDescString(indet, ar) {\n    const deg = arDeg(ar);\n    if (deg == -1) {\n        return '0';\n    }\n    var s = '';\n    var sep = '';\n    for (var i = deg; i >= 0; i--) {\n        if (ar[i] != 0) {\n            if (i != 0 && ar[i] == 1) {\n                s = s + sep;\n            } else if (i != 0 && ar[i] == -1) {\n                s = s + '-';\n            } else if (ar[i] < 0) {\n                s = s + ar[i];\n            } else {\n                s = s + sep + ar[i];\n            }\n            sep = '+';\n            if (i == 0) {\n                continue;\n            }\n            s = s + indet;\n            if (i == 1) {\n                continue;\n            }\n            s = s + '^' + i.toString();\n        }\n    }\n    return s;\n}\n\nfunction arStandard(ar, mod) {\n    for (var i = 0; i < ar.length; i++) {\n        ar[i] = ((ar[i] % mod) + mod) % mod;\n    }\n}\n\nfunction arLeadingK(ar) {\n    for (var i = ar.length -1; i >= 0; i--) {\n        if (ar[i] != 0) {\n            return ar[i];\n        }\n    }\n    return -1;\n}\n\nfunction arXn(ar) {\n    for (var i = 0; i < ar.length; i++) {\n        if (ar[i] != 0) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nfunction arMaxK(ar) {\n    var max = Math.abs(ar[0]);\n    for (var i = 1; i < ar.length; i++) {\n        if (Math.abs(ar[i]) > max) {\n            max = Math.abs(ar[i]);\n        }\n    }\n    return max;\n}\n\nfunction arAdd(ar1, ar2) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    var res;\n    var b;\n    var d;\n    if (deg1 >= deg2) {\n        d = deg2;\n        res = ar1.concat();\n        b = ar2;\n    } else {\n        d = deg1;\n        res = ar2.concat();\n        b = ar1;\n    }\n    for (var i = 0; i <= d; i++) {\n        res[i] = res[i] + b[i];\n    }\n    return res;\n}\n\nfunction arGt(ar1, ar2) {\n    var deg1 = arDeg(ar1);\n    var deg2 = arDeg(ar2);\n    if (deg1 > deg2) {\n        return 1;\n    } else if (deg1 < deg2) {\n        return -1;\n    }\n    for (var i = deg1; i >= 0; i--) {\n        if (ar1[i] == ar2[i]) {\n            continue;\n        }\n        if (ar1[i] == 0 && ar2[i] != 0) {\n            return -1;\n        }\n        if (ar2[i] == 0 && ar1[i] != 0) {\n            return 1;\n        }\n        if (ar1[i] < 0 && ar2[i] > 0) {\n            return -1;\n        }\n        if (ar2[i] < 0 && ar1[i] > 0) {\n            return 1;\n        }\n        return Math.abs(ar1[i]) - Math.abs(ar2[i]);\n    }\n    return 0;\n}\n\n/*\n * deg(ar1) >= deg(ar2) + shift と仮定する\n * ar2 の 要素に k を掛けて index の大きい方に shift して ar1 に加える\n * ar1 は破壊的に変化する。\n */\nfunction arAddMulShift(ar1, ar2, k, shift) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    if (ar1.length < deg2 + shift + 1) {\n        throw new Error('invalid degree');\n    }\n    for (var i = 0; i <= deg2; i++) {\n        ar1[i+shift] = ar1[i+shift] + k * ar2[i];\n    }\n}\n\nfunction arSub(ar1, ar2) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    var res;\n    var b;\n    var d;\n    var s;\n    if (deg1 >= deg2) {\n        d = deg2;\n        res = ar1.concat();\n        s = -1;\n        b = ar2;\n    } else {\n        d = deg1;\n        res = ar2.concat();\n        s = 1;\n        b = ar1;\n        for (var i = 0; i < res.length; i++) {\n            res[i] = -res[i];\n        }\n    }\n    for (var i = 0; i <= d; i++) {\n        res[i] = res[i] + s * b[i];\n    }\n    return res;\n}\n\nfunction arMulK(ar, k) {\n    var res = ar.concat();\n    for (var i = 0; i < res.length; i++) {\n        res[i] = res[i] * k;\n    }\n    return res;\n}\n\nfunction arDivK(ar, k) {\n    var res = ar.concat();\n    for (var i = 0; i < res.length; i++) {\n        res[i] = res[i] / k;\n    }\n    return res;\n}\n\nfunction arGcdK(ar) {\n    var d = arDeg(ar);\n    if (d == -1) {\n        return 0;\n    }\n    var a = ar[d];\n    if (Math.abs(a) == 1) {\n        return a;\n    }\n    for (var i = 0; i < d; i++) {\n        if (ar[i] == 0) {\n            continue;\n        }\n        if (Math.abs(ar[i]) == 1) {\n            return Math.sign(ar[d]);\n        }\n        a = gcdInt(a, ar[i]);\n    }\n    return Math.sign(ar[d]) * Math.abs(a);\n}\n\nfunction arRandom(deg, max) {\n    var ar = new Array(deg + 1);\n    for (var i = 0; i <= deg; i++) {\n        var r = Math.trunc(Math.random() * max);\n        var sign = 1 - Math.trunc(Math.random() * 2) * 2;\n        ar[i] = sign * r;\n    }\n    while(ar[deg] == 0) {\n        ar[deg] = Math.trunc(Math.random() * max);\n    }\n    return ar;\n}\n\nfunction arIsTanko(ar) {\n    var deg = arDeg(ar);\n    for (var i = deg -1; i >= 0; i--) {\n        if (ar[i] != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/*\n * 多項式のクラス\n */\nclass Polynomial {\n    constructor(str, ar) {\n        this.indet = str;\n        this.ar = ar.concat();\n    }\n    static fromString(str) {\n        var sar = str.split(/[:,]/);\n        const indet = sar[0];\n        const ar = new Array(sar.length -1);\n        for (var i = 1; i < sar.length; i++) {\n            ar[i - 1] = parseInt(sar[i]);\n        }\n        return new Polynomial(indet, ar);\n    }\n    deg() {\n        return arDeg(this.ar);\n    }\n    isTanko() {\n        return arIsTanko(this.ar);\n    }\n    equal(pol) {\n        if (this.indet != pol.indet) {\n            return false;\n        }\n        return arEqual(this.ar, pol.ar);\n    }\n    isZero() {\n        return this.deg() == -1;\n    }\n    leadingK() {\n        return arLeadingK(this.ar);\n    }\n    tailingK() {\n        return this.ar[0];\n    }\n    toString() {\n        return arToString(this.indet, this.ar, this.deg());\n    }\n    toDescString() {\n        return arToDescString(this.indet, this.ar, this.deg());\n    }\n    /*\n     * return this * kx^n\n     */\n    kmulxn(k, n) {\n        const ar = new Array(this.deg()+n+1);\n        for (var i = 0; i <= this.deg(); i++) {\n            ar[i + n] = this.ar[i] * k;\n        }\n        for (var i = 0; i < n; i++) {\n            ar[i] = 0;\n        }\n        return new Polynomial(this.indet, ar);\n    }\n    add(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arAdd(this.ar, pol.ar);\n        return new Polynomial(this.indet, res);\n    }\n    sub(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arSub(this.ar, pol.ar);\n        return new Polynomial(this.indet, res);\n    }\n    gt(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        return arGt(this.ar, pol.ar);\n    }\n    mul(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero() || pol.isZero()) {\n            return new Polynomial(this.indet, [0]);\n        }\n        var pdeg = pol.deg();\n        var ar = new Array(this.deg() + pdeg + 1).fill(0);\n        for (var i = 0; i <= pdeg; i++) {\n            var k = pol.ar[i];\n            if (k != 0) {\n                arAddMulShift(ar, this.ar, k, i);\n            }\n        }\n        return new Polynomial(this.indet, ar);\n    }\n    maxK() {\n        return arMaxK(this.ar);\n    }\n    /*\n     * gcd of coefficients\n     */\n    gcdK() {\n        // var d = this.deg();\n        // if (d == -1) {\n        //     return 0;\n        // }\n        return arGcdK(this.ar);\n        // var a = this.ar[d];\n        // if (Math.abs(a) == 1) {\n        //     return a;\n        // }\n        // for (var i = 0; i < d; i++) {\n        //     if (this.ar[i] == 0) {\n        //         continue;\n        //     }\n        //     if (Math.abs(this.ar[i]) == 1) {\n        //         return Math.sign(this.ar[d]);\n        //     }\n        //     a = gcdInt(a, this.ar[i]);\n        // }\n        // return Math.sign(this.ar[d]) * Math.abs(a);\n    }\n    /*\n     * 係数の gcd をくくり出し、それで割った多項式と共に返す\n     */\n    gcdKP() {\n        const a = this.gcdK();\n        const ar = this.ar.concat();\n        for (var i = 0; i <= this.deg(); i++) {\n            ar[i] = ar[i] / a;\n        }\n        return [a, new Polynomial(this.indet, ar)];\n    }\n    gcdKPX() {\n        const a = this.gcdK();\n        var n = 0;\n        for (var i = 0; i <= this.deg(); i++) {\n            if (this.ar[i] != 0) {\n                n = i;\n                break;\n            }\n        }\n        var xar = new Array(n + 1).fill(0);\n        // console.log('n = ' + n);\n        xar[n] = a;\n        // console.log(xar);\n        var r1 = new Polynomial(this.indet, xar);\n        var r2 = this.divrem(r1)[0];\n        return [r1, r2];\n    }\n    /*\n     * differential 多項式の微分\n     */\n    d() {\n        var d = this.deg();\n        if (d <= 0) {\n            return new Polynomial(this.indet, [0]);\n        }\n        var ar = new Array(d);\n        for (var i = 1; i <= d; i++) {\n            ar[i - 1] = this.ar[i] * i;\n        }\n        return new Polynomial(this.indet, ar);\n    }\n    modK(mod) {\n        if (mod <= 1) {\n            throw new Error('zero divide');\n        }\n        var ar = this.ar.concat();\n        arStandard(ar, mod);\n        return new Polynomial(this.indet, ar);\n    }\n    /*\n     * 余り付き割り算\n     * return [p, r], where p*pol + r = this\n     */\n    divrem(pol) {\n        if (this.indet != pol.indet) {\n            console.log('this.indet = ' + this.indet);\n            console.log('pol.indet = ' + pol.indet);\n            throw new Error('indetermint mismatch');\n        }\n        if (pol.isZero()) {\n            throw new Error('zero divide');\n        }\n        if (this.deg() < pol.deg()) {\n            return [new Polynomial(this.indet, [0]),\n                    new Polynomial(this.indet, this.ar)];\n        }\n        var tl = arLeadingK(this.ar);\n        var pl = arLeadingK(pol.ar);\n        if (tl % pl != 0) {\n            return [new Polynomial(this.indet, [0]),\n                    new Polynomial(this.indet, this.ar)];\n        }\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1).fill(0);\n        ar[diff] = tl / pl;\n        // for (var i = 0; i < diff; i++) {\n        //     ar[i] = 0;\n        // }\n        var tmp = this.sub(pol.kmulxn(tl/pl, diff));\n        while (diff > 0) {\n            diff = tmp.deg() - pol.deg();\n            tl = tmp.leadingK();\n            if (tl % pl != 0 || diff < 0) {\n                return [new Polynomial(this.indet, ar), tmp];\n            }\n            ar[diff] = tl / pl;\n            tmp = tmp.sub(pol.kmulxn(tl/pl, diff));\n        }\n        return [new Polynomial(this.indet, ar), tmp];\n    }\n    /*\n     * 余り付き割り算（インチキ）\n     * return [p, r], where p*pol + r = this\n     */\n    remX(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        if (pol.isZero()) {\n            throw new Error('zero divide');\n        }\n        if (this.deg() < pol.deg()) {\n            return new Polynomial(this.indet, this.ar);\n        }\n        var tl = this.leadingK();\n        var pl = pol.leadingK();\n        // if (tl % pl != 0) {\n        //     return [new Polynomial(this.indet, [0]),\n        //             new Polynomial(this.indet, this.ar)];\n        // }\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1).fill(0);\n        var tmp = new Polynomial(this.indet, this.ar);\n        if (tl % pl != 0) {\n            const m = lcmInt(tl, pl) / tl;\n            tl = tl * m;\n            tmp = tmp.kmulxn(m, 0);\n        }\n        ar[diff] = tl / pl;\n        tmp = tmp.sub(pol.kmulxn(tl/pl, diff));\n        while (diff > 0 && !tmp.isZero()) {\n            diff = tmp.deg() - pol.deg();\n            if (diff < 0) {\n                break;\n            }\n            tl = tmp.leadingK();\n            if (tl % pl != 0) {\n//                return [new Polynomial(this.indet, ar), tmp];\n                const m = lcmInt(tl, pl) / tl;\n                tl = tl * m;\n                tmp = tmp.kmulxn(m, 0);\n            }\n            ar[diff] = tl / pl;\n            tmp = tmp.sub(pol.kmulxn(tl/pl, diff));\n        }\n        const kp = tmp.gcdKP();\n        return kp[1];\n    }\n    gcd(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        var a = this;\n        var b = pol;\n        var t = this.gcdKP();\n        var ak = t[0];\n        a = t[1];\n        t = pol.gcdKP();\n        var bk = t[0]\n        b = t[1];\n        var gcdK = gcdInt(ak, bk);\n        if (b.deg() > a.deg()) {\n            return b.gcd(a);\n        }\n        if (b.deg() == a.deg() && b.leadingK() > a.leadingK()) {\n            return b.gcd(a);\n        }\n        while (!b.isZero()) {\n            var t = b;\n            var tmp = a.divrem(b);\n            b = tmp[1];\n            if (b.deg() >= a.deg()) {\n                return new Polynomial(this.indet, [gcdK]);\n            }\n            a = t;\n        }\n        if (a.deg() == 0 && a.leadingK() == -1) {\n            return new Polynomial(this.indet, [1]);\n        } else {\n            return a.kmulxn(gcdK, 0);\n        }\n    }\n    gcdX(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        var a = this;\n        var b = pol;\n        // console.log('a = ' + a.toString());\n        // console.log('b = ' + b.toString());\n        var t = this.gcdKP();\n        var ak = t[0];\n        a = t[1];\n        t = pol.gcdKP();\n        var bk = t[0]\n        b = t[1];\n        var gcdK = gcdInt(ak, bk);\n        if (b.deg() > a.deg()) {\n            return b.gcd(a);\n        }\n        if (b.deg() == a.deg() && b.leadingK() > a.leadingK()) {\n            return b.gcdX(a);\n        }\n        while (!b.isZero()) {\n            // console.log('a = ' + a.toString());\n            // console.log('b = ' + b.toString());\n            var t = b;\n            //var tmp = a.divrem(b);\n            b = a.remX(b);\n            // if (b.deg() >= a.deg()) {\n            //     return new Polynomial(this.indet, [gcdK]);\n            // }\n            a = t;\n            // console.log('gcdx a = ' + a.toString());\n            // console.log('gcdx b = ' + b.toString());\n        }\n        // console.log('a = ' + a.toString());\n        // console.log('b = ' + b.toString());\n        // console.log('gcdK = ' + gcdK);\n        // remXではgcdを括り出しているので-1にならない\n//        if (a.deg() == 0 && a.leadingK() == -1) {\n        if (a.deg() == 0) {\n            return new Polynomial(this.indet, [1]);\n        } else {\n            return a.kmulxn(gcdK, 0);\n        }\n    }\n    squareFree() {\n        var d = this.d().gcdKP()[1];\n//        var g = this.gcd(d);\n        var g = this.gcdX(d);\n        if (g.deg() > 0) {\n            var t = this.divrem(g);\n            if (!t[0].isZero()) {\n                return t[0];\n            } else {\n                var t = this.gcdKP()[1];\n                return new Polynomial(t.indet, t.ar);\n            }\n        } else {\n            var t = this.gcdKP()[1];\n            return new Polynomial(t.indet, t.ar);\n        }\n    }\n    static getRandom(indet, deg, max) {\n        deg = Math.trunc(deg);\n        max = Math.trunc(max);\n        if (deg < 1) {\n            throw new Error('deg too small');\n        }\n        if (max < 2) {\n            throw new Error('max too small');\n        }\n        var array = arRandom(deg, max);\n        return new Polynomial(indet, array);\n    }\n}\n\nclass PolynomialMP {\n    constructor(indet, ar, mod, base = mod) {\n        this.indet = indet;\n        this.ar = ar.concat();\n        this.mod = mod;\n        this.base = base;\n        this.standard();\n    }\n    static fromPolynomial(pol, mod, base = mod) {\n        return new PolynomialMP(pol.indet, pol.ar, mod, base);\n    }\n    toPolynomial() {\n        return new Polynomial(this.indet, this.ar);\n    }\n    equal(pol) {\n        if (this.indet != pol.indet) {\n            return false;\n        }\n        if (this.mod != pol.mod) {\n            return false;\n        }\n        return arEqual(this.ar, pol.ar);\n    }\n    toNewMod(mod) {\n        if (mod % this.base != 0) {\n            throw new Error('invalid mod');\n        }\n        return new PolynomialMP(this.indet, this.ar, mod, this.base);\n    }\n    getMod() {\n        return this.mod;\n    }\n    standard() {\n        arStandard(this.ar, this.mod);\n    }\n    toString() {\n        return arToString(this.indet, this.ar, this.deg())+\n            '(' + this.mod + ')';\n    }\n    deg() {\n        return arDeg(this.ar);\n    }\n    isZero() {\n        return this.deg() == -1;\n    }\n    leadingK() {\n        return arLeadingK(this.ar);\n    }\n    add(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arAdd(this.ar, pol.ar);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    sub(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arSub(this.ar, pol.ar);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    mulK(k) {\n        const res = arMulK(this.ar, k);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    divK(k) {\n        const res = arDivK(this.ar, k);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    /*\n     * differential 多項式の微分\n     */\n    d() {\n        var d = this.deg();\n        if (d <= 0) {\n            return new PolynomialMP(this.indet, [0], this.mod, this.base);\n        }\n        var ar = new Array(d).fill(0);\n        for (var i = 1; i <= d; i++) {\n            ar[i - 1] = this.ar[i] * i;\n        }\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    hasSquare() {\n        var d = this.d();\n        var g = this.gcd(d);\n        if (g.deg() > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    squareFree() {\n        var d = this.d();\n        var g = this.gcd(d);\n        if (g.deg() > 0) {\n            var t = this.divRem(g);\n            return t[0].toMonic();\n        } else {\n            return this.toMonic();\n        }\n    }\n\n    /*\n     * gcd of coefficients\n     */\n    gcdK() {\n        // var d = this.deg();\n        // if (d == -1) {\n        //     return 0;\n        // }\n        return arGcdK(this.ar);\n    }\n    gcdDiv() {\n        var d = this.deg();\n        if (d == -1) {\n            return this;\n        }\n        var g = arGcdK(this.ar);\n        var ar = arDivK(this.ar, g);\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    mul(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero() || pol.isZero()) {\n            return new PolynomialMP(this.indet, [0], this.mod, this.base);\n        }\n        var pdeg = pol.deg();\n        var ar = new Array(this.deg() + pdeg + 1).fill(0);\n        for (var i = 0; i <= pdeg; i++) {\n            var k = pol.ar[i];\n            if (k != 0) {\n                arAddMulShift(ar, this.ar, k, i);\n            }\n        }\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    canBeMonic() {\n        const lk = this.leadingK();\n        if (lk == 1) {\n            return true;\n        }\n        if (this.mod == this.base) {\n            return true;\n        } else if (lk % this.base != 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    toMonic() {\n        const lk = this.leadingK();\n        if (lk == 1) {\n            return this;\n        }\n        var inv;\n        if (this.mod == this.base) {\n            inv = inverse(lk, this.mod);\n        } else if (lk % this.base != 0) {\n            inv = inverse(lk, this.mod);\n        } else {\n            console.log('cannot change to monic :' + this.toString());\n            throw new Error('cannot change to monic');\n        }\n        var ar = this.ar.concat();\n        for (var i = 0; i < ar.length; i++) {\n            ar[i] = ar[i] * inv;\n        }\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    gt(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        return arGt(this.ar, pol.ar);\n    }\n    /*\n     * 余り付き割り算\n     * return [p, r], where p*pol + r = this\n     */\n    divRem(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero()) {\n            return [new PolynomialMP(this.indet, [0], this.mod, this.base),\n                    new PolynomialMP(this.indet, [0], this.mod, this.base)];\n        }\n        if (pol.isZero()) {\n            throw new Error('zero divide');\n        }\n        if (this.deg() < pol.deg()) {\n            return [new PolynomialMP(this.indet, [0], this.mod, this.base),\n                    new PolynomialMP(this.indet, this.ar, this.mod, this.base)];\n        }\n        if (this.base == this.mod) {\n            return this.divRem1(pol);\n        } else {\n            return this.divRem2(pol);\n        }\n    }\n    /*\n     * mod p の場合\n     */\n    divRem1(pol) {\n        // console.log('in divRem1');\n        var tl = arLeadingK(this.ar);\n        var pl = arLeadingK(pol.ar);\n        const invpl = inverse(pl, this.mod);\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1);\n        for (var i = 0; i <= diff; i++) {\n            ar[i] = 0;\n        }\n        var mul = (tl * invpl) % this.mod;\n        // console.log('mul = ' + mul);\n        ar[diff] = mul;\n        var tmp = this.ar.concat();\n        // console.log('tmp = ' + arToString('x', tmp));\n        arAddMulShift(tmp, pol.ar, this.mod - mul, diff);\n        // console.log('tmp = ' + arToString('x', tmp));\n        arStandard(tmp, this.mod);\n        // console.log('tmp = ' + arToString('x', tmp));\n        // console.log('divrem ar = ' + arToString('x', ar));\n        // console.log('divrem tmp = ' + arToString('x', tmp));\n        // console.log('divrem pol = ' + arToString('x', pol));\n        //var cnt = diff;\n        diff = arDeg(tmp) - pol.deg();\n        while (diff >= 0) {\n            // if (cnt < 0) {\n            //     throw new Error('count over');\n            // }\n            // cnt--;\n            // console.log('divrem ar = ' + arToString('x', ar));\n            // console.log('divrem tmp = ' + arToString('x', tmp));\n            // console.log('divrem pol = ' + arToString('x', pol));\n            tl = arLeadingK(tmp);\n            mul = (tl * invpl) % this.mod;\n            ar[diff] = mul;\n            arAddMulShift(tmp, pol.ar, -mul, diff);\n            arStandard(tmp, this.mod);\n            diff = arDeg(tmp) - pol.deg();\n        }\n        return [new PolynomialMP(this.indet, ar, this.mod, this.base),\n                new PolynomialMP(this.indet, tmp, this.mod, this.base)];\n    }\n    /*\n     * mod p^n の場合\n     */\n    divRem2(pol) {\n        var tl = arLeadingK(this.ar);\n        var pl = arLeadingK(pol.ar);\n        var inversible = false;\n        var invpl;\n        var mul;\n        if (pl % pol.base != 0) {\n            inversible = true;\n            invpl = inverse(pl, this.mod);\n            mul = (tl * invpl) % this.mod;\n        } else if (tl % pl == 0) {\n            mul = Math.trunc(tl / pl);\n        } else {\n            return [new PolynomialMP(this.indet, [0], this.mod, this.base),\n                    new PolynomialMP(this.indet, this.ar, this.mod, this.base)];\n        }\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1);\n        for (var i = 0; i <= diff; i++) {\n            ar[i] = 0;\n        }\n        ar[diff] = mul;\n        var tmp = this.ar.concat();\n        arAddMulShift(tmp, pol.ar, -mul, diff);\n        arStandard(tmp, this.mod);\n        // console.log('divrem ar = ' + arToString('x', ar));\n        // console.log('divrem tmp = ' + arToString('x', tmp));\n        // console.log('divrem pol = ' + arToString('x', pol));\n        //var cnt = diff;\n        diff = arDeg(tmp) - pol.deg();\n        while (diff >= 0) {\n            // if (cnt < 0) {\n            //     throw new Error('count over');\n            // }\n            // cnt--;\n            // console.log('divrem ar = ' + arToString('x', ar));\n            // console.log('divrem tmp = ' + arToString('x', tmp));\n            // console.log('divrem pol = ' + arToString('x', pol));\n            tl = arLeadingK(tmp);\n            if (inversible) {\n                mul = (tl * invpl) % this.mod;\n            } else if (tl % pl == 0) {\n                mul = Math.trunc(tl / pl);\n            } else {\n                return [new PolynomialMP(this.indet, ar, this.mod, this.base),\n                        new PolynomialMP(this.indet, tmp, this.mod, this.base)];\n            }\n            ar[diff] = mul;\n            arAddMulShift(tmp, pol.ar, -mul, diff);\n            arStandard(tmp, this.mod);\n            diff = arDeg(tmp) - pol.deg();\n        }\n        return [new PolynomialMP(this.indet, ar, this.mod, this.base),\n                new PolynomialMP(this.indet, tmp, this.mod, this.base)];\n    }\n    gcd(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.deg() < pol.deg()) {\n            return pol.gcd(this);\n        }\n        var a = this;\n        var b = pol;\n        while (!b.isZero()) {\n            var t = b;\n            var c = a.divRem(b);\n            b = c[1];\n            a = t;\n        }\n        return a;\n    }\n    exGcd(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero() || pol.isZero()) {\n            throw new Error('not supported');\n        }\n        if (this.deg() < pol.deg()) {\n            var x = pol.exGcd(this);\n            return [x[1], x[0], x[2]];\n        }\n        const zero = new PolynomialMP(this.indet, [0], this.mod, this.base);\n        const one = new PolynomialMP(this.indet, [1], this.mod, this.base);\n        var r0 = this;\n        var r1 = pol;\n        var a0 = one;\n        var a1 = zero;\n        var b0 = zero;\n        var b1 = one;\n        while (!r1.isZero()) {\n            var tmp = r0.divRem(r1);\n            var q1 = tmp[0];\n            var r2 = tmp[1];\n            var a2 = a0.sub(q1.mul(a1));\n            var b2 = b0.sub(q1.mul(b1));\n            r0 = r1;\n            r1 = r2;\n            a0 = a1;\n            a1 = a2;\n            b0 = b1;\n            b1 = b2;\n        }\n        if (r0.deg() == 0 && r0.leadingK() != 1) {\n            var inv = inverse(r0.leadingK(), this.mod);\n            a0 = a0.mulK(inv);\n            b0 = b0.mulK(inv);\n            r0 = r0.mulK(inv);\n        }\n        return [a0, b0, r0];\n    }\n    power(n) {\n        if (n < 0 || !Number.isInteger(n)) {\n            throw new Error('not supported');\n        }\n        var x = this;\n        var res = new PolynomialMP(this.indet, [1], this.mod, this.base);\n        while (n != 0) {\n            if ((n % 2) == 1) {\n                res = res.mul(x);\n            }\n            x = x.mul(x);\n            n = n >> 1;\n        }\n        return res;\n    }\n    powerMod(n, modp) {\n        if (n < 0 || !Number.isInteger(n)) {\n            throw new Error('not supported');\n        }\n        if (modp.isZero()) {\n            throw new Error('zero divide');\n        }\n        var x = this;\n        var res = new PolynomialMP(this.indet, [1], this.mod, this.base);\n        while (n != 0) {\n            if ((n % 2) == 1) {\n                res = res.mul(x);\n                res = res.divRem(modp)[1];\n            }\n            //console.log(x);\n            x = x.mul(x);\n            x = x.divRem(modp)[1];\n            n = n >> 1;\n        }\n        return res;\n    }\n}\n\n//module.exports = Polynomial;\nexports.Polynomial = Polynomial;\nexports.PolynomialMP = PolynomialMP;\n\nexports.arToString = arToString;\nexports.arStandard = arStandard;\nexports.arEqual = arEqual;\nexports.arDeg = arDeg;\nexports.arLeadingK = arLeadingK;\nexports.arMaxK = arMaxK;\nexports.arAdd = arAdd;\nexports.arAddMulShift = arAddMulShift;\nexports.arSub = arSub;\nexports.arGt = arGt;\nexports.arXn = arXn;\nexports.arRandom = arRandom;\n","class Sosu {\n    static PRIMES = [\n        2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\n        67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\n        139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n        211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277,\n        281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\n        367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\n        443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521,\n        523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\n        613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\n        691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773,\n        787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\n        971, 977, 983, 991, 997];\n    static MaxPrime = 997;\n    static getPrimes() {\n        return Sosu.PRIMES.concat();\n    }\n    static getMaxPrime() {\n        return Sosu.MaxPrime;\n    }\n    static getPrimesTo(n) {\n        var p = new Array(n+1).fill(1);\n        p[0] = 0;\n        p[1] = 0;\n        for (var i = 2; i <= n; i++) {\n            if (p[i] != 1) {\n                continue;\n            }\n            var q = i;\n            for (var j = 2; q * j <= n; j++) {\n                p[q*j] = 0;\n            }\n        }\n        var res = [];\n        for (var i = 0; i < p.length; i++) {\n            if (p[i] == 1) {\n                res.push(i);\n            }\n        }\n        return res;\n    }\n    static integerFactorize(num) {\n        num = Math.trunc(num);\n        var res = [];\n        if (num > Sosu.MaxPrime * Sosu.MaxPrime) {\n            return res;\n        }\n        while (num > 1) {\n            for (var i = 0; i < Sosu.PRIMES.length; i++) {\n                var p = Sosu.PRIMES[i];\n                if (num % p == 0) {\n                    num = num / p;\n                    res.push(p);\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n}\n\nclass MulCMB {\n    // var idx;\n    // var ar;\n    constructor(array) {\n        this.ar = array.concat();\n        this.idx = 0;\n    }\n    done() {\n        return this.idx >= 2**this.ar.length;\n    }\n    reset() {\n        this.idx = 0;\n    }\n    next() {\n        if (this.done()) {\n            return false;\n        }\n        var res = 1;\n        var x = this.idx;\n        var y = 0;\n        this.idx++;\n        while (x > 0) {\n            if (x % 2 == 1) {\n                res = res * this.ar[y];\n            }\n            x = Math.trunc(x / 2);\n            y++;\n        }\n        return res;\n    }\n    getList() {\n        var result = [];\n        while (!this.done()) {\n            var el = this.next();\n            if (!result.includes(el)) {\n                result.push(el);\n            }\n        }\n        return result;\n    }\n}\n\nexports.Sosu = Sosu;\nexports.MulCMB = MulCMB;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const polymodule = require('./polynomial');\nconst kzmodule = require('./kz');\n//const sosumd = require('./sosu');\nconst Polynomial = polymodule.Polynomial;\n//const PolynomialMP = polymodule.PolynomialMP;\nconst KZ = kzmodule.KZ;\n//const Sosu = sosumd.Sosu;\n\nconst MAX_K = 1000;\nvar app = {};\napp.poly = '';\n\nfunction dispButton() {\n    const indet = document.getElementById('indet').value.trim();\n    const keisu = document.getElementById('keisu').value.trim();\n    const array = keisu.split(/ +/).map(x => parseInt(x,10));\n    if (array.length > 0) {\n        app.poly = new Polynomial(indet[0], array.reverse());\n        const sp = document.getElementById('disppoly');\n        var str = app.poly.toDescString();\n        str = str.replaceAll(/\\^([0-9]+)/g, \"<sup>$1</sup>\");\n        sp.innerHTML = str;\n    }\n}\n\nfunction fzButton() {\n    if (app.poly instanceof Polynomial) {\n        const kz = new KZ(app.poly);\n        kz.factorize();\n        var str = kz.getStringFactors();\n        str = str.replaceAll(/\\^([0-9]+)/g, \"<sup>$1</sup>\");\n        const sp = document.getElementById('result');\n        sp.innerHTML = str;\n    }\n}\n\nfunction processDark() {\n    const userMod = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const sMode = window.sessionStorage.getItem('user');\n    const el = document.documentElement;\n\n    if(sMode) {\n        el.setAttribute('theme', sMode);\n    } else {\n        if(userMod == true) {\n            el.setAttribute('theme', 'dark');\n        } else {\n            el.setAttribute('theme', 'light');\n        }\n    }\n\n    document.getElementById(\"changeMode\").onclick = function() {\n        const nowMode = el.getAttribute('theme');\n        if(nowMode == 'dark') {\n            el.setAttribute('theme', 'light');\n            window.sessionStorage.setItem('user', 'light');\n        } else {\n            el.setAttribute('theme', 'dark');\n            window.sessionStorage.setItem('user', 'dark');\n        }\n    };\n}\n\nfunction setOnClick() {\n    const disp = document.getElementById('disp');\n    const factorize = document.getElementById('factorize');\n    disp.onclick = dispButton;\n    factorize.onclick = fzButton;\n}\n\nfunction init(prarray, prtype) {\n    processDark();\n    setOnClick();\n}\n\nwindow.onload = init;\n"],"names":["gcdInt","x","y","gcdInt2","Math","abs","a","b","t","exgcd","Error","r0","r1","a0","a1","b0","b1","q1","trunc","r2","a2","b2","exports","lcmInt","inverse","mod","r","polymodule","require","eucmodule","sosumd","Polynomial","PolynomialMP","Sosu","MulCMB","uniqPush","ar","el","i","length","equal","push","uniqPushMonic","canBeMonic","toMonic","uniqJoinMonic","ar1","ar2","result","concat","randomPMP","indet","deg","Array","random","arModToInt","array","mul","half","check2","poly","n","res","divrem","isZero","checkList2","factors","KZ","pol","this","original","w","gcdKPX","gcdK","gcdP","free","squareFree","resultFactors","lk","least","max","primes","getPrimes","freeMP","prime","one","kz1","sort","gt","work","m","zero","count","bx","gcd","qu","divRem","m2","num","bxm","powerMod","bxm1","add","sub","g","gb","hb","fb","f","p","tmp","exGcd","gn","hn","g0","h0","nextMod","fn","fromPolynomial","toNewMod","q","pn","qn","lift","orig","lkFactors","p2","mcmlist","getList","lifted","integerFactorize","leadingK","checkAndm","lst","firstFactor","tkFactors","tailingK","leadmcmb","tailmcmb","done","next","reset","tk","get1degs","prelist","gcdPol","success","fz1","tryfactors","leastPrime","selectPrime","fz2","fcs","len","k","el0","isFactorsMatch","matchedF","j","found","find","matchedFactors","checked","pregcd","mindeg","minel","getLeastDeg","postgcd","prefree","postfree","prefactor","postfactor","maxK","kz","preLift","liftFactors","intFactors","checkFactors","desc","s","kxn","toString","toDescString","euclid","arDeg","arEqual","deg1","arToString","sep","arStandard","arLeadingK","arMaxK","arAdd","d","deg2","arGt","arAddMulShift","shift","arSub","arDivK","arGcdK","sign","arRandom","str","arIsTanko","arToDescString","pdeg","fill","xar","console","log","tl","pl","diff","kmulxn","gcdKP","ak","bk","gcdX","remX","sar","split","parseInt","base","standard","arMulK","inv","divRem1","divRem2","invpl","inversible","mulK","Number","isInteger","modp","arXn","PRIMES","MaxPrime","idx","includes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","kzmodule","app","dispButton","document","getElementById","value","trim","map","reverse","sp","replaceAll","innerHTML","fzButton","factorize","getStringFactors","window","onload","prarray","prtype","userMod","sMode","disp","matchMedia","matches","sessionStorage","getItem","documentElement","setAttribute","onclick","getAttribute","setItem"],"sourceRoot":""}