{"version":3,"file":"fz-main.js","mappings":"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","sources":["webpack://wordle/./web/factor/src/euclid.js","webpack://wordle/./web/factor/src/kz.js","webpack://wordle/./web/factor/src/polynomial.js","webpack://wordle/./web/factor/src/sosu.js","webpack://wordle/./web/factor/src/tinymtjs.js","webpack://wordle/webpack/bootstrap","webpack://wordle/./web/factor/src/fz.js"],"sourcesContent":["/*\n * GCD 整数の最小公倍数\n */\nfunction gcdInt(x, y) {\n    if (x < 0 && y < 0) {\n        return -gcdInt2(Math.abs(x), Math.abs(y));\n    } else {\n        return gcdInt2(Math.abs(x), Math.abs(y));\n    }\n}\n\nfunction gcdInt2(x, y) {\n    if (y > x) {\n        return gcdInt(y, x);\n    }\n    var a = x;\n    var b = y;\n    while (b != 0) {\n        var t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}\n\nfunction lcmInt(x, y) {\n    return x * y / gcdInt(x, y);\n}\n\nfunction exgcd(x, y) {\n    if (x <= 0 || y <= 0) {\n        throw new Error('out of range');\n    }\n    var r0 = x;\n    var r1 = y;\n    var a0 = 1;\n    var a1 = 0;\n    var b0 = 0;\n    var b1 = 1;\n    while (r1 > 0) {\n        var q1 = Math.trunc(r0 / r1);\n        var r2 = r0 % r1;\n        var a2 = a0 - q1*a1\n        var b2 = b0 - q1*b1\n        r0 = r1;\n        r1 = r2;\n        a0 = a1;\n        a1 = a2;\n        b0 = b1;\n        b1 = b2;\n    }\n    return [a0, b0, r0];\n}\n\nfunction inverse(x, mod) {\n    x = (x % mod + mod) % mod;\n    const r = exgcd(x, mod);\n    if (r[2] == 1) {\n        return (r[0] + mod) % mod;\n    } else {\n        // console.log('r[2] = ' + r[2]);\n        // console.log('x = ' + x);\n        // console.log('mod = ' + mod);\n        throw new Error('gcd is not 1');\n    }\n}\n\nexports.gcdInt = gcdInt;\nexports.exgcd = exgcd;\nexports.lcmInt = lcmInt;\nexports.inverse = inverse;\n","const polymodule = require('./polynomial');\nconst eucmodule = require('./euclid');\nconst sosumd = require('./sosu');\nconst tinymd = require('./tinymtjs');\nconst Polynomial = polymodule.Polynomial;\nconst PolynomialMP = polymodule.PolynomialMP;\nconst inverse = eucmodule.inverse;\nconst Sosu = sosumd.Sosu;\nconst MulCMB = sosumd.MulCMB;\nconst TinyMTJS = tinymd.TinyMTJS;\n\n// const PRIMES = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,\n//                 53,59,61,67,71,73,79,83,89,97];\n\n\n/*\n * ないときだけpush\n * arは破壊される\n */\nfunction uniqPush(ar, el) {\n    for (var i = 0; i < ar.length; i++) {\n        if (ar[i].equal(el)) {\n            return ar;\n        }\n    }\n    ar.push(el);\n    return ar;\n}\n\n/*\n * el をmonic に変換\n * ないときだけpush\n * arは破壊される\n */\nfunction uniqPushMonic(ar, el) {\n    if (el.canBeMonic()) {\n        el = el.toMonic();\n    }\n    return uniqPush(ar, el);\n}\n\nfunction uniqJoinMonic(ar1, ar2) {\n    var result = ar1.concat();\n    for (var i = 0; i < ar2.length; i++) {\n        result = uniqPushMonic(result, ar2[i]);\n    }\n    return result;\n}\n\nfunction uniqJoin(ar1, ar2) {\n    var result = ar1.concat();\n    for (var i = 0; i < ar2.length; i++) {\n        result = uniqPush(result, ar2[i]);\n    }\n    return result;\n}\n\nfunction randomPMP(indet, deg, mod, tiny) {\n    var ar = new Array(deg + 1);\n    for (var i = 0; i <= deg; i++) {\n//        var r = Math.trunc(Math.random() * mod);\n        var r = tiny.getInt(mod);\n        ar[i] = r;\n    }\n    while(ar[deg] == 0) {\n//        ar[deg] = Math.trunc(Math.random() * mod);\n        ar[deg] = tiny.getInt(mod-1)+1;\n    }\n    return new PolynomialMP(indet, ar, mod);\n}\n\nfunction randomPM(num, tiny) {\n//    var r = Math.random() * (num * 2 + 1);\n    var r = tiny.getInt(num * 2 + 1);\n    return Math.trunc(r - num / 2);\n}\n\nfunction arModToInt(array, mod, mul) {\n    var ar = array.concat();\n    var half = mod / 2;\n    for (var i = 0; i < ar.length; i++) {\n        ar[i] = (ar[i] * mul) % mod;\n        if (ar[i] > half) {\n            ar[i] = ar[i] - mod;\n        }\n    }\n    return ar;\n}\n\n// function sumDeg(ar) {\n//     var sum = 0;\n//     for (var i = 0; i < ar.length; i++) {\n//         const el = ar[i];\n//         sum = sum + el.deg();\n//     }\n//     return sum * ar.length;\n// }\n\nfunction isFactorsMatch(fcs) {\n    const len = fcs.length;\n    for (var i = 1; i < len; i++) {\n        if (fcs[0].length != fcs[i].length) {\n            return false;\n        }\n        for (var k = 0; k < fcs[i].length; k++) {\n            var el0 = fcs[0][k];\n            var el = fcs[i][k];\n            if (el0[0].equal(el[0]) && el0[1] == el[1]) {\n                continue;\n            } else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction matchedFactors(fcs) {\n    // console.log('in matchedFactors');\n    var result = [];\n    const len = fcs.length;\n    // 1次式を全部push\n    for (var i = 0; i < fcs.length; i++) {\n        for (var j = 0; j < fcs[i].length; j++) {\n            if (fcs[i][j][0].deg() <= 1) {\n                result = uniqPush(result, fcs[i][j][0]);\n            }\n        }\n    }\n    // console.log('deg 1 all:');\n    // for (var i = 0; i < result.length; i++) {\n    //     console.log(result[i].toString());\n    // }\n    // 全部にある因子をpush\n    for (var i = 0; i < fcs[0].length; i++) {\n        var el = fcs[0][i][0];\n        if (el.deg() <= 1) {\n            continue;\n        }\n        var found = true;\n        for (var j = 1; j < fcs.length; j++) {\n            var fel = fcs[j].find(x => el.equal(x[0]));\n            if (!fel) {\n                found = false;\n                break;\n            }\n        }\n        if (found) {\n            result = uniqPush(result, el);\n        }\n    }\n    return result;\n}\n\n/* istanbul ignore next */\nfunction longestFactors(fcs) {\n    // console.log('in longestFactors');\n    var max = fcs[0].length;\n    var longest = fcs[0];\n    const len = fcs.length;\n    // 1次式を全部push\n    for (var i = 1; i < len; i++) {\n        if (fcs[i].length > max) {\n            max = fcs[i].length;\n            longest = fcs[i];\n        }\n    }\n    return longest;\n}\n\n// function getLeastDeg(fcs) {\n//     var mindeg = 100000;\n//     var minel = 1;\n//     for (var i = 0; i < fcs.length; i++) {\n//         for (var j = 0; j < fcs[i].length; j++) {\n//             var el = fcs[i][j][0];\n//             if (el.deg() < mindeg) {\n//                 mindeg = el.deg();\n//                 minel = el;\n//             }\n//         }\n//     }\n//     return [minel];\n// }\n\nfunction check2(el, poly) {\n    var n = 0;\n    var res = poly.divrem(el);\n    while (res[1].isZero()) {\n        poly = res[0];\n        n++;\n        res = poly.divrem(el);\n    }\n    return [[el, n], poly];\n}\n\nfunction checkList2(factors, poly) {\n    var result = [];\n    for (var i = 0; i < factors.length; i++) {\n        var r = check2(factors[i], poly);\n        result.push(r[0]);\n        poly = r[1];\n    }\n    return [result, poly];\n}\n\nfunction get1degs(poly) {\n    poly = poly.gcdKPX()[1];\n    // console.log('poly = ' + poly);\n    const lkFactors = Sosu.integerFactorize(Math.abs(poly.leadingK()));\n    const tkFactors = Sosu.integerFactorize(Math.abs(poly.tailingK()));\n    // console.log(lkFactors);\n    // console.log(tkFactors);\n    const leadmcmb = new MulCMB(lkFactors);\n    const tailmcmb = new MulCMB(tkFactors);\n    const indet = poly.indet;\n    var result = [];\n    while (!leadmcmb.done()) {\n        const lk = leadmcmb.next();\n        tailmcmb.reset();\n        while (!tailmcmb.done()) {\n            var tk = tailmcmb.next()\n            var el = new Polynomial(indet, [tk, lk]);\n            // console.log('el = ' + el);\n            var r = poly.divrem(el);\n            if (r[1].isZero()) {\n                result = uniqPush(result, el);\n            }\n            el = new Polynomial(indet, [-tk, lk]);\n            // console.log('el = ' + el);\n            r = poly.divrem(el);\n            if (r[1].isZero()) {\n                result = uniqPush(result, el);\n            }\n        }\n    }\n    return result;\n}\n\nfunction get1degsmul(poly) {\n    const lst = get1degs(poly);\n//    console.log('get1degsmul lst = ' + lst);\n    return checkList2(lst, poly);\n}\n\n// function isIn(array, poly) {\n//     var fnd = array.find(x => x.equal(poly));\n//     if (fnd) {\n//         return true;\n//     } else {\n//         return false;\n//     }\n// }\n\n/*\n * Cantor–Zassenhaus algorithm\n * のつもりだが、ちゃんと実装できているか不明。そもそもKZじゃなくてCZではないか。\n*/\nclass KZ {\n    constructor(pol) {\n        this.original = pol;\n        // this.lscount = 0;\n        // this.pccount = 0;\n        var w = pol.gcdKPX();\n        //this.gcdK = new Polynomial(pol.indet, [w[0]]);\n        this.gcdK = w[0];\n        this.gcdP = w[1];\n        this.free = this.gcdP.squareFree();\n        this.resultFactors = [];\n        this.tinymt = new TinyMTJS(pol.ar);\n        // this.liftFail = false;\n        // this.primeChange = true;\n        // console.log('this.gcdK = ' + this.gcdK);\n        // console.log('this.gcdP = ' + this.gcdP.toString());\n        // console.log('this.free = ' + this.free.toString());\n    }\n    selectPrime(lk, least = 3, max = 1000) {\n        const primes = Sosu.getPrimes();\n        var result = 1;\n        for (var i = 1; i < primes.length; i++) {\n            if (primes[i] >= max) {\n                break;\n            }\n            if (lk % primes[i] != 0 && primes[i] >= least) {\n                result = primes[i];\n                break;\n            }\n        }\n        return result; // error\n    }\n    selectPrimeN(lk, n, least = 3, max = 1000) {\n        // console.log('in selePrimeN lk = ' + lk + ' n = ' + n);\n        const primes = Sosu.getPrimes();\n        const pmax = 100;\n        var result = [];\n        var count = 0;\n        var m = n * 2;\n        while (count < n) {\n            const n = this.tinymt.getInt(m) % Math.min(primes.length, pmax);\n            const p = primes[n];\n            // console.log('p = ' + p);\n            if ((lk % p) != 0 && p >= least) {\n                if (!result.includes(p)) {\n                    result.push(p);\n                    count++;\n                } else {\n                    m = m + 1;\n                }\n            }\n        }\n        // console.log('result = ' + result);\n        return result;\n    }\n    kz(freeMP, prime) {\n        const one = new PolynomialMP(freeMP.indet, [1], prime);\n        // console.log('one = ' + one.toString());\n        var result = [freeMP];\n        result = uniqJoinMonic(result, this.kz1(freeMP, prime, one));\n        result = result.sort((a, b) => a.gt(b));\n        return result;\n    }\n    // kz1(work, prime, one) {\n    //     // console.log('in kz1 prime = ' + prime + ' work = ' + work.toString());\n    //     const deg = work.deg();\n    //     if (deg <= 1) {\n    //         return [work];\n    //     }\n    //     var factors = [];\n    //     var m = Math.trunc((prime ** deg - 1) / 2);\n    //     var maxm = 2*m;\n    //     var zero = true;\n    //     var count = 0;\n    //     const maxloop = 200;\n    //     for (var i = 0; i < maxloop || zero; i++) {\n    //         // console.log('count = ' + count + ' zero = ' + zero);\n    //         if (count >= 2) {\n    //             break;\n    //         }\n    //         var bx = randomPMP(work.indet, deg-1, prime, this.tinymt);\n    //         // console.log('bx = ' + bx.toString());\n    //         var a = work.gcd(bx);\n    //         a = a.toMonic();\n    //         var unq = !factors.find(x => x.equal(a));\n    //         if (a.deg() > 0) {\n    //             count++;\n    //         }\n    //         if (a.deg() > 0 && unq) {\n    //             // console.log('push 1 '+ a.toString());\n    //             // factors = uniqPushMonic(factors, a);\n    //             factors = uniqPush(factors, a);\n    //             if (a.deg() > 1 && a.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n    //             }\n    //             var qu = work.divRem(a)[0];\n    //             qu = qu.toMonic();\n    //             // console.log('push 2 ' + qu.toString());\n    //             // factors = uniqPushMonic(factors, qu);\n    //             factors = uniqPush(factors, qu);\n    //             if (qu.deg() > 1 && qu.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n    //             }\n    //         }\n    //         const m2 = m + randomPM(3, this.tinymt);\n    //         // console.log('m2 = ' + m2);\n    //         // var bxm = bx.powerMod(m, work);\n    //         var bxm = bx.powerMod(m2, work);\n    //         // console.log('bxm = ' + bxm.toString());\n    //         if (bxm.deg() < 1) {\n    //             // m = m + 1;\n    //             // if (m > maxm) {\n    //             //     m = 2;\n    //             // }\n    //             continue;\n    //         }\n    //         zero = false;\n    //         var a = work.gcd(bxm);\n    //         a = a.toMonic();\n    //         unq = !factors.find(x => x.equal(a));\n    //         if (a.deg() > 0) {\n    //             count++;\n    //         }\n    //         if (a.deg() > 0 && unq) {\n    //             // console.log('push 3 ' + a.toString());\n    //             // factors = uniqPushMonic(factors, a);\n    //             factors = uniqPush(factors, a);\n    //             if (a.deg() > 1 && a.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n    //             }\n    //             var qu = work.divRem(a)[0];\n    //             qu = qu.toMonic();\n    //             // console.log('push 4 ' + qu.toString());\n    //             // factors = uniqPushMonic(factors, qu);\n    //             factors = uniqPush(factors, qu);\n    //             if (qu.deg() > 1 && qu.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n    //             }\n    //         }\n    //         var bxm1 = bxm.add(one);\n    //         // console.log('bxm1 = ' + bxm1.toString());\n    //         a = work.gcd(bxm1);\n    //         a = a.toMonic();\n    //         unq = !factors.find(x => x.equal(a));\n    //         if (a.deg() > 0) {\n    //             count++;\n    //         }\n    //         if (a.deg() > 0 && unq) {\n    //             // console.log('push 5 ' + a.toString());\n    //             // factors = uniqPushMonic(factors, a);\n    //             factors = uniqPush(factors, a);\n    //             if (a.deg() > 1 && a.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n    //             }\n    //             var qu = work.divRem(a)[0];\n    //             qu = qu.toMonic();\n    //             // console.log('push 6 ' + qu.toString());\n    //             // factors = uniqPushMonic(factors, qu);\n    //             factors = uniqPush(factors, qu);\n    //             if (qu.deg() > 1 && qu.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n    //             }\n    //         }\n    //         bxm1 = bxm.sub(one);\n    //         // console.log('bxm1 = ' + bxm1.toString());\n    //         a = work.gcd(bxm1);\n    //         a = a.toMonic();\n    //         unq = !factors.find(x => x.equal(a));\n    //         if (a.deg() > 0) {\n    //             count++;\n    //         }\n    //         if (a.deg() > 0 && unq) {\n    //             // console.log('push 7 ' + a.toString());\n    //             // console.log('bx ' + bx.toString());\n    //             // console.log('bxm1 ' + bxm1.toString());\n    //             // factors = uniqPushMonic(factors, a);\n    //             factors = uniqPush(factors, a);\n    //             if (a.deg() > 1 && a.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(a, prime, one));\n    //             }\n    //             var qu = work.divRem(a)[0];\n    //             qu = qu.toMonic();\n    //             // console.log('push 8 ' + qu.toString());\n    //             // factors = uniqPushMonic(factors, qu);\n    //             factors = uniqPush(factors, qu);\n    //             if (qu.deg() > 1 && qu.deg() < deg) {\n    //                 factors = uniqJoinMonic(factors, this.kz1(qu, prime, one));\n    //             }\n    //         }\n    //     }\n    //     return factors;\n    // }\n\n    /*\n     * もはや、Cantor–Zassenhaus algorithm ではない。\n     * 勘で取ってサーセンざんす（済みません）アルゴリズム　Kandetotte Sa-senn-zansu\n     */\n    kz1(work, prime, one) {\n        //console.log('in kz1 prime = ' + prime + ' work = ' + work.toString());\n        const deg = work.deg();\n        if (deg <= 1) {\n            return [work];\n        }\n        var factors = [];\n        var count = 0;\n        var fncnt = 0;\n        const maxcount = 200;\n        const maxfncnt = 10 * deg;\n\n        const checkPush = function (poly) {\n            const a = work.gcd(poly).toMonic();\n            if (a.deg() < 1) {\n                count++;\n                return;\n            }\n            const fnd = factors.find(x => x.equal(a));\n            if (fnd) {\n                count++;\n                return;\n            }\n            count = 0;\n            fncnt++;\n            // console.log('push 1 '+ a.toString());\n            factors = uniqPush(factors, a);\n            const qu = work.divRem(a)[0].toMonic();\n            // console.log('push 2 ' + qu.toString());\n            factors = uniqPush(factors, qu);\n        }\n\n        while (count < maxcount && fncnt < maxfncnt) {\n            var bx = randomPMP(work.indet, deg-1, prime, this.tinymt);\n            // console.log('bx = ' + bx.toString());\n            checkPush(bx);\n            var bx1 = bx.add(one);\n            // console.log('bx1 = ' + bx1.toString());\n            checkPush(bx1);\n            bx1 = bx.sub(one);\n            // console.log('bx1 = ' + bx1.toString());\n            checkPush(bx1);\n        }\n        factors = factors.sort((a, b) => a.gt(b));\n        var subfactors = [];\n        for (var i = 0; i < factors.length; i++) {\n            subfactors = uniqJoin(subfactors, this.kz1(factors[i], prime, one));\n        }\n        return uniqJoin(factors, subfactors);\n    }\n\n    // preLift(factors, freeMP) {\n    //     var result = [];\n    //     for (var i = 0; i < factors.length; i++) {\n    //         var el = factors[i];\n    //         var q = freeMP.divRem(el)[0];\n    //         var g = q.gcd(el);\n    //         if (g.deg() < 1) {\n    //             result = uniqPushMonic(result, el);\n    //         } else if (el.deg() > g.deg()) {\n    //             el = el.divRem(g)[0];\n    //             result = uniqPushMonic(result, el);\n    //         }\n    //     }\n    //     return result;\n    // }\n    /*\n     * 書き直し版 lift\n     * 参考：https://mathlog.info/articles/3326\n     */\n    lift(gb, hb, fb, f, prime, max) {\n        // console.log('in lift');\n        // console.log('gb = ' + gb.toString());\n        // console.log('hb = ' + hb.toString());\n        var p = prime;\n        var n = 1;\n        var tmp = gb.mul(hb);\n        if (!tmp.equal(fb)) {\n            throw new Error('gb * hb != fb');\n        }\n        tmp = gb.exGcd(hb);\n        var a = tmp[0];\n        var b = tmp[1];\n        // console.log('a = ' + a.toString());\n        // console.log('b = ' + b.toString());\n        // console.log('r = ' + tmp[2].toString());\n        if (tmp[2].deg() != 0) {\n            // ゆるい条件を満たさない\n            // p を変えてやりなおしだ\n            // console.log('gcd(gb, hb) = ' + tmp[2].toString());\n            return false;\n        }\n        var gn = gb;\n        var hn = hb;\n        var g0 = gn;\n        var h0 = hn;\n        while (p**n < max) {\n            var nextMod = p**(n+1);\n            var fn = PolynomialMP.fromPolynomial(f, nextMod, p);\n            gn = gn.toNewMod(nextMod);\n            hn = hn.toNewMod(nextMod);\n            fn = fn.toNewMod(nextMod);\n            // console.log('fn = ' + fn.toString());\n            fn = fn.sub(gn.mul(hn));\n            // console.log('nextMod = ' + nextMod);\n            // console.log('f = ' + f.toString());\n            // console.log('gn = ' + gn.toString());\n            // console.log('hn = ' + hn.toString());\n            // console.log('fn = ' + fn.toString());\n            a = a.toNewMod(nextMod);\n            b = b.toNewMod(nextMod);\n            g0 = g0.toNewMod(nextMod);\n            // console.log('bfn = ' + fn.mul(b).toString());\n            // console.log('g0 = ' + g0.toString());\n            tmp = fn.mul(b).divRem(g0);\n            var q = tmp[0];\n            var pn = tmp[1];\n            // console.log('q = ' + q.toString());\n            // console.log('pn = ' + pn.toString());\n            h0 = h0.toNewMod(nextMod);\n            tmp = h0.mul(q);\n            // console.log('tmp = ' + tmp.toString());\n            // console.log('h0 = ' + h0.toString());\n            var qn = fn.mul(a).add(h0.mul(q)); // qn.deg <= d - m\n            // console.log('qn = ' + qn.toString());\n            // console.log('hn = ' + hn.toString());\n            gn = gn.add(pn);\n            hn = hn.add(qn);\n            n = n + 1;\n            //hn1 = hn2;\n            // console.log('gn = ' + gn.toString());\n            // console.log('hn = ' + hn.toString());\n            // console.log('p**n = ' + (p**n));\n            // console.log('n = ' + n);\n        }\n        //return [gn, hn];\n        // console.log('return :' + gn.toString());\n        return gn;\n    }\n\n    liftFactors(factors, freeMP, free, prime, max) {\n        // console.log('in lift factors');\n        var result = [];\n        for (var i = 0; i < factors.length; i++) {\n            var fn = factors[i];\n            var gn = freeMP.divRem(fn)[0];\n            // console.log('fn = ' + fn);\n            // console.log('gn = ' + gn);\n            if (fn.deg() == 0 || gn.deg() == 0) {\n                continue;\n            }\n            var res = this.lift(fn, gn, freeMP, free, prime, max);\n            /* istanbul ignore next */\n            if (!res) {\n                // this.liftFail = true;\n                continue;\n            }\n            // uniqPushGcd(result, res[0]);\n            // uniqPushGcd(result, res[1]);\n            // this.lscount++;\n            uniqPushMonic(result, res);\n            // 逆にする (liftで片方しか上げていないため)\n            gn = gn.toMonic();\n            fn = freeMP.divRem(gn)[0];\n            var res = this.lift(gn, fn, freeMP, free, prime, max);\n            /* istanbul ignore next */\n            // if (!res) {\n            //     // this.liftFail = true;\n            //     continue;\n            // }\n            uniqPushMonic(result, res);\n            //uniqPushMonic(result, res[1]);\n        }\n        return result;\n    }\n    /*\n     * check and get multiplicity\n     */\n    checkAndm(pol, orig, lkFactors) {\n        // console.log('in checkAndm');\n        // console.log('pol = ' + pol.toString());\n        // console.log('orig = ' + orig.toString());\n        if (pol.deg() > orig.deg()) {\n            return false;\n        }\n        var prime = pol.mod;\n        // console.log('in checkAndm');\n        // console.log('pol = ' + pol.toString());\n        // console.log('orig = ' + orig.toString());\n        // console.log('prime = ' + prime);\n        // console.log('lk = ' + orig.leadingK());\n        // mod を捨てる\n        // console.log('in checkAndm pol = ' + pol.toString());\n        var poly = false;\n        var half = pol.mod / 2;\n        var n = 1;\n        var p2 = false;\n        // orig.leadingK を素因数分解する\n        //var leadingIntFactors = integerFactorize(orig.leadingK);\n        //console.log(lkFactors);\n        var mcmb = new MulCMB(lkFactors);\n        var mcmlist = mcmb.getList();\n        for (var i = 0; i < mcmlist.length; i++) {\n            var array = arModToInt(pol.ar, pol.mod, mcmlist[i]);\n            p2 = new Polynomial(pol.indet, array);\n            // console.log('p2 = ' + p2.toString());\n            var r = orig.divrem(p2);\n            if (r[1].isZero()) {\n                poly = r[0];\n                break;\n            }\n        }\n        if (!poly) {\n            // console.log('out checkAndm false');\n            return false;\n        }\n        for(;;) {\n            var r = poly.divrem(p2);\n            if (r[1].isZero()) {\n                // console.log('mul poly = ' + poly);\n                // console.log('p2 = ' + p2);\n                // console.log('r[0] = ' + r[0])\n                // console.log('r[1] = ' + r[1])\n                poly = r[0];\n                n++;\n            } else {\n                break;\n            }\n        }\n        // console.log('out checkAndm');\n        // console.log('p2 = ' + p2.toString() + ' n = ' + n);\n        // console.log('poly = ' + poly.toString());\n        return [p2, n, poly];\n    }\n    /*\n     * check and get multiplicity for lifted factors.\n     */\n    checkFactors(lifted, orig) {\n        // console.log('in checkFactors');\n        // for (var i = 0; i < lifted.length; i++) {\n        //     console.log(lifted[i].toString());\n        // }\n        var result = [];\n        var lkFactors = Sosu.integerFactorize(orig.leadingK());\n        for (var i = 0; i < lifted.length; i++) {\n            var r = this.checkAndm(lifted[i], orig, lkFactors);\n            // console.log('orig = ' + orig.toString());\n            // console.log('lifted[i] = ' + lifted[i]);\n            if (r) {\n                // console.log('r[0] = ' + r[0].toString());\n                // console.log('r[1] = ' + r[1]);\n                result.push(r);\n                //orig = orig.divrem(r[0])[0];\n                orig = r[2];\n            }\n            if (orig.deg() == 0) {\n                break;\n            }\n        }\n        if (orig.deg() > 0) {\n            result.push([orig, 1]);\n        }\n        //console.log('check Factors result = ' + result);\n        return result;\n    }\n    factorize() {\n        var w = this.original.gcdKPX();\n        this.gcdK = w[0];\n        this.gcdP = w[1];\n        const firstFactor = [[this.gcdK, 1]];\n        // console.log('firstFactor = ' + firstFactor);\n        const res = get1degsmul(this.gcdP);\n        var prelist = res[0];\n        prelist = prelist.sort((a, b) => a[0].gt(b[0]));\n        // console.log('prelist = ' + prelist);\n        // console.log('res[0] = ' + res[0]);\n        const gcdPol = res[1];\n        // this.free = this.gcdP.squareFree();\n        // console.log('gcdPol = ' + gcdPol);\n        this.free = gcdPol.squareFree();\n        // console.log('squareFree = ' + this.free);\n\n        if (this.free.deg() == 0) {\n            this.resultFactors = firstFactor.concat(prelist);\n            this.success = true;\n            return true;\n        }\n        // if (this.gcdP.deg() == 1) {\n        //     this.resultFactors = prelist.concat([this.gcdP, 1]];\n        //     this.success = true;\n        //     return true;\n        // }\n        var factors = this.fz1(this.free, gcdPol);\n        // var intGcd = [[this.gcdK, 1]];\n        // console.log('in factorize');\n        // console.log('prelist = ' + prelist);\n        // console.log('factors = ' + factors);\n        factors = factors.concat(prelist);\n        factors = factors.sort((a, b) => a[0].gt(b[0]));\n        this.resultFactors = firstFactor.concat(factors);\n        this.success = true;\n        return true;\n    }\n\n    fz1(free, gcd) {\n        // console.log('in fz1 free = ' + free);\n        // console.log('gcd = ' + gcd);\n        if (gcd.deg() <= 1) {\n            return [[gcd, 1]];\n        }\n        if (free.deg() <= 1) {\n            const r = checkList2([free], gcd);\n            return r[0];\n        }\n        const trycount = 3;\n        // const trycount = 2;\n        var tryfactors = new Array(trycount);\n        const lk = this.free.leadingK();\n        // var maxprime = Math.max(this.free.maxK() * 2, 100);\n        // var leastPrime = 3;\n        //var leastPrime = 5;\n        const primes = this.selectPrimeN(lk, trycount);\n        // console.log('primes = ' + primes);\n        for (var i = 0; i < trycount; i++) {\n            // leastPrime = this.selectPrime(lk, leastPrime, maxprime);\n            //leastPrime = this.selectPrime(lk, leastPrime);\n            //tryfactors[i] = this.fz2(free, gcd, leastPrime);\n            tryfactors[i] = this.fz2(free, gcd, primes[i]);\n            //leastPrime++;\n        }\n        // for (var i = 0; i < tryfactors.length; i++) {\n        //     console.log('tryfactors i = ' + i);\n        //     for (var j = 0; j < tryfactors[i].length; j++) {\n        //         console.log(tryfactors[i][j][0].toString() + ',' +\n        //                     tryfactors[i][j][1]);\n        //     }\n        // }\n        if (isFactorsMatch(tryfactors)) {\n            // console.log('Factors Match');\n            return tryfactors[0];\n        }\n        // console.log('not matched');\n        var matchedF = matchedFactors(tryfactors);\n        // if (matchedF.length == 0) {\n        //     matchedF = getLeastDeg(tryfactors);\n        // }\n        // console.log('matchedF:')\n        // for (var i = 0; i < matchedF.length; i++) {\n        //     console.log(matchedF[i].toString());\n        // }\n        if (matchedF.length > 0) {\n            // console.log('Factors Partial Match');\n            var checked = checkList2(matchedF, gcd);\n            var prelist = checked[0];\n            gcd = checked[1];\n            // console.log('gcd = ' + gcd);\n            if (gcd.deg() == 0) {\n                return prelist;\n            }\n            // console.log('gcd = ' + gcd.toString());\n            free = gcd.squareFree(); // 無駄\n            return prelist.concat(this.fz1(free, gcd));\n        }\n        var longestF = longestFactors(tryfactors);\n        // console.log('longestFactors:');\n        // for (var i = 0; i < longestF.length; i++) {\n        //     console.log(longestF[i][0].toString());\n        // }\n        var result = [];\n        for (var i = 0; i < longestF.length; i++) {\n            var gcdi = longestF[i][0];\n            var freei = gcdi.squareFree();\n            // var r = this.fz1(gcdi, freei)\n            result = result.concat(this.fz1(gcdi, freei));\n        }\n        return result;\n    }\n\n    fz2(free, gcdPol, prime) {\n        // console.log('in fz2 free = ' + free);\n        // console.log('gcdPol = ' + gcdPol);\n        // console.log('prime = ' + prime);\n        var freedeg = free.deg();\n        const max = free.maxK() * 2;\n        const lk = free.leadingK();\n        // this.lscount = 0;\n        var freeMP = PolynomialMP.fromPolynomial(free, prime);\n        var factors = this.kz(freeMP, prime);\n        // factors = this.preLift(factors, freeMP);\n        factors = factors.sort((a, b) => a.gt(b));\n        // console.log('fz2 factors:');\n        // for (var i = 0; i < factors.length; i++) {\n        //     console.log(factors[i].toString());\n        // }\n        var lifted = this.liftFactors(factors, freeMP, free, prime, max);\n        // console.log('fz2 lifted:');\n        // for (var i = 0; i < lifted.length; i++) {\n        //     console.log(lifted[i].toString());\n        // }\n        // if (this.lscount > 0) {\n        if (lifted && lifted.length > 0) {\n            lifted = lifted.sort((a, b) => a.gt(b));\n            var intFactors = this.checkFactors(lifted, gcdPol);\n            intFactors = intFactors.sort((a, b) => a[0].gt(b[0]));\n            // console.log('return fz2 intFactors:');\n            // for (var i = 0; i < intFactors.length; i++) {\n            //     console.log(intFactors[i][0].toString() +\n            //                 ':' + intFactors[i][1]);\n            // }\n            return intFactors;\n        } else {\n            // console.log('return fz2 irreducible? ' + gcdPol.toString());\n            return [[gcdPol, 1]]\n        }\n    }\n    getFactors() {\n        // /* istanbul ignore next */\n        // if (!this.success) {\n        //     return [];\n        // }\n        return this.resultFactors;\n    }\n    getStringFactors(desc = true) {\n        // /* istanbul ignore next */\n        // if (!this.success) {\n        //     return '';\n        // }\n        // console.log('in getStringFactors');\n        // console.log(this.resultFactors);\n        var s = '';\n        var kxn = this.resultFactors[0][0];\n        // var k = this.resultFactors[0][0].leadingK();\n        // var deg = this.resultFactors[0][0].deg();\n        var k = kxn.leadingK();\n        var deg = kxn.deg();\n        if (k != 1 || deg > 0) {\n            s = s + kxn.toString();\n        } else if (this.resultFactors.length == 2 &&\n                   this.resultFactors[1][1] == 1) {\n            if (desc) {\n                return this.resultFactors[1][0].toDescString();\n            } else {\n                return this.resultFactors[1][0].toString();\n            }\n        }\n        for (var i = 1; i < this.resultFactors.length; i++) {\n            var el = this.resultFactors[i];\n            // if (el[0].toString().length == 1) {\n            //     s = s + el[0].toString();\n            // } else\n            if (desc) {\n                s = s + '(' + el[0].toDescString() + ')';\n            } else {\n                s = s + '(' + el[0].toString() + ')';\n            }\n            if (el[1] != 1) {\n                s = s + '^' + el[1];\n            }\n        }\n        return s;\n    }\n}\n\nexports.KZ = KZ;\n","//require('./euclid');\nconst euclid = require('./euclid');\nconst gcdInt = euclid.gcdInt;\nconst lcmInt = euclid.lcmInt;\nconst exgcd = euclid.exgcd;\nconst inverse = euclid.inverse;\n\nfunction arDeg(ar) {\n    for (var i = ar.length -1; i >= 0; i--) {\n        if (ar[i] != 0) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nfunction arEqual(ar1, ar2) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    if (deg1 != deg2) {\n        return false;\n    }\n    if (deg1 == -1) {\n        return true;\n    }\n    for (var i = 0; i <= deg1; i++) {\n        if (ar1[i] != ar2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction arToString(indet, ar) {\n    const deg = arDeg(ar);\n    if (deg == -1) {\n        return '0';\n    }\n    var s = '';\n    var sep = '';\n    for (var i = 0; i <= deg; i++) {\n        if (ar[i] != 0) {\n            if (i != 0 && ar[i] == 1) {\n                s = s + sep;\n            } else if (i != 0 && ar[i] == -1) {\n                s = s + '-';\n            } else if (ar[i] < 0) {\n                s = s + ar[i];\n            } else {\n                s = s + sep + ar[i];\n            }\n            sep = '+';\n            if (i == 0) {\n                continue;\n            }\n            s = s + indet;\n            if (i == 1) {\n                continue;\n            }\n            s = s + '^' + i.toString();\n        }\n    }\n    return s;\n}\n\nfunction arToDescString(indet, ar) {\n    const deg = arDeg(ar);\n    if (deg == -1) {\n        return '0';\n    }\n    var s = '';\n    var sep = '';\n    for (var i = deg; i >= 0; i--) {\n        if (ar[i] != 0) {\n            if (i != 0 && ar[i] == 1) {\n                s = s + sep;\n            } else if (i != 0 && ar[i] == -1) {\n                s = s + '-';\n            } else if (ar[i] < 0) {\n                s = s + ar[i];\n            } else {\n                s = s + sep + ar[i];\n            }\n            sep = '+';\n            if (i == 0) {\n                continue;\n            }\n            s = s + indet;\n            if (i == 1) {\n                continue;\n            }\n            s = s + '^' + i.toString();\n        }\n    }\n    return s;\n}\n\nfunction arStandard(ar, mod) {\n    for (var i = 0; i < ar.length; i++) {\n        ar[i] = ((ar[i] % mod) + mod) % mod;\n    }\n}\n\nfunction arLeadingK(ar) {\n    for (var i = ar.length -1; i >= 0; i--) {\n        if (ar[i] != 0) {\n            return ar[i];\n        }\n    }\n    return -1;\n}\n\nfunction arXn(ar) {\n    for (var i = 0; i < ar.length; i++) {\n        if (ar[i] != 0) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nfunction arMaxK(ar) {\n    var max = Math.abs(ar[0]);\n    for (var i = 1; i < ar.length; i++) {\n        if (Math.abs(ar[i]) > max) {\n            max = Math.abs(ar[i]);\n        }\n    }\n    return max;\n}\n\nfunction arAdd(ar1, ar2) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    var res;\n    var b;\n    var d;\n    if (deg1 >= deg2) {\n        d = deg2;\n        res = ar1.concat();\n        b = ar2;\n    } else {\n        d = deg1;\n        res = ar2.concat();\n        b = ar1;\n    }\n    for (var i = 0; i <= d; i++) {\n        res[i] = res[i] + b[i];\n    }\n    return res;\n}\n\nfunction arGt(ar1, ar2) {\n    var deg1 = arDeg(ar1);\n    var deg2 = arDeg(ar2);\n    if (deg1 > deg2) {\n        return 1;\n    } else if (deg1 < deg2) {\n        return -1;\n    }\n    for (var i = deg1; i >= 0; i--) {\n        if (ar1[i] == ar2[i]) {\n            continue;\n        }\n        if (ar1[i] == 0 && ar2[i] != 0) {\n            return -1;\n        }\n        if (ar2[i] == 0 && ar1[i] != 0) {\n            return 1;\n        }\n        if (ar1[i] < 0 && ar2[i] > 0) {\n            return -1;\n        }\n        if (ar2[i] < 0 && ar1[i] > 0) {\n            return 1;\n        }\n        return Math.abs(ar1[i]) - Math.abs(ar2[i]);\n    }\n    return 0;\n}\n\n/*\n * deg(ar1) >= deg(ar2) + shift と仮定する\n * ar2 の 要素に k を掛けて index の大きい方に shift して ar1 に加える\n * ar1 は破壊的に変化する。\n */\nfunction arAddMulShift(ar1, ar2, k, shift) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    if (ar1.length < deg2 + shift + 1) {\n        throw new Error('invalid degree');\n    }\n    for (var i = 0; i <= deg2; i++) {\n        ar1[i+shift] = ar1[i+shift] + k * ar2[i];\n    }\n}\n\nfunction arSub(ar1, ar2) {\n    const deg1 = arDeg(ar1);\n    const deg2 = arDeg(ar2);\n    var res;\n    var b;\n    var d;\n    var s;\n    if (deg1 >= deg2) {\n        d = deg2;\n        res = ar1.concat();\n        s = -1;\n        b = ar2;\n    } else {\n        d = deg1;\n        res = ar2.concat();\n        s = 1;\n        b = ar1;\n        for (var i = 0; i < res.length; i++) {\n            res[i] = -res[i];\n        }\n    }\n    for (var i = 0; i <= d; i++) {\n        res[i] = res[i] + s * b[i];\n    }\n    return res;\n}\n\nfunction arMulK(ar, k) {\n    var res = ar.concat();\n    for (var i = 0; i < res.length; i++) {\n        res[i] = res[i] * k;\n    }\n    return res;\n}\n\nfunction arDivK(ar, k) {\n    var res = ar.concat();\n    for (var i = 0; i < res.length; i++) {\n        res[i] = res[i] / k;\n    }\n    return res;\n}\n\nfunction arGcdK(ar) {\n    var d = arDeg(ar);\n    if (d == -1) {\n        return 0;\n    }\n    var a = ar[d];\n    if (Math.abs(a) == 1) {\n        return a;\n    }\n    for (var i = 0; i < d; i++) {\n        if (ar[i] == 0) {\n            continue;\n        }\n        if (Math.abs(ar[i]) == 1) {\n            return Math.sign(ar[d]);\n        }\n        a = gcdInt(a, ar[i]);\n    }\n    return Math.sign(ar[d]) * Math.abs(a);\n}\n\nfunction arRandom(deg, max) {\n    var ar = new Array(deg + 1);\n    for (var i = 0; i <= deg; i++) {\n        var r = Math.trunc(Math.random() * max);\n        var sign = 1 - Math.trunc(Math.random() * 2) * 2;\n        ar[i] = sign * r;\n    }\n    while(ar[deg] == 0) {\n        ar[deg] = Math.trunc(Math.random() * max);\n    }\n    return ar;\n}\n\nfunction arIsTanko(ar) {\n    var deg = arDeg(ar);\n    for (var i = deg -1; i >= 0; i--) {\n        if (ar[i] != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/*\n * 多項式のクラス\n */\nclass Polynomial {\n    constructor(str, ar) {\n        this.indet = str;\n        this.ar = ar.concat();\n    }\n    static fromString(str) {\n        var sar = str.split(/[:,]/);\n        const indet = sar[0];\n        const ar = new Array(sar.length -1);\n        for (var i = 1; i < sar.length; i++) {\n            ar[i - 1] = parseInt(sar[i]);\n        }\n        return new Polynomial(indet, ar);\n    }\n    deg() {\n        return arDeg(this.ar);\n    }\n    isTanko() {\n        return arIsTanko(this.ar);\n    }\n    equal(pol) {\n        if (this.indet != pol.indet) {\n            return false;\n        }\n        return arEqual(this.ar, pol.ar);\n    }\n    isZero() {\n        return this.deg() == -1;\n    }\n    leadingK() {\n        return arLeadingK(this.ar);\n    }\n    tailingK() {\n        return this.ar[0];\n    }\n    toString() {\n        return arToString(this.indet, this.ar, this.deg());\n    }\n    toDescString() {\n        return arToDescString(this.indet, this.ar, this.deg());\n    }\n    /*\n     * return this * kx^n\n     */\n    kmulxn(k, n) {\n        const ar = new Array(this.deg()+n+1);\n        for (var i = 0; i <= this.deg(); i++) {\n            ar[i + n] = this.ar[i] * k;\n        }\n        for (var i = 0; i < n; i++) {\n            ar[i] = 0;\n        }\n        return new Polynomial(this.indet, ar);\n    }\n    add(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arAdd(this.ar, pol.ar);\n        return new Polynomial(this.indet, res);\n    }\n    sub(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arSub(this.ar, pol.ar);\n        return new Polynomial(this.indet, res);\n    }\n    gt(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        return arGt(this.ar, pol.ar);\n    }\n    mul(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero() || pol.isZero()) {\n            return new Polynomial(this.indet, [0]);\n        }\n        var pdeg = pol.deg();\n        var ar = new Array(this.deg() + pdeg + 1).fill(0);\n        for (var i = 0; i <= pdeg; i++) {\n            var k = pol.ar[i];\n            if (k != 0) {\n                arAddMulShift(ar, this.ar, k, i);\n            }\n        }\n        return new Polynomial(this.indet, ar);\n    }\n    maxK() {\n        return arMaxK(this.ar);\n    }\n    /*\n     * gcd of coefficients\n     */\n    gcdK() {\n        // var d = this.deg();\n        // if (d == -1) {\n        //     return 0;\n        // }\n        return arGcdK(this.ar);\n        // var a = this.ar[d];\n        // if (Math.abs(a) == 1) {\n        //     return a;\n        // }\n        // for (var i = 0; i < d; i++) {\n        //     if (this.ar[i] == 0) {\n        //         continue;\n        //     }\n        //     if (Math.abs(this.ar[i]) == 1) {\n        //         return Math.sign(this.ar[d]);\n        //     }\n        //     a = gcdInt(a, this.ar[i]);\n        // }\n        // return Math.sign(this.ar[d]) * Math.abs(a);\n    }\n    /*\n     * 係数の gcd をくくり出し、それで割った多項式と共に返す\n     */\n    gcdKP() {\n        const a = this.gcdK();\n        const ar = this.ar.concat();\n        for (var i = 0; i <= this.deg(); i++) {\n            ar[i] = ar[i] / a;\n        }\n        return [a, new Polynomial(this.indet, ar)];\n    }\n    gcdKPX() {\n        const a = this.gcdK();\n        var n = 0;\n        for (var i = 0; i <= this.deg(); i++) {\n            if (this.ar[i] != 0) {\n                n = i;\n                break;\n            }\n        }\n        var xar = new Array(n + 1).fill(0);\n        // console.log('n = ' + n);\n        xar[n] = a;\n        // console.log(xar);\n        var r1 = new Polynomial(this.indet, xar);\n        var r2 = this.divrem(r1)[0];\n        return [r1, r2];\n    }\n    /*\n     * differential 多項式の微分\n     */\n    d() {\n        var d = this.deg();\n        if (d <= 0) {\n            return new Polynomial(this.indet, [0]);\n        }\n        var ar = new Array(d);\n        for (var i = 1; i <= d; i++) {\n            ar[i - 1] = this.ar[i] * i;\n        }\n        return new Polynomial(this.indet, ar);\n    }\n    modK(mod) {\n        if (mod <= 1) {\n            throw new Error('zero divide');\n        }\n        var ar = this.ar.concat();\n        arStandard(ar, mod);\n        return new Polynomial(this.indet, ar);\n    }\n    /*\n     * 余り付き割り算\n     * return [p, r], where p*pol + r = this\n     */\n    divrem(pol) {\n        if (this.indet != pol.indet) {\n            console.log('this.indet = ' + this.indet);\n            console.log('pol.indet = ' + pol.indet);\n            throw new Error('indetermint mismatch');\n        }\n        if (pol.isZero()) {\n            throw new Error('zero divide');\n        }\n        if (this.deg() < pol.deg()) {\n            return [new Polynomial(this.indet, [0]),\n                    new Polynomial(this.indet, this.ar)];\n        }\n        var tl = arLeadingK(this.ar);\n        var pl = arLeadingK(pol.ar);\n        if (tl % pl != 0) {\n            return [new Polynomial(this.indet, [0]),\n                    new Polynomial(this.indet, this.ar)];\n        }\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1).fill(0);\n        ar[diff] = tl / pl;\n        // for (var i = 0; i < diff; i++) {\n        //     ar[i] = 0;\n        // }\n        var tmp = this.sub(pol.kmulxn(tl/pl, diff));\n        while (diff > 0) {\n            diff = tmp.deg() - pol.deg();\n            tl = tmp.leadingK();\n            if (tl % pl != 0 || diff < 0) {\n                return [new Polynomial(this.indet, ar), tmp];\n            }\n            ar[diff] = tl / pl;\n            tmp = tmp.sub(pol.kmulxn(tl/pl, diff));\n        }\n        return [new Polynomial(this.indet, ar), tmp];\n    }\n    /*\n     * 余り付き割り算（インチキ）\n     * return [p, r], where p*pol + r = this\n     */\n    remX(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        if (pol.isZero()) {\n            throw new Error('zero divide');\n        }\n        if (this.deg() < pol.deg()) {\n            return new Polynomial(this.indet, this.ar);\n        }\n        var tl = this.leadingK();\n        var pl = pol.leadingK();\n        // if (tl % pl != 0) {\n        //     return [new Polynomial(this.indet, [0]),\n        //             new Polynomial(this.indet, this.ar)];\n        // }\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1).fill(0);\n        var tmp = new Polynomial(this.indet, this.ar);\n        if (tl % pl != 0) {\n            const m = lcmInt(tl, pl) / tl;\n            tl = tl * m;\n            tmp = tmp.kmulxn(m, 0);\n        }\n        ar[diff] = tl / pl;\n        tmp = tmp.sub(pol.kmulxn(tl/pl, diff));\n        while (diff > 0 && !tmp.isZero()) {\n            diff = tmp.deg() - pol.deg();\n            if (diff < 0) {\n                break;\n            }\n            tl = tmp.leadingK();\n            if (tl % pl != 0) {\n//                return [new Polynomial(this.indet, ar), tmp];\n                const m = lcmInt(tl, pl) / tl;\n                tl = tl * m;\n                tmp = tmp.kmulxn(m, 0);\n            }\n            ar[diff] = tl / pl;\n            tmp = tmp.sub(pol.kmulxn(tl/pl, diff));\n        }\n        const kp = tmp.gcdKP();\n        return kp[1];\n    }\n    gcd(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        var a = this;\n        var b = pol;\n        var t = this.gcdKP();\n        var ak = t[0];\n        a = t[1];\n        t = pol.gcdKP();\n        var bk = t[0]\n        b = t[1];\n        var gcdK = gcdInt(ak, bk);\n        if (b.deg() > a.deg()) {\n            return b.gcd(a);\n        }\n        if (b.deg() == a.deg() && b.leadingK() > a.leadingK()) {\n            return b.gcd(a);\n        }\n        while (!b.isZero()) {\n            var t = b;\n            var tmp = a.divrem(b);\n            b = tmp[1];\n            if (b.deg() >= a.deg()) {\n                return new Polynomial(this.indet, [gcdK]);\n            }\n            a = t;\n        }\n        if (a.deg() == 0 && a.leadingK() == -1) {\n            return new Polynomial(this.indet, [1]);\n        } else {\n            return a.kmulxn(gcdK, 0);\n        }\n    }\n    gcdX(pol) {\n        if (this.indet != pol.indet) {\n            throw new Error('indetermint mismatch');\n        }\n        var a = this;\n        var b = pol;\n        // console.log('a = ' + a.toString());\n        // console.log('b = ' + b.toString());\n        var t = this.gcdKP();\n        var ak = t[0];\n        a = t[1];\n        t = pol.gcdKP();\n        var bk = t[0]\n        b = t[1];\n        var gcdK = gcdInt(ak, bk);\n        if (b.deg() > a.deg()) {\n            return b.gcd(a);\n        }\n        if (b.deg() == a.deg() && b.leadingK() > a.leadingK()) {\n            return b.gcdX(a);\n        }\n        while (!b.isZero()) {\n            // console.log('a = ' + a.toString());\n            // console.log('b = ' + b.toString());\n            var t = b;\n            //var tmp = a.divrem(b);\n            b = a.remX(b);\n            // if (b.deg() >= a.deg()) {\n            //     return new Polynomial(this.indet, [gcdK]);\n            // }\n            a = t;\n            // console.log('gcdx a = ' + a.toString());\n            // console.log('gcdx b = ' + b.toString());\n        }\n        // console.log('a = ' + a.toString());\n        // console.log('b = ' + b.toString());\n        // console.log('gcdK = ' + gcdK);\n        // remXではgcdを括り出しているので-1にならない\n//        if (a.deg() == 0 && a.leadingK() == -1) {\n        if (a.deg() == 0) {\n            return new Polynomial(this.indet, [1]);\n        } else {\n            return a.kmulxn(gcdK, 0);\n        }\n    }\n    squareFree() {\n        var d = this.d().gcdKP()[1];\n//        var g = this.gcd(d);\n        var g = this.gcdX(d);\n        if (g.deg() > 0) {\n            var t = this.divrem(g);\n            if (!t[0].isZero()) {\n                return t[0];\n            } else {\n                var t = this.gcdKP()[1];\n                return new Polynomial(t.indet, t.ar);\n            }\n        } else {\n            var t = this.gcdKP()[1];\n            return new Polynomial(t.indet, t.ar);\n        }\n    }\n    static getRandom(indet, deg, max) {\n        deg = Math.trunc(deg);\n        max = Math.trunc(max);\n        if (deg < 1) {\n            throw new Error('deg too small');\n        }\n        if (max < 2) {\n            throw new Error('max too small');\n        }\n        var array = arRandom(deg, max);\n        return new Polynomial(indet, array);\n    }\n}\n\nclass PolynomialMP {\n    constructor(indet, ar, mod, base = mod) {\n        this.indet = indet;\n        this.ar = ar.concat();\n        this.mod = mod;\n        this.base = base;\n        this.standard();\n    }\n    static fromPolynomial(pol, mod, base = mod) {\n        return new PolynomialMP(pol.indet, pol.ar, mod, base);\n    }\n    toPolynomial() {\n        return new Polynomial(this.indet, this.ar);\n    }\n    equal(pol) {\n        if (this.indet != pol.indet) {\n            return false;\n        }\n        if (this.mod != pol.mod) {\n            return false;\n        }\n        return arEqual(this.ar, pol.ar);\n    }\n    toNewMod(mod) {\n        if (mod % this.base != 0) {\n            throw new Error('invalid mod');\n        }\n        return new PolynomialMP(this.indet, this.ar, mod, this.base);\n    }\n    getMod() {\n        return this.mod;\n    }\n    standard() {\n        arStandard(this.ar, this.mod);\n    }\n    toString() {\n        return arToString(this.indet, this.ar, this.deg())+\n            '(' + this.mod + ')';\n    }\n    deg() {\n        return arDeg(this.ar);\n    }\n    isZero() {\n        return this.deg() == -1;\n    }\n    leadingK() {\n        return arLeadingK(this.ar);\n    }\n    add(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arAdd(this.ar, pol.ar);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    sub(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        const res = arSub(this.ar, pol.ar);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    mulK(k) {\n        const res = arMulK(this.ar, k);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    divK(k) {\n        const res = arDivK(this.ar, k);\n        return new PolynomialMP(this.indet, res, this.mod, this.base);\n    }\n    /*\n     * differential 多項式の微分\n     */\n    d() {\n        var d = this.deg();\n        if (d <= 0) {\n            return new PolynomialMP(this.indet, [0], this.mod, this.base);\n        }\n        var ar = new Array(d).fill(0);\n        for (var i = 1; i <= d; i++) {\n            ar[i - 1] = this.ar[i] * i;\n        }\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    hasSquare() {\n        var d = this.d();\n        var g = this.gcd(d);\n        if (g.deg() > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    squareFree() {\n        var d = this.d();\n        var g = this.gcd(d);\n        if (g.deg() > 0) {\n            var t = this.divRem(g);\n            return t[0].toMonic();\n        } else {\n            return this.toMonic();\n        }\n    }\n\n    /*\n     * gcd of coefficients\n     */\n    gcdK() {\n        // var d = this.deg();\n        // if (d == -1) {\n        //     return 0;\n        // }\n        return arGcdK(this.ar);\n    }\n    gcdDiv() {\n        var d = this.deg();\n        if (d == -1) {\n            return this;\n        }\n        var g = arGcdK(this.ar);\n        var ar = arDivK(this.ar, g);\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    mul(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero() || pol.isZero()) {\n            return new PolynomialMP(this.indet, [0], this.mod, this.base);\n        }\n        var pdeg = pol.deg();\n        var ar = new Array(this.deg() + pdeg + 1).fill(0);\n        for (var i = 0; i <= pdeg; i++) {\n            var k = pol.ar[i];\n            if (k != 0) {\n                arAddMulShift(ar, this.ar, k, i);\n            }\n        }\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    canBeMonic() {\n        const lk = this.leadingK();\n        if (lk == 1) {\n            return true;\n        }\n        if (this.mod == this.base) {\n            return true;\n        } else if (lk % this.base != 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    toMonic() {\n        const lk = this.leadingK();\n        if (lk == 1) {\n            return this;\n        }\n        var inv;\n        if (this.mod == this.base) {\n            inv = inverse(lk, this.mod);\n        } else if (lk % this.base != 0) {\n            inv = inverse(lk, this.mod);\n        } else {\n            console.log('cannot change to monic :' + this.toString());\n            throw new Error('cannot change to monic');\n        }\n        var ar = this.ar.concat();\n        for (var i = 0; i < ar.length; i++) {\n            ar[i] = ar[i] * inv;\n        }\n        return new PolynomialMP(this.indet, ar, this.mod, this.base);\n    }\n    gt(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        return arGt(this.ar, pol.ar);\n    }\n    /*\n     * 余り付き割り算\n     * return [p, r], where p*pol + r = this\n     */\n    divRem(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero()) {\n            return [new PolynomialMP(this.indet, [0], this.mod, this.base),\n                    new PolynomialMP(this.indet, [0], this.mod, this.base)];\n        }\n        if (pol.isZero()) {\n            throw new Error('zero divide');\n        }\n        if (this.deg() < pol.deg()) {\n            return [new PolynomialMP(this.indet, [0], this.mod, this.base),\n                    new PolynomialMP(this.indet, this.ar, this.mod, this.base)];\n        }\n        if (this.base == this.mod) {\n            return this.divRem1(pol);\n        } else {\n            return this.divRem2(pol);\n        }\n    }\n    /*\n     * mod p の場合\n     */\n    divRem1(pol) {\n        // console.log('in divRem1');\n        var tl = arLeadingK(this.ar);\n        var pl = arLeadingK(pol.ar);\n        const invpl = inverse(pl, this.mod);\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1);\n        for (var i = 0; i <= diff; i++) {\n            ar[i] = 0;\n        }\n        var mul = (tl * invpl) % this.mod;\n        // console.log('mul = ' + mul);\n        ar[diff] = mul;\n        var tmp = this.ar.concat();\n        // console.log('tmp = ' + arToString('x', tmp));\n        arAddMulShift(tmp, pol.ar, this.mod - mul, diff);\n        // console.log('tmp = ' + arToString('x', tmp));\n        arStandard(tmp, this.mod);\n        // console.log('tmp = ' + arToString('x', tmp));\n        // console.log('divrem ar = ' + arToString('x', ar));\n        // console.log('divrem tmp = ' + arToString('x', tmp));\n        // console.log('divrem pol = ' + arToString('x', pol));\n        //var cnt = diff;\n        diff = arDeg(tmp) - pol.deg();\n        while (diff >= 0) {\n            // if (cnt < 0) {\n            //     throw new Error('count over');\n            // }\n            // cnt--;\n            // console.log('divrem ar = ' + arToString('x', ar));\n            // console.log('divrem tmp = ' + arToString('x', tmp));\n            // console.log('divrem pol = ' + arToString('x', pol));\n            tl = arLeadingK(tmp);\n            mul = (tl * invpl) % this.mod;\n            ar[diff] = mul;\n            arAddMulShift(tmp, pol.ar, -mul, diff);\n            arStandard(tmp, this.mod);\n            diff = arDeg(tmp) - pol.deg();\n        }\n        return [new PolynomialMP(this.indet, ar, this.mod, this.base),\n                new PolynomialMP(this.indet, tmp, this.mod, this.base)];\n    }\n    /*\n     * mod p^n の場合\n     */\n    divRem2(pol) {\n        var tl = arLeadingK(this.ar);\n        var pl = arLeadingK(pol.ar);\n        var inversible = false;\n        var invpl;\n        var mul;\n        if (pl % pol.base != 0) {\n            inversible = true;\n            invpl = inverse(pl, this.mod);\n            mul = (tl * invpl) % this.mod;\n        } else if (tl % pl == 0) {\n            mul = Math.trunc(tl / pl);\n        } else {\n            return [new PolynomialMP(this.indet, [0], this.mod, this.base),\n                    new PolynomialMP(this.indet, this.ar, this.mod, this.base)];\n        }\n        var diff = this.deg() - pol.deg();\n        const ar = new Array(diff+1);\n        for (var i = 0; i <= diff; i++) {\n            ar[i] = 0;\n        }\n        ar[diff] = mul;\n        var tmp = this.ar.concat();\n        arAddMulShift(tmp, pol.ar, -mul, diff);\n        arStandard(tmp, this.mod);\n        // console.log('divrem ar = ' + arToString('x', ar));\n        // console.log('divrem tmp = ' + arToString('x', tmp));\n        // console.log('divrem pol = ' + arToString('x', pol));\n        //var cnt = diff;\n        diff = arDeg(tmp) - pol.deg();\n        while (diff >= 0) {\n            // if (cnt < 0) {\n            //     throw new Error('count over');\n            // }\n            // cnt--;\n            // console.log('divrem ar = ' + arToString('x', ar));\n            // console.log('divrem tmp = ' + arToString('x', tmp));\n            // console.log('divrem pol = ' + arToString('x', pol));\n            tl = arLeadingK(tmp);\n            if (inversible) {\n                mul = (tl * invpl) % this.mod;\n            } else if (tl % pl == 0) {\n                mul = Math.trunc(tl / pl);\n            } else {\n                return [new PolynomialMP(this.indet, ar, this.mod, this.base),\n                        new PolynomialMP(this.indet, tmp, this.mod, this.base)];\n            }\n            ar[diff] = mul;\n            arAddMulShift(tmp, pol.ar, -mul, diff);\n            arStandard(tmp, this.mod);\n            diff = arDeg(tmp) - pol.deg();\n        }\n        return [new PolynomialMP(this.indet, ar, this.mod, this.base),\n                new PolynomialMP(this.indet, tmp, this.mod, this.base)];\n    }\n    gcd(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.deg() < pol.deg()) {\n            return pol.gcd(this);\n        }\n        var a = this;\n        var b = pol;\n        while (!b.isZero()) {\n            var t = b;\n            var c = a.divRem(b);\n            b = c[1];\n            a = t;\n        }\n        return a;\n    }\n    exGcd(pol) {\n        if (this.indet != pol.indet || this.mod != pol.mod) {\n            throw new Error('indetermint mismatch');\n        }\n        if (this.isZero() || pol.isZero()) {\n            throw new Error('not supported');\n        }\n        if (this.deg() < pol.deg()) {\n            var x = pol.exGcd(this);\n            return [x[1], x[0], x[2]];\n        }\n        const zero = new PolynomialMP(this.indet, [0], this.mod, this.base);\n        const one = new PolynomialMP(this.indet, [1], this.mod, this.base);\n        var r0 = this;\n        var r1 = pol;\n        var a0 = one;\n        var a1 = zero;\n        var b0 = zero;\n        var b1 = one;\n        while (!r1.isZero()) {\n            var tmp = r0.divRem(r1);\n            var q1 = tmp[0];\n            var r2 = tmp[1];\n            var a2 = a0.sub(q1.mul(a1));\n            var b2 = b0.sub(q1.mul(b1));\n            r0 = r1;\n            r1 = r2;\n            a0 = a1;\n            a1 = a2;\n            b0 = b1;\n            b1 = b2;\n        }\n        if (r0.deg() == 0 && r0.leadingK() != 1) {\n            var inv = inverse(r0.leadingK(), this.mod);\n            a0 = a0.mulK(inv);\n            b0 = b0.mulK(inv);\n            r0 = r0.mulK(inv);\n        }\n        return [a0, b0, r0];\n    }\n    power(n) {\n        if (n < 0 || !Number.isInteger(n)) {\n            throw new Error('not supported');\n        }\n        var x = this;\n        var res = new PolynomialMP(this.indet, [1], this.mod, this.base);\n        while (n != 0) {\n            if ((n % 2) == 1) {\n                res = res.mul(x);\n            }\n            x = x.mul(x);\n            n = n >> 1;\n        }\n        return res;\n    }\n    powerMod(n, modp) {\n        if (n < 0 || !Number.isInteger(n)) {\n            throw new Error('not supported');\n        }\n        if (modp.isZero()) {\n            throw new Error('zero divide');\n        }\n        var x = this;\n        var res = new PolynomialMP(this.indet, [1], this.mod, this.base);\n        while (n != 0) {\n            if ((n % 2) == 1) {\n                res = res.mul(x);\n                res = res.divRem(modp)[1];\n            }\n            //console.log(x);\n            x = x.mul(x);\n            x = x.divRem(modp)[1];\n            n = n >> 1;\n        }\n        return res;\n    }\n}\n\n//module.exports = Polynomial;\nexports.Polynomial = Polynomial;\nexports.PolynomialMP = PolynomialMP;\n\nexports.arToString = arToString;\nexports.arStandard = arStandard;\nexports.arEqual = arEqual;\nexports.arDeg = arDeg;\nexports.arLeadingK = arLeadingK;\nexports.arMaxK = arMaxK;\nexports.arAdd = arAdd;\nexports.arAddMulShift = arAddMulShift;\nexports.arSub = arSub;\nexports.arGt = arGt;\nexports.arXn = arXn;\nexports.arRandom = arRandom;\n","class Sosu {\n    static PRIMES = [\n        2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\n        67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\n        139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n        211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277,\n        281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\n        367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\n        443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521,\n        523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\n        613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683,\n        691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773,\n        787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967,\n        971, 977, 983, 991, 997];\n    static MaxPrime = 997;\n    static getPrimes() {\n        return Sosu.PRIMES.concat();\n    }\n    static getMaxPrime() {\n        return Sosu.MaxPrime;\n    }\n    static getPrimesTo(n) {\n        var p = new Array(n+1).fill(1);\n        p[0] = 0;\n        p[1] = 0;\n        for (var i = 2; i <= n; i++) {\n            if (p[i] != 1) {\n                continue;\n            }\n            var q = i;\n            for (var j = 2; q * j <= n; j++) {\n                p[q*j] = 0;\n            }\n        }\n        var res = [];\n        for (var i = 0; i < p.length; i++) {\n            if (p[i] == 1) {\n                res.push(i);\n            }\n        }\n        return res;\n    }\n    static integerFactorize(num) {\n        num = Math.trunc(num);\n        var res = [];\n        if (num > Sosu.MaxPrime * Sosu.MaxPrime) {\n            return res;\n        }\n        while (num > 1) {\n            for (var i = 0; i < Sosu.PRIMES.length; i++) {\n                var p = Sosu.PRIMES[i];\n                if (num % p == 0) {\n                    num = num / p;\n                    res.push(p);\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n}\n\nclass MulCMB {\n    // var idx;\n    // var ar;\n    constructor(array) {\n        this.ar = array.concat();\n        this.idx = 0;\n    }\n    done() {\n        return this.idx >= 2**this.ar.length;\n    }\n    reset() {\n        this.idx = 0;\n    }\n    next() {\n        if (this.done()) {\n            return false;\n        }\n        var res = 1;\n        var x = this.idx;\n        var y = 0;\n        this.idx++;\n        while (x > 0) {\n            if (x % 2 == 1) {\n                res = res * this.ar[y];\n            }\n            x = Math.trunc(x / 2);\n            y++;\n        }\n        return res;\n    }\n    getList() {\n        var result = [];\n        while (!this.done()) {\n            var el = this.next();\n            if (!result.includes(el)) {\n                result.push(el);\n            }\n        }\n        return result;\n    }\n}\n\nexports.Sosu = Sosu;\nexports.MulCMB = MulCMB;\n","/**\n * @file tinymtjs.js\n *\n * @brief Tiny Mersenne Twister for Java Script.\n * Intitialization functions are modified to fit Javascript numbers.\n *\n * Originai authors:\n * @author Mutsuo Saito (Hiroshima University)\n * @author Makoto Matsumoto (The University of Tokyo)\n *\n * Copyright (C) 2011 Mutsuo Saito, Makoto Matsumoto,\n * Hiroshima University and The University of Tokyo.\n * All rights reserved.\n *\n * modified by\n * @author Taro Suginami\n * Copyright (C) 2022 Taro Suginami.\n * All rights reserved.\n *\n * original program is TinyMT32.java\n * http://www.math.sci.hiroshima-u.ac.jp/m-mat/MT/TINYMT/JAVA/index.html\n *\n * parameters, (mat1, mat2, tmat) are taken from\n * http://www.math.sci.hiroshima-u.ac.jp/m-mat/MT/TINYMT/DATA/index.html\n * tinymt32dc.0-4.65536.tar.gz\n * tinymt32dc.0.65536.txt\n * last line\n * ab5a14fcfae73ebad2addf92bef887b1,32,0,e99e1d33,42f090bd,ac3ff3ff,77,0\n *\n */\n/*\nCopyright (c) 2011, 2013 Mutsuo Saito, Makoto Matsumoto,\nHiroshima University and The University of Tokyo.\nAll rights reserved.\nCopyright (C) 2022 Taro Suginami.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of the Hiroshima University nor the names of\n      its contributors may be used to endorse or promote products\n      derived from this software without specific prior written\n      permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nconst MMMM    = 0xffffffff;\nconst UNSMASK = 0x7fffffff;\nconst MIN_LOOP = 8;\nconst MASK = 0x7fffffff;\nconst MAT1 = 0xe99e1d33;\nconst MAT2 = 0x42f090bd;\nconst TMAT = 0xac3ff3ff;\nconst SH0 = 1;\nconst SH1 = 10;\nconst SH8 = 8;\n\nfunction ini_func1JS(x) {\n    x = (x ^ (x >>> 27) ^ (x << 19)) & UNSMASK;\n    return (x * 26125) & MMMM;\n}\nfunction ini_func2JS(x) {\n    x = (x ^ (x >>> 27) ^ (x << 19)) & UNSMASK;\n    return (x * 559973) & MMMM;\n}\n\nclass TinyMTJS {\n    constructor(seed) {\n        this.st0 = 0;\n        this.st1 = 0;\n        this.st2 = 0;\n        this.st3 = 0;\n        this.setSeed(seed);\n    }\n    setSeed(seed) {\n        if (typeof seed === 'string' || seed instanceof String) {\n            var aseed = seed.split('').map((v) => v.charCodeAt());\n            this.setSeedArray(aseed);\n        } else if (Array.isArray(seed)) {\n            this.setSeedArray(seed);\n        } else {\n            this.setSeedNumber(seed);\n        }\n    }\n    // Seeding for Java Script, modified by Taro Suginami\n    // private\n    setSeedNumber(seed) {\n        var status = Array(4);\n        status[0] = seed & MMMM;\n        status[1] = MAT1;\n        status[2] = MAT2;\n        status[3] = TMAT;\n        for (var i = 1; i < MIN_LOOP; i++) {\n            var x = status[(i - 1) & 3];\n            x = x ^ (x >>> 30) ^ (x << 17);\n            status[i & 3] ^= i + 30157 * (x & UNSMASK);\n        }\n        this.st0 = status[0];\n        this.st1 = status[1];\n        this.st2 = status[2];\n        this.st3 = status[3];\n        if (((this.st0 & MASK) == 0) &&\n            (this.st1 == 0) &&\n            (this.st2 == 0) &&\n            (this.st3 == 0)) {\n            this.st0 = 'T'.charCodeAt(0);\n            this.st1 = 'I'.charCodeAt(0);\n            this.st2 = 'N'.charCodeAt(0);\n            this.st3 = 'Y'.charCodeAt(0);\n        }\n        for (var i = 0; i < MIN_LOOP; i++) {\n            this.next();\n        }\n    }\n    // Seeding for Java Script, modified by Taro Suginami\n    // private\n    setSeedArray(init_key) {\n        if (!Array.isArray(init_key)) {\n            throw new Error('TinyMTJS.setSeedArray: Seed type mismatch.');\n        }\n        const lag = 1;\n        const mid = 1;\n        const size = 4;\n        var i;\n        var j;\n        var count;\n        var r;\n        var status = Array(4);\n        var key_length;\n\n        key_length = init_key.length;\n        status[0] = 0;\n        status[1] = MAT1;\n        status[2] = MAT2;\n        status[3] = TMAT;\n        if (key_length + 1 > MIN_LOOP) {\n            count = key_length + 1;\n        } else {\n            count = MIN_LOOP;\n        }\n        r = ini_func1JS(status[0] ^ status[mid % size] ^\n                        status[(size - 1) % size]);\n        status[mid % size] = (status[mid % size] + r) & MMMM;\n        r = (r + key_length);// & UNSMASK;\n        status[(mid + lag) % size] = (status[(mid + lag) % size] + r) & MMMM;\n        status[0] = r;\n        count--;\n        for (i = 1, j = 0; (j < count) && (key_length > 0); j++) {\n            r = ini_func1JS(status[i % size] ^\n                            status[(i + mid) % size] ^\n                            status[(i + size - 1) % size]);\n            status[(i + mid) % size] = (status[(i + mid) % size] + r) & MMMM;\n            r = (r + init_key[j % key_length] + i) & MMMM;\n            status[(i + mid + lag) % size] =\n                (status[(i + mid + lag) % size] + r) & MMMM;\n            status[i % size] = r;\n            i = (i + 1) % size;\n        }\n        for (j = 0; j < size; j++) {\n            r = ini_func2JS(status[i % size] +\n                            status[(i + mid) % size] +\n                            status[(i + size - 1) % size]);\n            status[(i + mid) % size] ^= r;\n            r -= i;\n            status[(i + mid + lag) % size] ^= r;\n            status[i % size] = r;\n            i = (i + 1) % size;\n        }\n        this.st0 = status[0];\n        this.st1 = status[1];\n        this.st2 = status[2];\n        this.st3 = status[3];\n        if (((this.st0 & MASK) == 0) &&\n            (this.st1 == 0) &&\n            (this.st2 == 0) &&\n            (this.st3 == 0)) {\n            this.st0 = 'T'.charCodeAt(0);\n            this.st1 = 'I'.charCodeAt(0);\n            this.st2 = 'N'.charCodeAt(0);\n            this.st3 = 'Y'.charCodeAt(0);\n        }\n        for (var i = 0; i < MIN_LOOP; i++) {\n            this.next();\n        }\n    }\n\n    getInt31() {\n        var v = this.next();\n        return v >>> 1;\n    }\n\n    getDouble31() {\n        return (this.getInt31() * 1.0) / 0x80000000;// 31bit int to double\n    }\n\n    getInt(max) {\n        return Math.floor(this.getDouble31() * max);\n    }\n\n    next() {\n        var y = this.st3;\n        var x = (this.st0 & MASK) ^ this.st1 ^ this.st2;\n        x ^= (x << SH0) & MMMM;\n        y ^= (y >>> SH0) ^ x;\n        this.st0 = this.st1;\n        this.st1 = this.st2;\n        this.st2 = x ^ ((y << SH1) & MMMM);\n        this.st3 = y;\n        if ((y & 1) == 1) {\n            this.st1 ^= MAT1;\n            this.st2 ^= MAT2;\n        }\n        var t0 = this.st3;\n        var t1 = (this.st0 + (this.st2 >>> SH8)) & MMMM;\n        t0 ^= t1;\n        if ((t1 & 1) == 1) {\n            t0 ^= TMAT;\n        }\n        return t0;\n    }\n}\n\nexports.TinyMTJS = TinyMTJS;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const polymodule = require('./polynomial');\nconst kzmodule = require('./kz');\n//const sosumd = require('./sosu');\nconst Polynomial = polymodule.Polynomial;\n//const PolynomialMP = polymodule.PolynomialMP;\nconst KZ = kzmodule.KZ;\n//const Sosu = sosumd.Sosu;\n\nconst MAX_K = 1000;\nvar app = {};\napp.poly = '';\n\nfunction dispButton() {\n    const indet = document.getElementById('indet').value.trim();\n    const keisu = document.getElementById('keisu').value.trim();\n    const array = keisu.split(/ +/).map(x => parseInt(x,10));\n    if (array.length > 0) {\n        app.poly = new Polynomial(indet[0], array.reverse());\n        const sp = document.getElementById('disppoly');\n        var str = app.poly.toDescString();\n        str = str.replaceAll(/\\^([0-9]+)/g, \"<sup>$1</sup>\");\n        sp.innerHTML = str;\n    }\n}\n\nfunction fzButton() {\n    if (app.poly instanceof Polynomial) {\n        const kz = new KZ(app.poly);\n        kz.factorize();\n        var str = kz.getStringFactors();\n        str = str.replaceAll(/\\^([0-9]+)/g, \"<sup>$1</sup>\");\n        const sp = document.getElementById('result');\n        sp.innerHTML = str;\n    }\n}\n\nfunction processDark() {\n    const userMod = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const sMode = window.sessionStorage.getItem('user');\n    const el = document.documentElement;\n\n    if(sMode) {\n        el.setAttribute('theme', sMode);\n    } else {\n        if(userMod == true) {\n            el.setAttribute('theme', 'dark');\n        } else {\n            el.setAttribute('theme', 'light');\n        }\n    }\n\n    document.getElementById(\"changeMode\").onclick = function() {\n        const nowMode = el.getAttribute('theme');\n        if(nowMode == 'dark') {\n            el.setAttribute('theme', 'light');\n            window.sessionStorage.setItem('user', 'light');\n        } else {\n            el.setAttribute('theme', 'dark');\n            window.sessionStorage.setItem('user', 'dark');\n        }\n    };\n}\n\nfunction setOnClick() {\n    const disp = document.getElementById('disp');\n    const factorize = document.getElementById('factorize');\n    disp.onclick = dispButton;\n    factorize.onclick = fzButton;\n}\n\nfunction init(prarray, prtype) {\n    processDark();\n    setOnClick();\n}\n\nwindow.onload = init;\n"],"names":["gcdInt","x","y","gcdInt2","Math","abs","a","b","t","exgcd","Error","r0","r1","a0","a1","b0","b1","q1","trunc","r2","a2","b2","exports","lcmInt","inverse","mod","r","polymodule","require","eucmodule","sosumd","tinymd","Polynomial","PolynomialMP","Sosu","MulCMB","TinyMTJS","uniqPush","ar","el","i","length","equal","push","uniqPushMonic","canBeMonic","toMonic","uniqJoin","ar1","ar2","result","concat","randomPMP","indet","deg","tiny","Array","getInt","arModToInt","array","mul","half","check2","poly","n","res","divrem","isZero","checkList2","factors","KZ","pol","this","original","w","gcdKPX","gcdK","gcdP","free","squareFree","resultFactors","tinymt","lk","least","max","primes","getPrimes","pmax","count","m","min","p","includes","freeMP","prime","one","uniqJoinMonic","kz1","sort","gt","work","fncnt","maxfncnt","checkPush","gcd","find","qu","divRem","bx","bx1","add","sub","subfactors","gb","hb","fb","f","tmp","exGcd","gn","hn","g0","h0","nextMod","fn","fromPolynomial","toNewMod","q","pn","qn","lift","orig","lkFactors","p2","mcmlist","getList","lifted","integerFactorize","leadingK","checkAndm","lst","firstFactor","tkFactors","tailingK","leadmcmb","tailmcmb","done","next","reset","tk","get1degs","prelist","gcdPol","success","fz1","tryfactors","selectPrimeN","fz2","fcs","len","k","el0","isFactorsMatch","matchedF","j","found","matchedFactors","checked","longestF","longest","longestFactors","gcdi","freei","maxK","kz","liftFactors","intFactors","checkFactors","desc","s","kxn","toString","toDescString","euclid","arDeg","arEqual","deg1","arToString","sep","arStandard","arLeadingK","arMaxK","arAdd","d","deg2","arGt","arAddMulShift","shift","arSub","arDivK","arGcdK","sign","arRandom","random","str","arIsTanko","arToDescString","pdeg","fill","xar","console","log","tl","pl","diff","kmulxn","gcdKP","ak","bk","gcdX","remX","g","sar","split","parseInt","base","standard","arMulK","inv","divRem1","divRem2","invpl","inversible","zero","mulK","Number","isInteger","modp","arXn","PRIMES","MaxPrime","num","idx","MMMM","UNSMASK","MASK","MAT1","MAT2","TMAT","ini_func1JS","seed","st0","st1","st2","st3","setSeed","String","aseed","map","v","charCodeAt","setSeedArray","isArray","setSeedNumber","status","init_key","key_length","mid","getInt31","floor","getDouble31","t0","t1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","kzmodule","app","dispButton","document","getElementById","value","trim","reverse","sp","replaceAll","innerHTML","fzButton","factorize","getStringFactors","window","onload","prarray","prtype","userMod","sMode","disp","matchMedia","matches","sessionStorage","getItem","documentElement","setAttribute","onclick","getAttribute","setItem"],"sourceRoot":""}